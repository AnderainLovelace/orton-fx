SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    1

************ OBJECT LISTING ************

FILE NAME: E:\Anderain\fx-9860\Orton\level.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c     1    #include <stdlib.h> //for malloc, free and memcpy
         level.c     2    #include <string.h> //for strlen and strcpy
         level.c     3    #include "level.h"
         level.c     4    
         level.c     5    Level* load_level(int n)
P   00000000              _load_level:                     ; function: load_level
                                                           ; frame size=1132
                                                           ; used runtime library name:
                                                           ; __quick_mvn, __slow_mvn, __quick_evn_mvn, __quick_odd_mvn
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
    0000000A 2F96                   MOV.L       R9,@-R15
    0000000C 2F86                   MOV.L       R8,@-R15
    0000000E 6943                   MOV         R4,R9
         level.c     6    {
         level.c     7            Level* level;
         level.c     8            
         level.c     9            level = malloc(sizeof(Level));
    00000010 DC3E                   MOV.L       L671+12,R12; _malloc
    00000012 4F22                   STS.L       PR,@-R15
    00000014 9074                   MOV.W       L671,R0    ; H'FC2C
    00000016 3F0C                   ADD         R0,R15
    00000018 4C0B                   JSR         @R12
    0000001A E434                   MOV         #52,R4
         level.c    10            level->id = n;
         level.c    11            level->type = GAME;
         level.c    12            level->width = 0;
         level.c    13            level->height = 0;
         level.c    14            level->map = 0;
         level.c    15            level->line = 0;
         level.c    16            level->nb_lines = 0;
         level.c    17            level->wall = 0;
         level.c    18            level->nb_walls = 0;
         level.c    19            level->message = 0;
         level.c    20            level->nb_messages = 0;
         level.c    21            level->thrower = 0;
         level.c    22            level->nb_throwers = 0;
         level.c    23            if(n == 0)
    0000001C DB3C                   MOV.L       L671+16,R11; _memcpy
    0000001E 2998                   TST         R9,R9
    00000020 6E03                   MOV         R0,R14
    00000022 ED00                   MOV         #0,R13
    00000024 2E92                   MOV.L       R9,@R14
    00000026 E612                   MOV         #18,R6
    00000028 1ED1                   MOV.L       R13,@(4,R14)
    0000002A 1ED3                   MOV.L       R13,@(12,R14)
    0000002C 1ED4                   MOV.L       R13,@(16,R14)
    0000002E 1ED2                   MOV.L       R13,@(8,R14)
    00000030 1ED5                   MOV.L       R13,@(20,R14)
    00000032 1ED6                   MOV.L       R13,@(24,R14)
    00000034 1ED7                   MOV.L       R13,@(28,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000036 1ED8                   MOV.L       R13,@(32,R14)
    00000038 1ED9                   MOV.L       R13,@(36,R14)
    0000003A 1EDA                   MOV.L       R13,@(40,R14)
    0000003C 1EDB                   MOV.L       R13,@(44,R14)
    0000003E 1EDC                   MOV.L       R13,@(48,R14)
    00000040 8F2C                   BF/S        L578
    00000042 E50A                   MOV         #10,R5
         level.c    24            {
         level.c    25                    char m[] = {
         level.c    26                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    27                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c    28                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c    29                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c    30                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c    31                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    32                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    33                            1, 1, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 1, 1, 1,
         level.c    34                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    35                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c    36                    };
    00000044 915D                   MOV.W       L671+2,R1  ; H'0320
    00000046 D233                   MOV.L       L671+20,R2 ; L281
    00000048 905C                   MOV.W       L671+4,R0  ; H'00B4
    0000004A D333                   MOV.L       L671+24,R3 ; __slow_mvn
    0000004C 430B                   JSR         @R3
    0000004E 31FC                   ADD         R15,R1
         level.c    37                    level->width = 18;
    00000050 1E63                   MOV.L       R6,@(12,R14)
         level.c    38                    level->height = 10;
         level.c    39                    level->map = malloc(18*10);
    00000052 9457                   MOV.W       L671+4,R4  ; H'00B4
    00000054 4C0B                   JSR         @R12
    00000056 1E54                   MOV.L       R5,@(16,R14)
    00000058 1E02                   MOV.L       R0,@(8,R14)
         level.c    40                    memcpy(level->map, m, 18*10);
    0000005A 9653                   MOV.W       L671+4,R6  ; H'00B4
    0000005C 9551                   MOV.W       L671+2,R5  ; H'0320
    0000005E 35FC                   ADD         R15,R5
    00000060 4B0B                   JSR         @R11
    00000062 6403                   MOV         R0,R4
         level.c    41                    level->nb_messages = 2;
    00000064 E202                   MOV         #2,R2
    00000066 1E2A                   MOV.L       R2,@(40,R14)
         level.c    42                    level->message = malloc(2*sizeof(Message));
    00000068 4C0B                   JSR         @R12
    0000006A E448                   MOV         #72,R4
    0000006C 1E09                   MOV.L       R0,@(36,R14)
         level.c    43                    level->message[0] = load_message("Use the arrow keys to move.", TOP, BEGIN, 0, 0, 0, 0);
    0000006E 6103                   MOV         R0,R1
    00000070 D42A                   MOV.L       L671+28,R4 ; L282
    00000072 E300                   MOV         #0,R3
    00000074 2FD6                   MOV.L       R13,@-R15
    00000076 6733                   MOV         R3,R7
    00000078 2FD6                   MOV.L       R13,@-R15
    0000007A 6633                   MOV         R3,R6
    0000007C 2F36                   MOV.L       R3,@-R15
    0000007E 2F16                   MOV.L       R1,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000080 D127                   MOV.L       L671+32,R1 ; __$load_message
    00000082 410B                   JSR         @R1
    00000084 6533                   MOV         R3,R5
         level.c    44                    level->message[1] = load_message("Yay ! Now, go kiss\nthat princess !", TOP, X, AFTER, 64,
                         + 0, 0);
    00000086 E340                   MOV         #64,R3
    00000088 D426                   MOV.L       L671+36,R4 ; L283
    0000008A E701                   MOV         #1,R7
    0000008C 51E9                   MOV.L       @(36,R14),R1
    0000008E E602                   MOV         #2,R6
    00000090 2FD6                   MOV.L       R13,@-R15
    00000092 7124                   ADD         #36,R1
    00000094 2FD6                   MOV.L       R13,@-R15
    00000096 2F36                   MOV.L       R3,@-R15
    00000098 A2C1                   BRA         L663
    0000009A E500                   MOV         #0,R5
    0000009C              L578:                             
         level.c    45            }
         level.c    46            else if(n == 1)
    0000009C 6093                   MOV         R9,R0
    0000009E 8801                   CMP/EQ      #1,R0
    000000A0 8F48                   BF/S        L580
    000000A2 E70C                   MOV         #12,R7
         level.c    47            {
         level.c    48                    char m[] = {
         level.c    49                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    50                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c    51                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c    52                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c    53                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c    54                            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,12, 0, 1, 1, 1, 1,
         level.c    55                            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    56                            1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    57                            1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    58                            1, 1, 0,11, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    59                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    60                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c    61                    };
    000000A4 912F                   MOV.W       L671+6,R1  ; H'02C0
    000000A6 D220                   MOV.L       L671+40,R2 ; L286
    000000A8 902E                   MOV.W       L671+8,R0  ; H'0114
    000000AA D31B                   MOV.L       L671+24,R3 ; __slow_mvn
    000000AC 430B                   JSR         @R3
    000000AE 31FC                   ADD         R15,R1
         level.c    62                    level->width = 23;
         level.c    63                    level->height = 12;
         level.c    64                    level->map = malloc(23*12);
    000000B0 942A                   MOV.W       L671+8,R4  ; H'0114
    000000B2 E117                   MOV         #23,R1
    000000B4 1E13                   MOV.L       R1,@(12,R14)
    000000B6 4C0B                   JSR         @R12
    000000B8 1E74                   MOV.L       R7,@(16,R14)
    000000BA 1E02                   MOV.L       R0,@(8,R14)
         level.c    65                    memcpy(level->map, m, 23*12);
    000000BC 9624                   MOV.W       L671+8,R6  ; H'0114
    000000BE 9522                   MOV.W       L671+6,R5  ; H'02C0
    000000C0 35FC                   ADD         R15,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C2 4B0B                   JSR         @R11
    000000C4 6403                   MOV         R0,R4
         level.c    66                    level->nb_messages = 2;
    000000C6 E302                   MOV         #2,R3
    000000C8 1E3A                   MOV.L       R3,@(40,R14)
         level.c    67                    level->message = malloc(2*sizeof(Message));
    000000CA 4C0B                   JSR         @R12
    000000CC E448                   MOV         #72,R4
         level.c    68                    level->message[0] = load_message("Press SHIFT to jump\nlike a plumber.", TOP, X, AFTER, 32
                         +, 0, 0);
    000000CE 6103                   MOV         R0,R1
    000000D0 D416                   MOV.L       L671+44,R4 ; L287
    000000D2 E320                   MOV         #32,R3
    000000D4 1E09                   MOV.L       R0,@(36,R14)
    000000D6 E701                   MOV         #1,R7
    000000D8 2FD6                   MOV.L       R13,@-R15
    000000DA E602                   MOV         #2,R6
    000000DC 2FD6                   MOV.L       R13,@-R15
    000000DE 2F36                   MOV.L       R3,@-R15
    000000E0 2F16                   MOV.L       R1,@-R15
    000000E2 D10F                   MOV.L       L671+32,R1 ; __$load_message
    000000E4 410B                   JSR         @R1
    000000E6 E500                   MOV         #0,R5
         level.c    69                    level->message[1] = load_message("Fantastic ! Mario would\nbe proud of you !", TOP, X, AFT
                         +ER, 92, 0, 0);
    000000E8 51E9                   MOV.L       @(36,R14),R1
    000000EA E35C                   MOV         #92,R3
    000000EC D410                   MOV.L       L671+48,R4 ; L288
    000000EE E701                   MOV         #1,R7
    000000F0 2FD6                   MOV.L       R13,@-R15
    000000F2 E602                   MOV         #2,R6
    000000F4 2FD6                   MOV.L       R13,@-R15
    000000F6 E500                   MOV         #0,R5
    000000F8 2F36                   MOV.L       R3,@-R15
    000000FA 7124                   ADD         #36,R1
    000000FC A28F                   BRA         L663
    000000FE 0009                   NOP
    00000100              L671:                             
    00000100 FC2C                   .DATA.W     H'FC2C
    00000102 0320                   .DATA.W     H'0320
    00000104 00B4                   .DATA.W     H'00B4
    00000106 02C0                   .DATA.W     H'02C0
    00000108 0114                   .DATA.W     H'0114
    0000010A 0000                   .DATA.W     0
    0000010C <00000000>             .DATA.L     _malloc
    00000110 <00000000>             .DATA.L     _memcpy
    00000114 <00000000>             .DATA.L     L281
    00000118 <00000000>             .DATA.L     __slow_mvn
    0000011C <00000000>             .DATA.L     L282
    00000120 <00000000>             .DATA.L     __$load_message
    00000124 <00000000>             .DATA.L     L283
    00000128 <00000000>             .DATA.L     L286
    0000012C <00000000>             .DATA.L     L287
    00000130 <00000000>             .DATA.L     L288
    00000134              L580:                             
         level.c    70            }
         level.c    71            else if(n == 2)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000134 6093                   MOV         R9,R0
    00000136 8802                   CMP/EQ      #2,R0
    00000138 8F3A                   BF/S        L582
    0000013A E41A                   MOV         #26,R4
         level.c    72            {
         level.c    73                    char m[] = {
         level.c    74                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    75                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c    76                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    77                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    78                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    79                            1, 1, 0,11, 0, 0, 0, 0, 5, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    80                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    81                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c    82                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 0, 0, 0,12, 5, 1, 1, 1,
         level.c    83                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c    84                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c    85                    };
    0000013C 9175                   MOV.W       L672,R1    ; H'02B4
    0000013E D23D                   MOV.L       L672+10,R2 ; L291
    00000140 9074                   MOV.W       L672+2,R0  ; H'011E
    00000142 D33D                   MOV.L       L672+14,R3 ; __slow_mvn
    00000144 430B                   JSR         @R3
    00000146 31FC                   ADD         R15,R1
         level.c    86                    level->width = 26;
    00000148 1E43                   MOV.L       R4,@(12,R14)
         level.c    87                    level->height = 11;
    0000014A E10B                   MOV         #11,R1
         level.c    88                    level->map = malloc(26*11);
    0000014C 946E                   MOV.W       L672+2,R4  ; H'011E
    0000014E 4C0B                   JSR         @R12
    00000150 1E14                   MOV.L       R1,@(16,R14)
    00000152 1E02                   MOV.L       R0,@(8,R14)
         level.c    89                    memcpy(level->map, m, 26*11);
    00000154 966A                   MOV.W       L672+2,R6  ; H'011E
    00000156 9568                   MOV.W       L672,R5    ; H'02B4
    00000158 35FC                   ADD         R15,R5
    0000015A 4B0B                   JSR         @R11
    0000015C 6403                   MOV         R0,R4
         level.c    90                    level->nb_messages = 3;
    0000015E E303                   MOV         #3,R3
    00000160 1E3A                   MOV.L       R3,@(40,R14)
         level.c    91                    level->message = malloc(3*sizeof(Message));
    00000162 4C0B                   JSR         @R12
    00000164 E46C                   MOV         #108,R4
         level.c    92                    level->message[0] = load_message("In this game you can\nwalk through spikes\nwithout getti
                         +ng killed !", TOP, X, AFTER, 25, 0, 0);
    00000166 6103                   MOV         R0,R1
    00000168 D434                   MOV.L       L672+18,R4 ; L292
    0000016A E319                   MOV         #25,R3
    0000016C 1E09                   MOV.L       R0,@(36,R14)
    0000016E E701                   MOV         #1,R7
    00000170 2FD6                   MOV.L       R13,@-R15
    00000172 E602                   MOV         #2,R6
    00000174 2FD6                   MOV.L       R13,@-R15
    00000176 2F36                   MOV.L       R3,@-R15
    00000178 2F16                   MOV.L       R1,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000017A D131                   MOV.L       L672+22,R1 ; __$load_message
    0000017C 410B                   JSR         @R1
    0000017E E500                   MOV         #0,R5
         level.c    93                    level->message[1] = load_message("I lied.", TOP, DEATH, 1, 0, 0, 0);
    00000180 51E9                   MOV.L       @(36,R14),R1
    00000182 E300                   MOV         #0,R3
    00000184 D42F                   MOV.L       L672+26,R4 ; L293
    00000186 E701                   MOV         #1,R7
    00000188 2FD6                   MOV.L       R13,@-R15
    0000018A 7124                   ADD         #36,R1
    0000018C 2FD6                   MOV.L       R13,@-R15
    0000018E 6673                   MOV         R7,R6
    00000190 2F36                   MOV.L       R3,@-R15
    00000192 2F16                   MOV.L       R1,@-R15
    00000194 D12A                   MOV.L       L672+22,R1 ; __$load_message
    00000196 410B                   JSR         @R1
    00000198 6533                   MOV         R3,R5
         level.c    94                    level->message[2] = load_message("Hmm... It's going\nto be hard for you.", TOP, DEATH, 3, 
                         +0, 0, 0);
    0000019A E300                   MOV         #0,R3
    0000019C D42A                   MOV.L       L672+30,R4 ; L294
    0000019E E703                   MOV         #3,R7
    000001A0 51E9                   MOV.L       @(36,R14),R1
    000001A2 6533                   MOV         R3,R5
    000001A4 2FD6                   MOV.L       R13,@-R15
    000001A6 7148                   ADD         #72,R1
    000001A8 2FD6                   MOV.L       R13,@-R15
    000001AA 2F36                   MOV.L       R3,@-R15
    000001AC A12B                   BRA         L661
    000001AE E601                   MOV         #1,R6
    000001B0              L582:                             
         level.c    95                    
         level.c    96            }
         level.c    97            else if(n == 3)
    000001B0 8803                   CMP/EQ      #3,R0
    000001B2 8B53                   BF          L584
         level.c    98            {
         level.c    99                    char m[] = {
         level.c   100                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   101                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
                         +,
         level.c   102                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1
                         +,
         level.c   103                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1
                         +,
         level.c   104                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0,12, 1, 1
                         +,
         level.c   105                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   106                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   107                            1, 1, 0,11, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 5, 0, 0, 5, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   108                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   109                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +,
         level.c   110                            1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1
                         +,
         level.c   111                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   112                    };
    000001B4 913B                   MOV.W       L672+4,R1  ; H'0284
    000001B6 D225                   MOV.L       L672+34,R2 ; L297
    000001B8 903A                   MOV.W       L672+6,R0  ; H'0150
    000001BA D31F                   MOV.L       L672+14,R3 ; __slow_mvn
    000001BC 430B                   JSR         @R3
    000001BE 31FC                   ADD         R15,R1
         level.c   113                    level->width = 28;
         level.c   114                    level->height = 12;
         level.c   115                    level->map = malloc(28*12);
    000001C0 9436                   MOV.W       L672+6,R4  ; H'0150
    000001C2 E11C                   MOV         #28,R1
    000001C4 1E13                   MOV.L       R1,@(12,R14)
    000001C6 4C0B                   JSR         @R12
    000001C8 1E74                   MOV.L       R7,@(16,R14)
    000001CA 1E02                   MOV.L       R0,@(8,R14)
         level.c   116                    memcpy(level->map, m, 28*12);
    000001CC 9630                   MOV.W       L672+6,R6  ; H'0150
    000001CE 952E                   MOV.W       L672+4,R5  ; H'0284
    000001D0 35FC                   ADD         R15,R5
    000001D2 4B0B                   JSR         @R11
    000001D4 6403                   MOV         R0,R4
         level.c   117                    level->nb_messages = 3;
    000001D6 E303                   MOV         #3,R3
    000001D8 1E3A                   MOV.L       R3,@(40,R14)
         level.c   118                    level->message = malloc(3*sizeof(Message));
    000001DA 4C0B                   JSR         @R12
    000001DC E46C                   MOV         #108,R4
         level.c   119                    level->message[0] = load_message("Now let's try something\na bit more difficult...", TOP, 
                         +BEGIN, 0, 0, 0, 0);
    000001DE 6103                   MOV         R0,R1
    000001E0 D41B                   MOV.L       L672+38,R4 ; L298
    000001E2 E300                   MOV         #0,R3
    000001E4 1E09                   MOV.L       R0,@(36,R14)
    000001E6 6733                   MOV         R3,R7
    000001E8 2FD6                   MOV.L       R13,@-R15
    000001EA 6633                   MOV         R3,R6
    000001EC 2FD6                   MOV.L       R13,@-R15
    000001EE 2F36                   MOV.L       R3,@-R15
    000001F0 2F16                   MOV.L       R1,@-R15
    000001F2 D113                   MOV.L       L672+22,R1 ; __$load_message
    000001F4 410B                   JSR         @R1
    000001F6 6533                   MOV         R3,R5
         level.c   120                    level->message[1] = load_message("And... you failed.", TOP, Y, AFTER, 65, 0, 0);
    000001F8 51E9                   MOV.L       @(36,R14),R1
    000001FA E341                   MOV         #65,R3
    000001FC D415                   MOV.L       L672+42,R4 ; L299
    000001FE E701                   MOV         #1,R7
    00000200 2FD6                   MOV.L       R13,@-R15
    00000202 E603                   MOV         #3,R6
    00000204 2FD6                   MOV.L       R13,@-R15
    00000206 7124                   ADD         #36,R1
    00000208 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000020A 2F16                   MOV.L       R1,@-R15
    0000020C D10C                   MOV.L       L672+22,R1 ; __$load_message
    0000020E 410B                   JSR         @R1
    00000210 E500                   MOV         #0,R5
         level.c   121                    level->message[2] = load_message("Come on...\nThis is not that difficult.", TOP, DEATH, 3,
                         + 0, 0, 0);
    00000212 E300                   MOV         #0,R3
    00000214 D410                   MOV.L       L672+46,R4 ; L300
    00000216 E703                   MOV         #3,R7
    00000218 51E9                   MOV.L       @(36,R14),R1
    0000021A E601                   MOV         #1,R6
    0000021C 2FD6                   MOV.L       R13,@-R15
    0000021E 6533                   MOV         R3,R5
    00000220 2FD6                   MOV.L       R13,@-R15
    00000222 7148                   ADD         #72,R1
    00000224 2F36                   MOV.L       R3,@-R15
    00000226 A0EE                   BRA         L661
    00000228 0009                   NOP
    0000022A              L672:                             
    0000022A 02B4                   .DATA.W     H'02B4
    0000022C 011E                   .DATA.W     H'011E
    0000022E 0284                   .DATA.W     H'0284
    00000230 0150                   .DATA.W     H'0150
    00000232 0000                   .DATA.W     0
    00000234 <00000000>             .DATA.L     L291
    00000238 <00000000>             .DATA.L     __slow_mvn
    0000023C <00000000>             .DATA.L     L292
    00000240 <00000000>             .DATA.L     __$load_message
    00000244 <00000000>             .DATA.L     L293
    00000248 <00000000>             .DATA.L     L294
    0000024C <00000000>             .DATA.L     L297
    00000250 <00000000>             .DATA.L     L298
    00000254 <00000000>             .DATA.L     L299
    00000258 <00000000>             .DATA.L     L300
    0000025C              L584:                             
         level.c   122            }
         level.c   123            else if(n == 4)
    0000025C E711                   MOV         #17,R7
    0000025E 6873                   MOV         R7,R8
    00000260 6093                   MOV         R9,R0
    00000262 8804                   CMP/EQ      #4,R0
    00000264 8D02                   BT/S        L673
    00000266 787F                   ADD         #127,R8
    00000268 A082                   BRA         L586
    0000026A 0009                   NOP
    0000026C              L673:                             
         level.c   124            {
         level.c   125                    char m[] = {
         level.c   126                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   127                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   128                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   129                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   130                            1, 1, 1, 1,12, 5, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   131                            1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   132                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   133                            1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   134                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 5, 1, 1, 1, 1, 1,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   135                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   136                            1, 1, 1, 1, 5, 5, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   137                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   138                            1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 5, 5, 1, 1, 1, 1, 1,
         level.c   139                            1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   140                            1, 1, 1, 1, 0, 0,11, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   141                            1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   142                            1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   143                            1, 1, 1, 1, 5, 5, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1,
         level.c   144                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   145                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   146                    };
    0000026C 9167                   MOV.W       L674,R1    ; H'0280
    0000026E D237                   MOV.L       L674+14,R2 ; L303
    00000270 9066                   MOV.W       L674+2,R0  ; H'0154
    00000272 D337                   MOV.L       L674+18,R3 ; __slow_mvn
    00000274 430B                   JSR         @R3
    00000276 31FC                   ADD         R15,R1
         level.c   147                    level->width = 17;
    00000278 1E73                   MOV.L       R7,@(12,R14)
         level.c   148                    level->height = 19;
    0000027A E113                   MOV         #19,R1
         level.c   149                    level->map = malloc(17*19);
    0000027C 9461                   MOV.W       L674+4,R4  ; H'0143
    0000027E 4C0B                   JSR         @R12
    00000280 1E14                   MOV.L       R1,@(16,R14)
    00000282 1E02                   MOV.L       R0,@(8,R14)
         level.c   150                    memcpy(level->map, m, 17*19);
    00000284 965D                   MOV.W       L674+4,R6  ; H'0143
    00000286 955A                   MOV.W       L674,R5    ; H'0280
    00000288 35FC                   ADD         R15,R5
    0000028A 4B0B                   JSR         @R11
    0000028C 6403                   MOV         R0,R4
         level.c   151                    level->nb_messages = 6;
    0000028E E306                   MOV         #6,R3
         level.c   152                    level->message = malloc(6*sizeof(Message));
    00000290 9458                   MOV.W       L674+6,R4  ; H'00D8
    00000292 4C0B                   JSR         @R12
    00000294 1E3A                   MOV.L       R3,@(40,R14)
         level.c   153                    level->message[0] = load_message("Howdy !\nThis should be interesting", BOTTOM, BEGIN, 0, 
                         +0, 0, 0);
    00000296 6103                   MOV         R0,R1
    00000298 D42E                   MOV.L       L674+22,R4 ; L304
    0000029A E300                   MOV         #0,R3
    0000029C 1E09                   MOV.L       R0,@(36,R14)
    0000029E 6733                   MOV         R3,R7
    000002A0 2FD6                   MOV.L       R13,@-R15
    000002A2 6633                   MOV         R3,R6
    000002A4 2FD6                   MOV.L       R13,@-R15
    000002A6 2F36                   MOV.L       R3,@-R15
    000002A8 2F16                   MOV.L       R1,@-R15
    000002AA D12B                   MOV.L       L674+26,R1 ; __$load_message
    000002AC 410B                   JSR         @R1
    000002AE E501                   MOV         #1,R5
         level.c   154                    level->message[1] = load_message("I like it when you fall down.", TOP, XY, 56, 96, 105, 12
                         +8);
    000002B0 51E9                   MOV.L       @(36,R14),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002B2 E269                   MOV         #105,R2
    000002B4 D429                   MOV.L       L674+30,R4 ; L305
    000002B6 E738                   MOV         #56,R7
    000002B8 9345                   MOV.W       L674+8,R3  ; H'0080
    000002BA E604                   MOV         #4,R6
    000002BC 2F36                   MOV.L       R3,@-R15
    000002BE E500                   MOV         #0,R5
    000002C0 2F26                   MOV.L       R2,@-R15
    000002C2 7124                   ADD         #36,R1
    000002C4 D324                   MOV.L       L674+26,R3 ; __$load_message
    000002C6 6013                   MOV         R1,R0
    000002C8 E160                   MOV         #96,R1
    000002CA 2F16                   MOV.L       R1,@-R15
    000002CC 430B                   JSR         @R3
    000002CE 2F06                   MOV.L       R0,@-R15
         level.c   155                    level->message[2] = load_message("Wrong side, mate.", TOP, XY, 31, 41, 105, 128);
    000002D0 51E9                   MOV.L       @(36,R14),R1
    000002D2 E269                   MOV         #105,R2
    000002D4 D422                   MOV.L       L674+34,R4 ; L306
    000002D6 E71F                   MOV         #31,R7
    000002D8 9335                   MOV.W       L674+8,R3  ; H'0080
    000002DA E604                   MOV         #4,R6
    000002DC 2F36                   MOV.L       R3,@-R15
    000002DE E500                   MOV         #0,R5
    000002E0 2F26                   MOV.L       R2,@-R15
    000002E2 7148                   ADD         #72,R1
    000002E4 D31C                   MOV.L       L674+26,R3 ; __$load_message
    000002E6 6013                   MOV         R1,R0
    000002E8 E129                   MOV         #41,R1
    000002EA 2F16                   MOV.L       R1,@-R15
    000002EC 430B                   JSR         @R3
    000002EE 2F06                   MOV.L       R0,@-R15
         level.c   156                    level->message[3] = load_message("Almost there !", BOTTOM, XY, 52, 60, 48, 48);
    000002F0 51E9                   MOV.L       @(36,R14),R1
    000002F2 E330                   MOV         #48,R3
    000002F4 D41B                   MOV.L       L674+38,R4 ; L307
    000002F6 E23C                   MOV         #60,R2
    000002F8 2F36                   MOV.L       R3,@-R15
    000002FA E734                   MOV         #52,R7
    000002FC 2F36                   MOV.L       R3,@-R15
    000002FE E604                   MOV         #4,R6
    00000300 2F26                   MOV.L       R2,@-R15
    00000302 E501                   MOV         #1,R5
    00000304 D214                   MOV.L       L674+26,R2 ; __$load_message
    00000306 716C                   ADD         #108,R1
    00000308 420B                   JSR         @R2
    0000030A 2F16                   MOV.L       R1,@-R15
         level.c   157                    level->message[4] = load_message("Having troubles ?", TOP, DEATH, 3, 0, 0, 0);
    0000030C 51E9                   MOV.L       @(36,R14),R1
    0000030E E300                   MOV         #0,R3
    00000310 D415                   MOV.L       L674+42,R4 ; L308
    00000312 E703                   MOV         #3,R7
    00000314 2FD6                   MOV.L       R13,@-R15
    00000316 E601                   MOV         #1,R6
    00000318 2FD6                   MOV.L       R13,@-R15
    0000031A 318C                   ADD         R8,R1
    0000031C 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000031E 2F16                   MOV.L       R1,@-R15
    00000320 D10D                   MOV.L       L674+26,R1 ; __$load_message
    00000322 410B                   JSR         @R1
    00000324 6533                   MOV         R3,R5
         level.c   158                    level->message[5] = load_message("This is fun, isn't it?", TOP, DEATH, 6, 0, 0, 0);
    00000326 E200                   MOV         #0,R2
    00000328 D410                   MOV.L       L674+46,R4 ; L309
    0000032A E706                   MOV         #6,R7
    0000032C 930C                   MOV.W       L674+10,R3 ; H'00B4
    0000032E E601                   MOV         #1,R6
    00000330 51E9                   MOV.L       @(36,R14),R1
    00000332 313C                   ADD         R3,R1
    00000334 2FD6                   MOV.L       R13,@-R15
    00000336 2FD6                   MOV.L       R13,@-R15
    00000338 2F26                   MOV.L       R2,@-R15
    0000033A A39F                   BRA         L665
    0000033C 6523                   MOV         R2,R5
    0000033E              L674:                             
    0000033E 0280                   .DATA.W     H'0280
    00000340 0154                   .DATA.W     H'0154
    00000342 0143                   .DATA.W     H'0143
    00000344 00D8                   .DATA.W     H'00D8
    00000346 0080                   .DATA.W     H'0080
    00000348 00B4                   .DATA.W     H'00B4
    0000034A 0000                   .DATA.W     0
    0000034C <00000000>             .DATA.L     L303
    00000350 <00000000>             .DATA.L     __slow_mvn
    00000354 <00000000>             .DATA.L     L304
    00000358 <00000000>             .DATA.L     __$load_message
    0000035C <00000000>             .DATA.L     L305
    00000360 <00000000>             .DATA.L     L306
    00000364 <00000000>             .DATA.L     L307
    00000368 <00000000>             .DATA.L     L308
    0000036C <00000000>             .DATA.L     L309
    00000370              L586:                             
         level.c   159            }
         level.c   160            else if(n == 5)
    00000370 8805                   CMP/EQ      #5,R0
    00000372 8B4E                   BF          L588
         level.c   161            {
         level.c   162                    char m[] = {
         level.c   163                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   164                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   165                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   166                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   167                            1, 1, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 1, 1,
         level.c   168                            1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   169                            1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   170                            1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 5, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1,
         level.c   171                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   172                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   173                    };
    00000374 9190                   MOV.W       L675,R1    ; H'02D0
    00000376 D24B                   MOV.L       L675+12,R2 ; L312
    00000378 908F                   MOV.W       L675+2,R0  ; H'0104
    0000037A D34B                   MOV.L       L675+16,R3 ; __slow_mvn
    0000037C 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000037E 31FC                   ADD         R15,R1
         level.c   174                    Moving_line line[2] = {{60, 24, 32, 0, 2, 60, 24, 60, 55}, {104, 40, 16, 2, 0, 104, 40, 15
                         +1, 40}};
    00000380 918C                   MOV.W       L675+4,R1  ; H'0288
    00000382 31FC                   ADD         R15,R1
    00000384 D249                   MOV.L       L675+20,R2 ; L314
    00000386 D34A                   MOV.L       L675+24,R3 ; __quick_mvn
    00000388 430B                   JSR         @R3
    0000038A E048                   MOV         #72,R0
         level.c   175                    level->width = 26;
    0000038C 1E43                   MOV.L       R4,@(12,R14)
         level.c   176                    level->height = 10;
         level.c   177                    level->map = malloc(26*10);
    0000038E 9484                   MOV.W       L675+2,R4  ; H'0104
    00000390 4C0B                   JSR         @R12
    00000392 1E54                   MOV.L       R5,@(16,R14)
    00000394 1E02                   MOV.L       R0,@(8,R14)
         level.c   178                    memcpy(level->map, m, 26*10);
    00000396 9680                   MOV.W       L675+2,R6  ; H'0104
    00000398 957E                   MOV.W       L675,R5    ; H'02D0
    0000039A 35FC                   ADD         R15,R5
    0000039C 4B0B                   JSR         @R11
    0000039E 6403                   MOV         R0,R4
         level.c   179                    level->nb_lines = 2;
    000003A0 E202                   MOV         #2,R2
    000003A2 1E26                   MOV.L       R2,@(24,R14)
         level.c   180                    level->line = malloc(2*sizeof(Moving_line));
    000003A4 4C0B                   JSR         @R12
    000003A6 E448                   MOV         #72,R4
    000003A8 1E05                   MOV.L       R0,@(20,R14)
         level.c   181                    memcpy(level->line, line, 2*sizeof(Moving_line));
    000003AA E648                   MOV         #72,R6
    000003AC 9576                   MOV.W       L675+4,R5  ; H'0288
    000003AE 35FC                   ADD         R15,R5
    000003B0 4B0B                   JSR         @R11
    000003B2 6403                   MOV         R0,R4
         level.c   182                    level->nb_messages = 3;
    000003B4 E303                   MOV         #3,R3
    000003B6 1E3A                   MOV.L       R3,@(40,R14)
         level.c   183                    level->message = malloc(3*sizeof(Message));
    000003B8 4C0B                   JSR         @R12
    000003BA E46C                   MOV         #108,R4
    000003BC 1E09                   MOV.L       R0,@(36,R14)
         level.c   184                    level->message[0] = load_message("Moving platforms ?\nThat's new...", TOP, BEGIN, 0, 0, 0,
                         + 0);
    000003BE 6103                   MOV         R0,R1
    000003C0 D43C                   MOV.L       L675+28,R4 ; L315
    000003C2 E300                   MOV         #0,R3
    000003C4 2FD6                   MOV.L       R13,@-R15
    000003C6 6733                   MOV         R3,R7
    000003C8 2FD6                   MOV.L       R13,@-R15
    000003CA 6633                   MOV         R3,R6
    000003CC 2F36                   MOV.L       R3,@-R15
    000003CE 2F16                   MOV.L       R1,@-R15
    000003D0 D139                   MOV.L       L675+32,R1 ; __$load_message
    000003D2 410B                   JSR         @R1
    000003D4 6533                   MOV         R3,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   185                    level->message[1] = load_message("I think you're in trouble.", TOP, XY, 108, 124, 48, 48);
    000003D6 E330                   MOV         #48,R3
    000003D8 D438                   MOV.L       L675+36,R4 ; L316
    000003DA E27C                   MOV         #124,R2
    000003DC 51E9                   MOV.L       @(36,R14),R1
    000003DE E76C                   MOV         #108,R7
    000003E0 2F36                   MOV.L       R3,@-R15
    000003E2 E604                   MOV         #4,R6
    000003E4 2F36                   MOV.L       R3,@-R15
    000003E6 E500                   MOV         #0,R5
    000003E8 2F26                   MOV.L       R2,@-R15
    000003EA 7124                   ADD         #36,R1
    000003EC D232                   MOV.L       L675+32,R2 ; __$load_message
    000003EE 420B                   JSR         @R2
    000003F0 2F16                   MOV.L       R1,@-R15
         level.c   186                    level->message[2] = load_message("Three tries ? Really ?", TOP, DEATH, 3, 0, 0, 0);
    000003F2 E300                   MOV         #0,R3
    000003F4 D432                   MOV.L       L675+40,R4 ; L317
    000003F6 E703                   MOV         #3,R7
    000003F8 51E9                   MOV.L       @(36,R14),R1
    000003FA E601                   MOV         #1,R6
    000003FC 2FD6                   MOV.L       R13,@-R15
    000003FE 6533                   MOV         R3,R5
    00000400 2FD6                   MOV.L       R13,@-R15
    00000402 7148                   ADD         #72,R1
    00000404 2F36                   MOV.L       R3,@-R15
    00000406              L661:                             
    00000406 2F16                   MOV.L       R1,@-R15
    00000408 D12B                   MOV.L       L675+32,R1 ; __$load_message
    0000040A 410B                   JSR         @R1
    0000040C 0009                   NOP
    0000040E A73A                   BRA         L667
    00000410 0009                   NOP
    00000412              L588:                             
         level.c   187            }
         level.c   188            else if(n == 6)
    00000412 6093                   MOV         R9,R0
    00000414 8806                   CMP/EQ      #6,R0
    00000416 8B5F                   BF          L590
         level.c   189            {
         level.c   190                    char m[] = {
         level.c   191                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1,
         level.c   192                            1, 0, 5, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0
                         +, 1,
         level.c   193                            1, 1, 1, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   194                            1, 1, 1, 4, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   195                            1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   196                            1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   197                            1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 3, 1, 1, 1, 1, 1
                         +, 1,
         level.c   198                            1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 3, 1, 1, 1, 1, 1
                         +, 1,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   199                            1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   200                            1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   201                            1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 1,
         level.c   202                            1, 1, 1, 0,11, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1
                         +, 1,
         level.c   203                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,12, 1, 1
                         +, 1,
         level.c   204                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 1, 1, 1, 1, 1
                         +, 1,
         level.c   205                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1,
         level.c   206                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1
         level.c   207                    };
    00000418 9141                   MOV.W       L675+6,R1  ; H'0204
    0000041A D22A                   MOV.L       L675+44,R2 ; L320
    0000041C 9040                   MOV.W       L675+8,R0  ; H'01D0
    0000041E D322                   MOV.L       L675+16,R3 ; __slow_mvn
    00000420 430B                   JSR         @R3
    00000422 31FC                   ADD         R15,R1
         level.c   208                    Moving_line line = {156, 40, 16, 0, 2, 156, 40, 156, 88};
    00000424 913D                   MOV.W       L675+10,R1 ; H'01E0
    00000426 31FC                   ADD         R15,R1
    00000428 D227                   MOV.L       L675+48,R2 ; L322
    0000042A D328                   MOV.L       L675+52,R3 ; __quick_odd_mvn
    0000042C 430B                   JSR         @R3
    0000042E E024                   MOV         #36,R0
         level.c   209                    level->width = 29;
         level.c   210                    level->height = 16;
         level.c   211                    level->map = malloc(29*16);
    00000430 9436                   MOV.W       L675+8,R4  ; H'01D0
    00000432 E11D                   MOV         #29,R1
    00000434 1E13                   MOV.L       R1,@(12,R14)
    00000436 E310                   MOV         #16,R3
    00000438 4C0B                   JSR         @R12
    0000043A 1E34                   MOV.L       R3,@(16,R14)
    0000043C 1E02                   MOV.L       R0,@(8,R14)
         level.c   212                    memcpy(level->map, m, 29*16);
    0000043E 962F                   MOV.W       L675+8,R6  ; H'01D0
    00000440 952D                   MOV.W       L675+6,R5  ; H'0204
    00000442 35FC                   ADD         R15,R5
    00000444 4B0B                   JSR         @R11
    00000446 6403                   MOV         R0,R4
         level.c   213                    level->nb_lines = 1;
    00000448 E201                   MOV         #1,R2
    0000044A 1E26                   MOV.L       R2,@(24,R14)
         level.c   214                    level->line = malloc(sizeof(Moving_line));
    0000044C 4C0B                   JSR         @R12
    0000044E E424                   MOV         #36,R4
    00000450 1E05                   MOV.L       R0,@(20,R14)
         level.c   215                    level->line[0] = line;
    00000452 6103                   MOV         R0,R1
    00000454 9225                   MOV.W       L675+10,R2 ; H'01E0
    00000456 32FC                   ADD         R15,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000458 D31C                   MOV.L       L675+52,R3 ; __quick_odd_mvn
    0000045A 430B                   JSR         @R3
    0000045C E024                   MOV         #36,R0
         level.c   216                    level->nb_messages = 2;
    0000045E E202                   MOV         #2,R2
    00000460 1E2A                   MOV.L       R2,@(40,R14)
         level.c   217                    level->message = malloc(2*sizeof(Message));
    00000462 4C0B                   JSR         @R12
    00000464 E448                   MOV         #72,R4
         level.c   218                    level->message[0] = load_message("Do you know my uncle Benny ?", TOP, BEGIN, 0, 0, 0, 0);
    00000466 6103                   MOV         R0,R1
    00000468 D419                   MOV.L       L675+56,R4 ; L323
    0000046A E300                   MOV         #0,R3
    0000046C 1E09                   MOV.L       R0,@(36,R14)
    0000046E 6733                   MOV         R3,R7
    00000470 2FD6                   MOV.L       R13,@-R15
    00000472 6633                   MOV         R3,R6
    00000474 2FD6                   MOV.L       R13,@-R15
    00000476 2F36                   MOV.L       R3,@-R15
    00000478 2F16                   MOV.L       R1,@-R15
    0000047A D10F                   MOV.L       L675+32,R1 ; __$load_message
    0000047C 410B                   JSR         @R1
    0000047E 6533                   MOV         R3,R5
         level.c   219                    level->message[1] = load_message("That was fun.\nDo it again, please !", TOP, Y, AFTER, 98
                         +, 0, 0);
    00000480 51E9                   MOV.L       @(36,R14),R1
    00000482 E362                   MOV         #98,R3
    00000484 D413                   MOV.L       L675+60,R4 ; L324
    00000486 E701                   MOV         #1,R7
    00000488 2FD6                   MOV.L       R13,@-R15
    0000048A E603                   MOV         #3,R6
    0000048C 2FD6                   MOV.L       R13,@-R15
    0000048E E500                   MOV         #0,R5
    00000490 2F36                   MOV.L       R3,@-R15
    00000492 7124                   ADD         #36,R1
    00000494 A0C3                   BRA         L663
    00000496 0009                   NOP
    00000498              L675:                             
    00000498 02D0                   .DATA.W     H'02D0
    0000049A 0104                   .DATA.W     H'0104
    0000049C 0288                   .DATA.W     H'0288
    0000049E 0204                   .DATA.W     H'0204
    000004A0 01D0                   .DATA.W     H'01D0
    000004A2 01E0                   .DATA.W     H'01E0
    000004A4 <00000000>             .DATA.L     L312
    000004A8 <00000000>             .DATA.L     __slow_mvn
    000004AC <00000000>             .DATA.L     L314
    000004B0 <00000000>             .DATA.L     __quick_mvn
    000004B4 <00000000>             .DATA.L     L315
    000004B8 <00000000>             .DATA.L     __$load_message
    000004BC <00000000>             .DATA.L     L316
    000004C0 <00000000>             .DATA.L     L317
    000004C4 <00000000>             .DATA.L     L320
    000004C8 <00000000>             .DATA.L     L322
    000004CC <00000000>             .DATA.L     __quick_odd_mvn
    000004D0 <00000000>             .DATA.L     L323
    000004D4 <00000000>             .DATA.L     L324




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D8              L590:                             
         level.c   220            }
         level.c   221            else if(n == 7)
    000004D8 6093                   MOV         R9,R0
    000004DA 8807                   CMP/EQ      #7,R0
    000004DC 8D02                   BT/S        L676
    000004DE EA08                   MOV         #8,R10
    000004E0 A0C8                   BRA         L592
    000004E2 0009                   NOP
    000004E4              L676:                             
         level.c   222            {
         level.c   223                    char m[] = {
         level.c   224                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   225                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   226                            1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   227                            1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   228                            1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   229                            1, 1, 3, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   230                            1, 1, 4, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   231                            1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   232                            1, 1, 3, 1, 0, 1, 0, 1, 3, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 3, 1, 1,
         level.c   233                            1, 1, 4, 1, 0, 1, 5, 1, 0, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 3, 1, 1,
         level.c   234                            1, 1, 0, 1, 0, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 3, 1, 1, 1,
         level.c   235                            1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 5, 5, 0, 0, 0, 5, 5, 1, 1,
         level.c   236                            1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
         level.c   237                            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 6, 6, 6, 0, 6, 6, 6, 1, 1,
         level.c   238                            1, 1, 0, 5, 0,12, 0, 5, 5, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   239                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   240                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   241                            1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   242                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   243                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   244                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   245                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 1, 1,
         level.c   246                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   247                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   248                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   249                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   250                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   251                            1, 1, 1, 0, 0, 0, 0, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   252                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   253                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   254                    };
    000004E4 91A0                   MOV.W       L677,R1    ; H'0120
    000004E6 D255                   MOV.L       L677+20,R2 ; L327
    000004E8 909F                   MOV.W       L677+2,R0  ; H'02B2
    000004EA D355                   MOV.L       L677+24,R3 ; __slow_mvn
    000004EC 430B                   JSR         @R3
    000004EE 31FC                   ADD         R15,R1
         level.c   255                    Moving_line line[] = {
         level.c   256                            {32, 176, 8, 0, 2, 32, 176, 32, 215},
         level.c   257                            {47, 184, 8, 0, 1, 47, 176, 47, 208},
         level.c   258                            {63, 192, 8, 0, 2, 63, 176, 63, 200},
         level.c   259                            {73, 139, 15, 0, 4, 73, 139, 73, 184},
         level.c   260                            {92, 139, 8, 0, 2, 92, 139, 92, 200},
         level.c   261                            {104, 176, 8, 0, -2, 104, 144, 104, 176},
         level.c   262                            {120, 107, 40, 0, 2, 120, 107, 120, 160},




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   263                            {128, 32, 24, 0, 2, 128, 32, 128, 64}
         level.c   264                    };
    000004F0 D254                   MOV.L       L677+28,R2 ; L329
    000004F2 9099                   MOV.W       L677,R0    ; H'0120
    000004F4 D354                   MOV.L       L677+32,R3 ; __quick_mvn
    000004F6 430B                   JSR         @R3
    000004F8 61F3                   MOV         R15,R1
         level.c   265                    level->width = 23;
    000004FA E117                   MOV         #23,R1
         level.c   266                    level->height = 30;
         level.c   267                    level->map = malloc(23*30);
    000004FC 9495                   MOV.W       L677+2,R4  ; H'02B2
    000004FE E31E                   MOV         #30,R3
    00000500 1E13                   MOV.L       R1,@(12,R14)
    00000502 4C0B                   JSR         @R12
    00000504 1E34                   MOV.L       R3,@(16,R14)
    00000506 1E02                   MOV.L       R0,@(8,R14)
         level.c   268                    memcpy(level->map, m, 23*30);
    00000508 968F                   MOV.W       L677+2,R6  ; H'02B2
    0000050A 958D                   MOV.W       L677,R5    ; H'0120
    0000050C 35FC                   ADD         R15,R5
    0000050E 4B0B                   JSR         @R11
    00000510 6403                   MOV         R0,R4
         level.c   269                    level->nb_lines = 8;
         level.c   270                    level->line = malloc(8*sizeof(Moving_line));
    00000512 9489                   MOV.W       L677,R4    ; H'0120
    00000514 4C0B                   JSR         @R12
    00000516 1EA6                   MOV.L       R10,@(24,R14)
    00000518 1E05                   MOV.L       R0,@(20,R14)
         level.c   271                    memcpy(level->line, line, 8*sizeof(Moving_line));
    0000051A 65F3                   MOV         R15,R5
    0000051C 9684                   MOV.W       L677,R6    ; H'0120
    0000051E 4B0B                   JSR         @R11
    00000520 6403                   MOV         R0,R4
         level.c   272                    level->nb_messages = 9;
    00000522 E209                   MOV         #9,R2
         level.c   273                    level->message = malloc(9*sizeof(Message));
    00000524 9482                   MOV.W       L677+4,R4  ; H'0144
    00000526 4C0B                   JSR         @R12
    00000528 1E2A                   MOV.L       R2,@(40,R14)
         level.c   274                    level->message[0] = load_message("What a mess...", TOP, BEGIN, 0, 0, 0, 0);
    0000052A 6103                   MOV         R0,R1
    0000052C D447                   MOV.L       L677+36,R4 ; L330
    0000052E E300                   MOV         #0,R3
    00000530 1E09                   MOV.L       R0,@(36,R14)
    00000532 6733                   MOV         R3,R7
    00000534 2FD6                   MOV.L       R13,@-R15
    00000536 6633                   MOV         R3,R6
    00000538 2FD6                   MOV.L       R13,@-R15
    0000053A 2F36                   MOV.L       R3,@-R15
    0000053C 2F16                   MOV.L       R1,@-R15
    0000053E D144                   MOV.L       L677+40,R1 ; __$load_message
    00000540 410B                   JSR         @R1
    00000542 6533                   MOV         R3,R5
         level.c   275                    level->message[1] = load_message("What are you doing here ?", TOP, XY, 143, 154, 168, 168)
                         +;
    00000544 51E9                   MOV.L       @(36,R14),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000546 E604                   MOV         #4,R6
    00000548 D442                   MOV.L       L677+44,R4 ; L331
    0000054A E500                   MOV         #0,R5
    0000054C 936F                   MOV.W       L677+6,R3  ; H'00A8
    0000054E 7124                   ADD         #36,R1
    00000550 926E                   MOV.W       L677+8,R2  ; H'009A
    00000552 2F36                   MOV.L       R3,@-R15
    00000554 2F36                   MOV.L       R3,@-R15
    00000556 2F26                   MOV.L       R2,@-R15
    00000558 976B                   MOV.W       L677+10,R7 ; H'008F
    0000055A D23D                   MOV.L       L677+40,R2 ; __$load_message
    0000055C 420B                   JSR         @R2
    0000055E 2F16                   MOV.L       R1,@-R15
         level.c   276                    level->message[2] = load_message("Wich path will you take ?", TOP, XY, 80, 88, 16, 24);
    00000560 51E9                   MOV.L       @(36,R14),R1
    00000562 E318                   MOV         #24,R3
    00000564 D43C                   MOV.L       L677+48,R4 ; L332
    00000566 E210                   MOV         #16,R2
    00000568 2F36                   MOV.L       R3,@-R15
    0000056A E750                   MOV         #80,R7
    0000056C 2F26                   MOV.L       R2,@-R15
    0000056E E604                   MOV         #4,R6
    00000570 7148                   ADD         #72,R1
    00000572 6013                   MOV         R1,R0
    00000574 E158                   MOV         #88,R1
    00000576 E500                   MOV         #0,R5
    00000578 2F16                   MOV.L       R1,@-R15
    0000057A B7CF                   BSR         __$load_message
    0000057C 2F06                   MOV.L       R0,@-R15
         level.c   277                    level->message[3] = load_message("Try again.", TOP, XY, 63, 65, 32, 40);
    0000057E EC28                   MOV         #40,R12
    00000580 51E9                   MOV.L       @(36,R14),R1
    00000582 E320                   MOV         #32,R3
    00000584 D435                   MOV.L       L677+52,R4 ; L333
    00000586 E241                   MOV         #65,R2
    00000588 2FC6                   MOV.L       R12,@-R15
    0000058A E73F                   MOV         #63,R7
    0000058C 2F36                   MOV.L       R3,@-R15
    0000058E E604                   MOV         #4,R6
    00000590 2F26                   MOV.L       R2,@-R15
    00000592 716C                   ADD         #108,R1
    00000594 2F16                   MOV.L       R1,@-R15
    00000596 B7C1                   BSR         __$load_message
    00000598 E500                   MOV         #0,R5
         level.c   278                    level->message[4] = load_message("Not this one.", TOP, XY, 47, 49, 32, 40);
    0000059A E320                   MOV         #32,R3
    0000059C D430                   MOV.L       L677+56,R4 ; L334
    0000059E E231                   MOV         #49,R2
    000005A0 51E9                   MOV.L       @(36,R14),R1
    000005A2 E72F                   MOV         #47,R7
    000005A4 2FC6                   MOV.L       R12,@-R15
    000005A6 E604                   MOV         #4,R6
    000005A8 2F36                   MOV.L       R3,@-R15
    000005AA 318C                   ADD         R8,R1
    000005AC 2F26                   MOV.L       R2,@-R15
    000005AE 2F16                   MOV.L       R1,@-R15
    000005B0 B7B4                   BSR         __$load_message




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005B2 E500                   MOV         #0,R5
         level.c   279                    level->message[5] = load_message("Very risky path...", TOP, XY, 15, 17, 32, 40);
    000005B4 933E                   MOV.W       L677+12,R3 ; H'00B4
    000005B6 E220                   MOV         #32,R2
    000005B8 D42A                   MOV.L       L677+60,R4 ; L335
    000005BA E70F                   MOV         #15,R7
    000005BC 51E9                   MOV.L       @(36,R14),R1
    000005BE E604                   MOV         #4,R6
    000005C0 2FC6                   MOV.L       R12,@-R15
    000005C2 E500                   MOV         #0,R5
    000005C4 2F26                   MOV.L       R2,@-R15
    000005C6 313C                   ADD         R3,R1
    000005C8 6013                   MOV         R1,R0
    000005CA E111                   MOV         #17,R1
    000005CC 2F16                   MOV.L       R1,@-R15
    000005CE B7A5                   BSR         __$load_message
    000005D0 2F06                   MOV.L       R0,@-R15
         level.c   280                    level->message[6] = load_message("You shouldn't drink while\nplaying this game, you know..
                         +.", TOP, DEATH, 4, 0, 0, 0);
    000005D2 E200                   MOV         #0,R2
    000005D4 D424                   MOV.L       L677+64,R4 ; L336
    000005D6 E704                   MOV         #4,R7
    000005D8 932D                   MOV.W       L677+14,R3 ; H'00D8
    000005DA E601                   MOV         #1,R6
    000005DC 51E9                   MOV.L       @(36,R14),R1
    000005DE 313C                   ADD         R3,R1
    000005E0 2FD6                   MOV.L       R13,@-R15
    000005E2 2FD6                   MOV.L       R13,@-R15
    000005E4 2F26                   MOV.L       R2,@-R15
    000005E6 2F16                   MOV.L       R1,@-R15
    000005E8 B798                   BSR         __$load_message
    000005EA 6523                   MOV         R2,R5
         level.c   281                    level->message[7] = load_message("Don't you have a life ?", TOP, DEATH, 8, 0, 0, 0);
    000005EC 9324                   MOV.W       L677+16,R3 ; H'00FC
    000005EE E200                   MOV         #0,R2
    000005F0 D41E                   MOV.L       L677+68,R4 ; L337
    000005F2 7F70                   ADD         #112,R15
    000005F4 51E9                   MOV.L       @(36,R14),R1
    000005F6 E708                   MOV         #8,R7
    000005F8 2FD6                   MOV.L       R13,@-R15
    000005FA E601                   MOV         #1,R6
    000005FC 2FD6                   MOV.L       R13,@-R15
    000005FE 313C                   ADD         R3,R1
    00000600 2F26                   MOV.L       R2,@-R15
    00000602 2F16                   MOV.L       R1,@-R15
    00000604 B78A                   BSR         __$load_message
    00000606 6523                   MOV         R2,R5
         level.c   282                    level->message[8] = load_message("My god, you are patient.", TOP, DEATH, 12, 0, 0, 0);
    00000608 930E                   MOV.W       L677,R3    ; H'0120
    0000060A E200                   MOV         #0,R2
    0000060C D418                   MOV.L       L677+72,R4 ; L338
    0000060E E70C                   MOV         #12,R7
    00000610 51E9                   MOV.L       @(36,R14),R1
    00000612 E601                   MOV         #1,R6
    00000614 2FD6                   MOV.L       R13,@-R15
    00000616 6523                   MOV         R2,R5
    00000618 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000061A 313C                   ADD         R3,R1
    0000061C 2F26                   MOV.L       R2,@-R15
    0000061E              L663:                             
    0000061E 2F16                   MOV.L       R1,@-R15
    00000620 B77C                   BSR         __$load_message
    00000622 0009                   NOP
    00000624 A724                   BRA         L579
    00000626 7F20                   ADD         #32,R15
    00000628              L677:                             
    00000628 0120                   .DATA.W     H'0120
    0000062A 02B2                   .DATA.W     H'02B2
    0000062C 0144                   .DATA.W     H'0144
    0000062E 00A8                   .DATA.W     H'00A8
    00000630 009A                   .DATA.W     H'009A
    00000632 008F                   .DATA.W     H'008F
    00000634 00B4                   .DATA.W     H'00B4
    00000636 00D8                   .DATA.W     H'00D8
    00000638 00FC                   .DATA.W     H'00FC
    0000063A 0000                   .DATA.W     0
    0000063C <00000000>             .DATA.L     L327
    00000640 <00000000>             .DATA.L     __slow_mvn
    00000644 <00000000>             .DATA.L     L329
    00000648 <00000000>             .DATA.L     __quick_mvn
    0000064C <00000000>             .DATA.L     L330
    00000650 <00000000>             .DATA.L     __$load_message
    00000654 <00000000>             .DATA.L     L331
    00000658 <00000000>             .DATA.L     L332
    0000065C <00000000>             .DATA.L     L333
    00000660 <00000000>             .DATA.L     L334
    00000664 <00000000>             .DATA.L     L335
    00000668 <00000000>             .DATA.L     L336
    0000066C <00000000>             .DATA.L     L337
    00000670 <00000000>             .DATA.L     L338
    00000674              L592:                             
         level.c   283            }
         level.c   284            else if(n == 8)
    00000674 8808                   CMP/EQ      #8,R0
    00000676 8901                   BT          L678
    00000678 A0B4                   BRA         L594
    0000067A 0009                   NOP
    0000067C              L678:                             
         level.c   285            {
         level.c   286                    char m[] = {
         level.c   287                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   288                            1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,
         level.c   289                            1, 1, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0,10, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 1, 1,
         level.c   290                            1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   291                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0, 0,12, 1, 1,
         level.c   292                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c   293                            1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1,
         level.c   294                            1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 0, 0, 0, 0, 1, 1,
         level.c   295                            1, 1, 0, 0, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
         level.c   296                            1, 1, 0,11, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 1, 1,
         level.c   297                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   298                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   299                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   300                    };




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000067C 9199                   MOV.W       L679,R1    ; H'0280
    0000067E D252                   MOV.L       L679+22,R2 ; L341
    00000680 9098                   MOV.W       L679+2,R0  ; H'0152
    00000682 D352                   MOV.L       L679+26,R3 ; __slow_mvn
    00000684 430B                   JSR         @R3
    00000686 31FC                   ADD         R15,R1
         level.c   301                    level->width = 26;
    00000688 1E43                   MOV.L       R4,@(12,R14)
         level.c   302                    level->height = 13;
    0000068A E10D                   MOV         #13,R1
         level.c   303                    level->map = malloc(26*13);
    0000068C 9492                   MOV.W       L679+2,R4  ; H'0152
    0000068E 4C0B                   JSR         @R12
    00000690 1E14                   MOV.L       R1,@(16,R14)
    00000692 1E02                   MOV.L       R0,@(8,R14)
         level.c   304                    memcpy(level->map, m, 26*13);
    00000694 968E                   MOV.W       L679+2,R6  ; H'0152
    00000696 958C                   MOV.W       L679,R5    ; H'0280
    00000698 35FC                   ADD         R15,R5
    0000069A 4B0B                   JSR         @R11
    0000069C 6403                   MOV         R0,R4
         level.c   305                    level->nb_throwers = 7;
    0000069E E307                   MOV         #7,R3
         level.c   306                    level->thrower = malloc(7*sizeof(Thrower));
    000006A0 9489                   MOV.W       L679+4,R4  ; H'00E0
    000006A2 4C0B                   JSR         @R12
    000006A4 1E3C                   MOV.L       R3,@(48,R14)
         level.c   307                    level->thrower[0] = load_thrower(8, 2, T_BULLET, T_DOWN, 8);
    000006A6 6103                   MOV         R0,R1
    000006A8 1E0B                   MOV.L       R0,@(44,R14)
    000006AA E703                   MOV         #3,R7
    000006AC 2FA6                   MOV.L       R10,@-R15
    000006AE E600                   MOV         #0,R6
    000006B0 E502                   MOV         #2,R5
    000006B2 E408                   MOV         #8,R4
    000006B4 B771                   BSR         __$load_thrower
    000006B6 2F16                   MOV.L       R1,@-R15
         level.c   308                    level->thrower[1] = load_thrower(13, 2, T_BULLET, T_DOWN, 8);
    000006B8 51EB                   MOV.L       @(44,R14),R1
    000006BA E703                   MOV         #3,R7
    000006BC 2FA6                   MOV.L       R10,@-R15
    000006BE E600                   MOV         #0,R6
    000006C0 7120                   ADD         #32,R1
    000006C2 E502                   MOV         #2,R5
    000006C4 E40D                   MOV         #13,R4
    000006C6 B768                   BSR         __$load_thrower
    000006C8 2F16                   MOV.L       R1,@-R15
         level.c   309                    level->thrower[2] = load_thrower(18, 2, T_BULLET, T_DOWN, 8);
    000006CA E703                   MOV         #3,R7
    000006CC 51EB                   MOV.L       @(44,R14),R1
    000006CE E600                   MOV         #0,R6
    000006D0 2FA6                   MOV.L       R10,@-R15
    000006D2 E502                   MOV         #2,R5
    000006D4 7140                   ADD         #64,R1
    000006D6 E412                   MOV         #18,R4
    000006D8 B75F                   BSR         __$load_thrower
    000006DA 2F16                   MOV.L       R1,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   310                    level->thrower[3] = load_thrower(2, 3, T_BULLET, T_RIGHT, 8);
    000006DC 51EB                   MOV.L       @(44,R14),R1
    000006DE E701                   MOV         #1,R7
    000006E0 2FA6                   MOV.L       R10,@-R15
    000006E2 E600                   MOV         #0,R6
    000006E4 7160                   ADD         #96,R1
    000006E6 E503                   MOV         #3,R5
    000006E8 E402                   MOV         #2,R4
    000006EA B756                   BSR         __$load_thrower
    000006EC 2F16                   MOV.L       R1,@-R15
         level.c   311                    level->thrower[4] = load_thrower(11, 4, T_BULLET, T_LEFT, 8);
    000006EE E700                   MOV         #0,R7
    000006F0 9362                   MOV.W       L679+6,R3  ; H'0080
    000006F2 E504                   MOV         #4,R5
    000006F4 51EB                   MOV.L       @(44,R14),R1
    000006F6 6673                   MOV         R7,R6
    000006F8 2FA6                   MOV.L       R10,@-R15
    000006FA 313C                   ADD         R3,R1
    000006FC 2F16                   MOV.L       R1,@-R15
    000006FE B74C                   BSR         __$load_thrower
    00000700 E40B                   MOV         #11,R4
         level.c   312                    level->thrower[5] = load_thrower(15, 4, T_BULLET, T_RIGHT, 8);
    00000702 E701                   MOV         #1,R7
    00000704 9359                   MOV.W       L679+8,R3  ; H'00A0
    00000706 E600                   MOV         #0,R6
    00000708 51EB                   MOV.L       @(44,R14),R1
    0000070A E504                   MOV         #4,R5
    0000070C 2FA6                   MOV.L       R10,@-R15
    0000070E 313C                   ADD         R3,R1
    00000710 2F16                   MOV.L       R1,@-R15
    00000712 B742                   BSR         __$load_thrower
    00000714 E40F                   MOV         #15,R4
         level.c   313                    level->thrower[6] = load_thrower(4, 8, T_BULLET, T_LEFT, 8);
    00000716 E700                   MOV         #0,R7
    00000718 9350                   MOV.W       L679+10,R3 ; H'00C0
    0000071A E508                   MOV         #8,R5
    0000071C 51EB                   MOV.L       @(44,R14),R1
    0000071E 6673                   MOV         R7,R6
    00000720 2FA6                   MOV.L       R10,@-R15
    00000722 313C                   ADD         R3,R1
    00000724 2F16                   MOV.L       R1,@-R15
    00000726 B738                   BSR         __$load_thrower
    00000728 E404                   MOV         #4,R4
         level.c   314                    level->nb_messages = 5;
    0000072A E305                   MOV         #5,R3
         level.c   315                    level->message = malloc(5*sizeof(Message));
    0000072C 9447                   MOV.W       L679+12,R4 ; H'00B4
    0000072E 4C0B                   JSR         @R12
    00000730 1E3A                   MOV.L       R3,@(40,R14)
         level.c   316                    level->message[0] = load_message("New toys for you !\nI'm sure you'll like it.", TOP, BEGI
                         +N, 0, 0, 0, 0);
    00000732 6103                   MOV         R0,R1
    00000734 D426                   MOV.L       L679+30,R4 ; L342
    00000736 E300                   MOV         #0,R3
    00000738 1E09                   MOV.L       R0,@(36,R14)
    0000073A 6733                   MOV         R3,R7
    0000073C 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000073E 6633                   MOV         R3,R6
    00000740 2F36                   MOV.L       R3,@-R15
    00000742 2F36                   MOV.L       R3,@-R15
    00000744 2F16                   MOV.L       R1,@-R15
    00000746 B6E9                   BSR         __$load_message
    00000748 6533                   MOV         R3,R5
         level.c   317                    level->message[1] = load_message("Nah, I won't say a thing.\nI'll juste watch.", TOP, XY, 
                         +79, 108, 41, 56);
    0000074A ED29                   MOV         #41,R13
    0000074C 51E9                   MOV.L       @(36,R14),R1
    0000074E E338                   MOV         #56,R3
    00000750 D420                   MOV.L       L679+34,R4 ; L343
    00000752 E26C                   MOV         #108,R2
    00000754 2F36                   MOV.L       R3,@-R15
    00000756 E74F                   MOV         #79,R7
    00000758 2FD6                   MOV.L       R13,@-R15
    0000075A E604                   MOV         #4,R6
    0000075C 2F26                   MOV.L       R2,@-R15
    0000075E 7124                   ADD         #36,R1
    00000760 2F16                   MOV.L       R1,@-R15
    00000762 B6DB                   BSR         __$load_message
    00000764 E500                   MOV         #0,R5
         level.c   318                    level->message[2] = load_message("Is this princess\nreally worth it ?", TOP, XY, 109, 129,
                         + 41, 56);
    00000766 E338                   MOV         #56,R3
    00000768 922A                   MOV.W       L679+14,R2 ; H'0081
    0000076A E76D                   MOV         #109,R7
    0000076C D41A                   MOV.L       L679+38,R4 ; L344
    0000076E E604                   MOV         #4,R6
    00000770 51E9                   MOV.L       @(36,R14),R1
    00000772 7148                   ADD         #72,R1
    00000774 2F36                   MOV.L       R3,@-R15
    00000776 2FD6                   MOV.L       R13,@-R15
    00000778 2F26                   MOV.L       R2,@-R15
    0000077A 2F16                   MOV.L       R1,@-R15
    0000077C B6CE                   BSR         __$load_message
    0000077E E500                   MOV         #0,R5
         level.c   319                    level->message[3] = load_message("My little sister plays\nbetter than you.", TOP, XY, 159,
                         + 185, 41, 72);
    00000780 51E9                   MOV.L       @(36,R14),R1
    00000782 E348                   MOV         #72,R3
    00000784 921D                   MOV.W       L679+16,R2 ; H'00B9
    00000786 E604                   MOV         #4,R6
    00000788 D414                   MOV.L       L679+42,R4 ; L345
    0000078A 716C                   ADD         #108,R1
    0000078C 971A                   MOV.W       L679+18,R7 ; H'009F
    0000078E 2F36                   MOV.L       R3,@-R15
    00000790 2FD6                   MOV.L       R13,@-R15
    00000792 2F26                   MOV.L       R2,@-R15
    00000794 2F16                   MOV.L       R1,@-R15
    00000796 B6C1                   BSR         __$load_message
    00000798 E500                   MOV         #0,R5
    0000079A 7F78                   ADD         #120,R15
         level.c   320                    level->message[4] = load_message("So, have you met\nmy uncle Benny ?", TOP, DEATH, 7, 0, 0
                         +, 0);
    0000079C D410                   MOV.L       L679+46,R4 ; L346
    0000079E E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007A0 51E9                   MOV.L       @(36,R14),R1
    000007A2 E707                   MOV         #7,R7
    000007A4 2F36                   MOV.L       R3,@-R15
    000007A6 6533                   MOV         R3,R5
    000007A8 2F36                   MOV.L       R3,@-R15
    000007AA 318C                   ADD         R8,R1
    000007AC 2F36                   MOV.L       R3,@-R15
    000007AE A0B8                   BRA         L664
    000007B0 E601                   MOV         #1,R6
    000007B2              L679:                             
    000007B2 0280                   .DATA.W     H'0280
    000007B4 0152                   .DATA.W     H'0152
    000007B6 00E0                   .DATA.W     H'00E0
    000007B8 0080                   .DATA.W     H'0080
    000007BA 00A0                   .DATA.W     H'00A0
    000007BC 00C0                   .DATA.W     H'00C0
    000007BE 00B4                   .DATA.W     H'00B4
    000007C0 0081                   .DATA.W     H'0081
    000007C2 00B9                   .DATA.W     H'00B9
    000007C4 009F                   .DATA.W     H'009F
    000007C6 0000                   .DATA.W     0
    000007C8 <00000000>             .DATA.L     L341
    000007CC <00000000>             .DATA.L     __slow_mvn
    000007D0 <00000000>             .DATA.L     L342
    000007D4 <00000000>             .DATA.L     L343
    000007D8 <00000000>             .DATA.L     L344
    000007DC <00000000>             .DATA.L     L345
    000007E0 <00000000>             .DATA.L     L346
    000007E4              L594:                             
         level.c   321            }
         level.c   322            else if(n == 9)
    000007E4 6093                   MOV         R9,R0
    000007E6 8809                   CMP/EQ      #9,R0
    000007E8 8901                   BT          L680
    000007EA A0B5                   BRA         L596
    000007EC 0009                   NOP
    000007EE              L680:                             
         level.c   323            {
         level.c   324                    char m[] = {
         level.c   325                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   326                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   327                            1, 0, 0, 0, 0, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   328                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   329                            1, 0,12, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 1, 1,
         level.c   330                            1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   331                            1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   332                            1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   333                            1, 1, 1, 1, 1, 8, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,
         level.c   334                            1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   335                            1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   336                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   337                            1, 0,11, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   338                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   339                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   340                    };
    000007EE 919D                   MOV.W       L681,R1    ; H'02D4
    000007F0 D252                   MOV.L       L681+16,R2 ; L349




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007F2 909C                   MOV.W       L681+2,R0  ; H'00FF
    000007F4 D352                   MOV.L       L681+20,R3 ; __slow_mvn
    000007F6 430B                   JSR         @R3
    000007F8 31FC                   ADD         R15,R1
         level.c   341                    level->width = 17;
         level.c   342                    level->height = 15;
    000007FA E10F                   MOV         #15,R1
         level.c   343                    level->map = malloc(17*15);
    000007FC 9497                   MOV.W       L681+2,R4  ; H'00FF
    000007FE 1E73                   MOV.L       R7,@(12,R14)
    00000800 4C0B                   JSR         @R12
    00000802 1E14                   MOV.L       R1,@(16,R14)
    00000804 1E02                   MOV.L       R0,@(8,R14)
         level.c   344                    memcpy(level->map, m, 17*15);
    00000806 9692                   MOV.W       L681+2,R6  ; H'00FF
    00000808 9590                   MOV.W       L681,R5    ; H'02D4
    0000080A 35FC                   ADD         R15,R5
    0000080C 4B0B                   JSR         @R11
    0000080E 6403                   MOV         R0,R4
         level.c   345                    level->nb_throwers = 7;
         level.c   346                    level->thrower = malloc(7*sizeof(Thrower));
    00000810 948E                   MOV.W       L681+4,R4  ; H'00E0
    00000812 E307                   MOV         #7,R3
    00000814 4C0B                   JSR         @R12
    00000816 1E3C                   MOV.L       R3,@(48,R14)
    00000818 1E0B                   MOV.L       R0,@(44,R14)
         level.c   347                    level->thrower[0] = load_thrower(8, 2, T_BULLET, T_DOWN, 8);
    0000081A 6103                   MOV         R0,R1
    0000081C 2FA6                   MOV.L       R10,@-R15
    0000081E E703                   MOV         #3,R7
    00000820 E600                   MOV         #0,R6
    00000822 E502                   MOV         #2,R5
    00000824 E408                   MOV         #8,R4
    00000826 B6B8                   BSR         __$load_thrower
    00000828 2F16                   MOV.L       R1,@-R15
         level.c   348                    level->thrower[1] = load_thrower(7, 4, T_BULLET, T_LEFT, 8);
    0000082A E700                   MOV         #0,R7
    0000082C 51EB                   MOV.L       @(44,R14),R1
    0000082E E504                   MOV         #4,R5
    00000830 2FA6                   MOV.L       R10,@-R15
    00000832 6673                   MOV         R7,R6
    00000834 7120                   ADD         #32,R1
    00000836 E407                   MOV         #7,R4
    00000838 B6AF                   BSR         __$load_thrower
    0000083A 2F16                   MOV.L       R1,@-R15
         level.c   349                    level->thrower[2] = load_thrower(5, 5, T_BULLET, T_RIGHT, 8);
    0000083C 51EB                   MOV.L       @(44,R14),R1
    0000083E E701                   MOV         #1,R7
    00000840 2FA6                   MOV.L       R10,@-R15
    00000842 E600                   MOV         #0,R6
    00000844 7140                   ADD         #64,R1
    00000846 E505                   MOV         #5,R5
    00000848 6453                   MOV         R5,R4
    0000084A B6A6                   BSR         __$load_thrower
    0000084C 2F16                   MOV.L       R1,@-R15
         level.c   350                    level->thrower[3] = load_thrower(5, 6, T_BULLET, T_RIGHT, 4);
    0000084E E304                   MOV         #4,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000850 51EB                   MOV.L       @(44,R14),R1
    00000852 E701                   MOV         #1,R7
    00000854 2F36                   MOV.L       R3,@-R15
    00000856 E600                   MOV         #0,R6
    00000858 7160                   ADD         #96,R1
    0000085A E506                   MOV         #6,R5
    0000085C 2F16                   MOV.L       R1,@-R15
    0000085E B69C                   BSR         __$load_thrower
    00000860 E405                   MOV         #5,R4
         level.c   351                    level->thrower[4] = load_thrower(5, 7, T_BULLET, T_RIGHT, 5);
    00000862 E205                   MOV         #5,R2
    00000864 9365                   MOV.W       L681+6,R3  ; H'0080
    00000866 E701                   MOV         #1,R7
    00000868 51EB                   MOV.L       @(44,R14),R1
    0000086A E600                   MOV         #0,R6
    0000086C 2F26                   MOV.L       R2,@-R15
    0000086E E507                   MOV         #7,R5
    00000870 313C                   ADD         R3,R1
    00000872 2F16                   MOV.L       R1,@-R15
    00000874 B691                   BSR         __$load_thrower
    00000876 6423                   MOV         R2,R4
         level.c   352                    level->thrower[5] = load_thrower(5, 8, T_BULLET, T_RIGHT, 4);
    00000878 935C                   MOV.W       L681+8,R3  ; H'00A0
    0000087A E204                   MOV         #4,R2
    0000087C 51EB                   MOV.L       @(44,R14),R1
    0000087E E701                   MOV         #1,R7
    00000880 2F26                   MOV.L       R2,@-R15
    00000882 E600                   MOV         #0,R6
    00000884 313C                   ADD         R3,R1
    00000886 E508                   MOV         #8,R5
    00000888 2F16                   MOV.L       R1,@-R15
    0000088A B686                   BSR         __$load_thrower
    0000088C E405                   MOV         #5,R4
         level.c   353                    level->thrower[6] = load_thrower(5, 9, T_BULLET, T_RIGHT, 8);
    0000088E E701                   MOV         #1,R7
    00000890 9351                   MOV.W       L681+10,R3 ; H'00C0
    00000892 E600                   MOV         #0,R6
    00000894 51EB                   MOV.L       @(44,R14),R1
    00000896 E509                   MOV         #9,R5
    00000898 2FA6                   MOV.L       R10,@-R15
    0000089A 313C                   ADD         R3,R1
    0000089C 2F16                   MOV.L       R1,@-R15
    0000089E B67C                   BSR         __$load_thrower
    000008A0 E405                   MOV         #5,R4
         level.c   354                    level->nb_messages = 5;
    000008A2 E305                   MOV         #5,R3
         level.c   355                    level->message = malloc(5*sizeof(Message));
    000008A4 9448                   MOV.W       L681+12,R4 ; H'00B4
    000008A6 4C0B                   JSR         @R12
    000008A8 1E3A                   MOV.L       R3,@(40,R14)
         level.c   356                    level->message[0] = load_message("Same old story...", TOP, BEGIN, 0, 0, 0, 0);
    000008AA 6103                   MOV         R0,R1
    000008AC D425                   MOV.L       L681+24,R4 ; L350
    000008AE E300                   MOV         #0,R3
    000008B0 1E09                   MOV.L       R0,@(36,R14)
    000008B2 6733                   MOV         R3,R7
    000008B4 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008B6 6633                   MOV         R3,R6
    000008B8 2F36                   MOV.L       R3,@-R15
    000008BA 2F36                   MOV.L       R3,@-R15
    000008BC 2F16                   MOV.L       R1,@-R15
    000008BE B62D                   BSR         __$load_message
    000008C0 6533                   MOV         R3,R5
         level.c   357                    level->message[1] = load_message("The princess is await you,\nhurry !", BOTTOM, Y, BEFORE,
                         + 32, 0, 0);
    000008C2 E300                   MOV         #0,R3
    000008C4 D420                   MOV.L       L681+28,R4 ; L351
    000008C6 E220                   MOV         #32,R2
    000008C8 51E9                   MOV.L       @(36,R14),R1
    000008CA E603                   MOV         #3,R6
    000008CC 2F36                   MOV.L       R3,@-R15
    000008CE 6733                   MOV         R3,R7
    000008D0 2F36                   MOV.L       R3,@-R15
    000008D2 E501                   MOV         #1,R5
    000008D4 2F26                   MOV.L       R2,@-R15
    000008D6 7124                   ADD         #36,R1
    000008D8 B620                   BSR         __$load_message
    000008DA 2F16                   MOV.L       R1,@-R15
         level.c   358                    level->message[2] = load_message("You are going crazy,\naren't you ?", TOP, DEATH, 4, 0, 0
                         +, 0);
    000008DC 51E9                   MOV.L       @(36,R14),R1
    000008DE E300                   MOV         #0,R3
    000008E0 D41A                   MOV.L       L681+32,R4 ; L352
    000008E2 E704                   MOV         #4,R7
    000008E4 2F36                   MOV.L       R3,@-R15
    000008E6 E601                   MOV         #1,R6
    000008E8 2F36                   MOV.L       R3,@-R15
    000008EA 7148                   ADD         #72,R1
    000008EC 2F36                   MOV.L       R3,@-R15
    000008EE 2F16                   MOV.L       R1,@-R15
    000008F0 B614                   BSR         __$load_message
    000008F2 6533                   MOV         R3,R5
         level.c   359                    level->message[3] = load_message("You sould take a break.\nReally.", TOP, DEATH, 9, 0, 0, 
                         +0);
    000008F4 51E9                   MOV.L       @(36,R14),R1
    000008F6 E300                   MOV         #0,R3
    000008F8 D415                   MOV.L       L681+36,R4 ; L353
    000008FA E709                   MOV         #9,R7
    000008FC 2F36                   MOV.L       R3,@-R15
    000008FE E601                   MOV         #1,R6
    00000900 2F36                   MOV.L       R3,@-R15
    00000902 716C                   ADD         #108,R1
    00000904 2F36                   MOV.L       R3,@-R15
    00000906 2F16                   MOV.L       R1,@-R15
    00000908 B608                   BSR         __$load_message
    0000090A 6533                   MOV         R3,R5
         level.c   360                    level->message[4] = load_message("You are my hero.", TOP, DEATH, 13, 0, 0, 0);
    0000090C D411                   MOV.L       L681+40,R4 ; L354
    0000090E 7F78                   ADD         #120,R15
    00000910 51E9                   MOV.L       @(36,R14),R1
    00000912 E300                   MOV         #0,R3
    00000914 2F36                   MOV.L       R3,@-R15
    00000916 E70D                   MOV         #13,R7
    00000918 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000091A E601                   MOV         #1,R6
    0000091C 2F36                   MOV.L       R3,@-R15
    0000091E 6533                   MOV         R3,R5
    00000920 318C                   ADD         R8,R1
    00000922              L664:                             
    00000922 2F16                   MOV.L       R1,@-R15
    00000924 B5FA                   BSR         __$load_message
    00000926 0009                   NOP
    00000928 A5A2                   BRA         L579
    0000092A 7F10                   ADD         #16,R15
    0000092C              L681:                             
    0000092C 02D4                   .DATA.W     H'02D4
    0000092E 00FF                   .DATA.W     H'00FF
    00000930 00E0                   .DATA.W     H'00E0
    00000932 0080                   .DATA.W     H'0080
    00000934 00A0                   .DATA.W     H'00A0
    00000936 00C0                   .DATA.W     H'00C0
    00000938 00B4                   .DATA.W     H'00B4
    0000093A 0000                   .DATA.W     0
    0000093C <00000000>             .DATA.L     L349
    00000940 <00000000>             .DATA.L     __slow_mvn
    00000944 <00000000>             .DATA.L     L350
    00000948 <00000000>             .DATA.L     L351
    0000094C <00000000>             .DATA.L     L352
    00000950 <00000000>             .DATA.L     L353
    00000954 <00000000>             .DATA.L     L354
    00000958              L596:                             
         level.c   361            }
         level.c   362            else if(n == 10)
    00000958 880A                   CMP/EQ      #10,R0
    0000095A 8901                   BT          L682
    0000095C A0AA                   BRA         L598
    0000095E 0009                   NOP
    00000960              L682:                             
         level.c   363            {
         level.c   364                    char m[] = {
         level.c   365                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   366                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   367                            1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,13,13, 1, 1,
         level.c   368                            1, 1, 1, 1, 1, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,13, 1, 1,
         level.c   369                            1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   370                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   371                            1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   372                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   373                            1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   374                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   375                            1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   376                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   377                            1, 1, 0,12, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   378                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   379                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   380                    };
    00000960 9191                   MOV.W       L683,R1    ; H'025C
    00000962 D24D                   MOV.L       L683+18,R2 ; L357
    00000964 9090                   MOV.W       L683+2,R0  ; H'0177
    00000966 D34D                   MOV.L       L683+22,R3 ; __slow_mvn
    00000968 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000096A 31FC                   ADD         R15,R1
         level.c   381                    Moving_line line = {73, 30, 16, 2, 0, 73, 30, 119, 30};
    0000096C 918D                   MOV.W       L683+4,R1  ; H'0238
    0000096E 31FC                   ADD         R15,R1
    00000970 D24B                   MOV.L       L683+26,R2 ; L359
    00000972 D34C                   MOV.L       L683+30,R3 ; __quick_odd_mvn
    00000974 430B                   JSR         @R3
    00000976 E024                   MOV         #36,R0
         level.c   382                    level->width = 25;
         level.c   383                    level->height = 15;
         level.c   384                    level->map = malloc(25*15);
    00000978 9486                   MOV.W       L683+2,R4  ; H'0177
    0000097A E119                   MOV         #25,R1
    0000097C 1E13                   MOV.L       R1,@(12,R14)
    0000097E E30F                   MOV         #15,R3
    00000980 4C0B                   JSR         @R12
    00000982 1E34                   MOV.L       R3,@(16,R14)
    00000984 1E02                   MOV.L       R0,@(8,R14)
         level.c   385                    memcpy(level->map, m, 25*15);
    00000986 967F                   MOV.W       L683+2,R6  ; H'0177
    00000988 957D                   MOV.W       L683,R5    ; H'025C
    0000098A 35FC                   ADD         R15,R5
    0000098C 4B0B                   JSR         @R11
    0000098E 6403                   MOV         R0,R4
         level.c   386                    level->nb_lines = 1;
    00000990 E201                   MOV         #1,R2
    00000992 1E26                   MOV.L       R2,@(24,R14)
         level.c   387                    level->line = malloc(sizeof(Moving_line));
    00000994 4C0B                   JSR         @R12
    00000996 E424                   MOV         #36,R4
    00000998 1E05                   MOV.L       R0,@(20,R14)
         level.c   388                    level->line[0] = line;
    0000099A 6103                   MOV         R0,R1
    0000099C 9275                   MOV.W       L683+4,R2  ; H'0238
    0000099E 32FC                   ADD         R15,R2
    000009A0 D340                   MOV.L       L683+30,R3 ; __quick_odd_mvn
    000009A2 430B                   JSR         @R3
    000009A4 E024                   MOV         #36,R0
         level.c   389                    level->nb_throwers = 6;
    000009A6 E206                   MOV         #6,R2
         level.c   390                    level->thrower = malloc(6*sizeof(Thrower));
    000009A8 9470                   MOV.W       L683+6,R4  ; H'00C0
    000009AA 4C0B                   JSR         @R12
    000009AC 1E2C                   MOV.L       R2,@(48,R14)
         level.c   391                    level->thrower[0] = load_thrower(9, 4, T_BULLET, T_RIGHT, 2);
    000009AE 6103                   MOV         R0,R1
    000009B0 1E0B                   MOV.L       R0,@(44,R14)
    000009B2 E302                   MOV         #2,R3
    000009B4 2F36                   MOV.L       R3,@-R15
    000009B6 E701                   MOV         #1,R7
    000009B8 2F16                   MOV.L       R1,@-R15
    000009BA E600                   MOV         #0,R6
    000009BC E504                   MOV         #4,R5
    000009BE B5EC                   BSR         __$load_thrower
    000009C0 E409                   MOV         #9,R4
         level.c   392                    level->thrower[1] = load_thrower(16, 5, T_BULLET, T_LEFT, 3);
    000009C2 E303                   MOV         #3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009C4 51EB                   MOV.L       @(44,R14),R1
    000009C6 E700                   MOV         #0,R7
    000009C8 2F36                   MOV.L       R3,@-R15
    000009CA E505                   MOV         #5,R5
    000009CC 7120                   ADD         #32,R1
    000009CE 6673                   MOV         R7,R6
    000009D0 2F16                   MOV.L       R1,@-R15
    000009D2 B5E2                   BSR         __$load_thrower
    000009D4 E410                   MOV         #16,R4
         level.c   393                    level->thrower[2] = load_thrower(9, 6, T_BULLET, T_RIGHT, 1);
    000009D6 E301                   MOV         #1,R3
    000009D8 51EB                   MOV.L       @(44,R14),R1
    000009DA E600                   MOV         #0,R6
    000009DC 2F36                   MOV.L       R3,@-R15
    000009DE 6733                   MOV         R3,R7
    000009E0 7140                   ADD         #64,R1
    000009E2 E506                   MOV         #6,R5
    000009E4 2F16                   MOV.L       R1,@-R15
    000009E6 B5D8                   BSR         __$load_thrower
    000009E8 E409                   MOV         #9,R4
         level.c   394                    level->thrower[3] = load_thrower(16, 7, T_BULLET, T_LEFT, 6);
    000009EA E306                   MOV         #6,R3
    000009EC 51EB                   MOV.L       @(44,R14),R1
    000009EE E700                   MOV         #0,R7
    000009F0 2F36                   MOV.L       R3,@-R15
    000009F2 E507                   MOV         #7,R5
    000009F4 7160                   ADD         #96,R1
    000009F6 6673                   MOV         R7,R6
    000009F8 2F16                   MOV.L       R1,@-R15
    000009FA B5CE                   BSR         __$load_thrower
    000009FC E410                   MOV         #16,R4
         level.c   395                    level->thrower[4] = load_thrower(9, 8, T_BULLET, T_RIGHT, 1);
    000009FE E201                   MOV         #1,R2
    00000A00 9345                   MOV.W       L683+8,R3  ; H'0080
    00000A02 E600                   MOV         #0,R6
    00000A04 51EB                   MOV.L       @(44,R14),R1
    00000A06 E508                   MOV         #8,R5
    00000A08 2F26                   MOV.L       R2,@-R15
    00000A0A 6723                   MOV         R2,R7
    00000A0C 313C                   ADD         R3,R1
    00000A0E 2F16                   MOV.L       R1,@-R15
    00000A10 B5C3                   BSR         __$load_thrower
    00000A12 E409                   MOV         #9,R4
         level.c   396                    level->thrower[5] = load_thrower(16, 9, T_BULLET, T_LEFT, 1);
    00000A14 933C                   MOV.W       L683+10,R3 ; H'00A0
    00000A16 E201                   MOV         #1,R2
    00000A18 51EB                   MOV.L       @(44,R14),R1
    00000A1A E700                   MOV         #0,R7
    00000A1C 2F26                   MOV.L       R2,@-R15
    00000A1E E509                   MOV         #9,R5
    00000A20 313C                   ADD         R3,R1
    00000A22 6673                   MOV         R7,R6
    00000A24 2F16                   MOV.L       R1,@-R15
    00000A26 B5B8                   BSR         __$load_thrower
    00000A28 E410                   MOV         #16,R4
         level.c   397                    level->nb_messages = 3;
    00000A2A E303                   MOV         #3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A2C 1E3A                   MOV.L       R3,@(40,R14)
         level.c   398                    level->message = malloc(3*sizeof(Message));
    00000A2E 4C0B                   JSR         @R12
    00000A30 E46C                   MOV         #108,R4
         level.c   399                    level->message[0] = load_message("Look for secrets.", BOTTOM, BEGIN, 0, 0, 0, 0);
    00000A32 6103                   MOV         R0,R1
    00000A34 D41C                   MOV.L       L683+34,R4 ; L360
    00000A36 E300                   MOV         #0,R3
    00000A38 1E09                   MOV.L       R0,@(36,R14)
    00000A3A 6733                   MOV         R3,R7
    00000A3C 2F36                   MOV.L       R3,@-R15
    00000A3E 6633                   MOV         R3,R6
    00000A40 2F36                   MOV.L       R3,@-R15
    00000A42 2F36                   MOV.L       R3,@-R15
    00000A44 2F16                   MOV.L       R1,@-R15
    00000A46 B569                   BSR         __$load_message
    00000A48 E501                   MOV         #1,R5
         level.c   400                    level->message[1] = load_message("It's easier this way,\nisn't it ?", TOP, XY, 175, 177, 2
                         +4, 32);
    00000A4A E320                   MOV         #32,R3
    00000A4C 9722                   MOV.W       L683+14,R7 ; H'00AF
    00000A4E E604                   MOV         #4,R6
    00000A50 D416                   MOV.L       L683+38,R4 ; L361
    00000A52 E218                   MOV         #24,R2
    00000A54 51E9                   MOV.L       @(36,R14),R1
    00000A56 E500                   MOV         #0,R5
    00000A58 2F36                   MOV.L       R3,@-R15
    00000A5A 7124                   ADD         #36,R1
    00000A5C 2F26                   MOV.L       R2,@-R15
    00000A5E 6013                   MOV         R1,R0
    00000A60 9117                   MOV.W       L683+12,R1 ; H'00B1
    00000A62 2F16                   MOV.L       R1,@-R15
    00000A64 B55A                   BSR         __$load_message
    00000A66 2F06                   MOV.L       R0,@-R15
         level.c   401                    level->message[2] = load_message("Some walls aren't what\nthey appear to be...", BOTTOM, D
                         +EATH, 4, 0, 0, 0);
    00000A68 51E9                   MOV.L       @(36,R14),R1
    00000A6A E300                   MOV         #0,R3
    00000A6C D410                   MOV.L       L683+42,R4 ; L362
    00000A6E E704                   MOV         #4,R7
    00000A70 2F36                   MOV.L       R3,@-R15
    00000A72 E601                   MOV         #1,R6
    00000A74 2F36                   MOV.L       R3,@-R15
    00000A76 7148                   ADD         #72,R1
    00000A78 2F36                   MOV.L       R3,@-R15
    00000A7A 6563                   MOV         R6,R5
    00000A7C              L665:                             
    00000A7C 2F16                   MOV.L       R1,@-R15
    00000A7E B54D                   BSR         __$load_message
    00000A80 0009                   NOP
    00000A82 A4F5                   BRA         L579
    00000A84 7F60                   ADD         #96,R15
    00000A86              L683:                             
    00000A86 025C                   .DATA.W     H'025C
    00000A88 0177                   .DATA.W     H'0177
    00000A8A 0238                   .DATA.W     H'0238
    00000A8C 00C0                   .DATA.W     H'00C0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A8E 0080                   .DATA.W     H'0080
    00000A90 00A0                   .DATA.W     H'00A0
    00000A92 00B1                   .DATA.W     H'00B1
    00000A94 00AF                   .DATA.W     H'00AF
    00000A96 0000                   .DATA.W     0
    00000A98 <00000000>             .DATA.L     L357
    00000A9C <00000000>             .DATA.L     __slow_mvn
    00000AA0 <00000000>             .DATA.L     L359
    00000AA4 <00000000>             .DATA.L     __quick_odd_mvn
    00000AA8 <00000000>             .DATA.L     L360
    00000AAC <00000000>             .DATA.L     L361
    00000AB0 <00000000>             .DATA.L     L362
    00000AB4              L598:                             
         level.c   402            }
         level.c   403            else if(n == 11)
    00000AB4 6093                   MOV         R9,R0
    00000AB6 880B                   CMP/EQ      #11,R0
    00000AB8 8901                   BT          L684
    00000ABA A091                   BRA         L600
    00000ABC 0009                   NOP
    00000ABE              L684:                             
         level.c   404            {
         level.c   405                    char m[] = {
         level.c   406                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   407                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   408                            1, 1, 0, 0, 0, 0, 3, 1, 4, 0, 0, 0, 1, 1, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   409                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   410                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   411                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   412                            1, 1, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,12, 1, 1,
         level.c   413                            1, 1, 1, 1, 1, 1,14,14, 1, 1,14,14, 1, 1,14,14, 1, 1, 1,14,14, 1, 1, 1, 1, 1,
         level.c   414                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1,13,13, 1, 1, 1, 1, 1,
         level.c   415                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1,13,13, 1, 1, 1, 1, 1,
         level.c   416                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1,13,13,13,13,13, 1, 1,
         level.c   417                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   418                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   419                            1, 1, 1, 1, 1, 1,13,13, 1, 1,13,13, 1, 1,13,13, 1, 1, 1, 1, 1, 1, 1,13, 1, 1,
         level.c   420                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   421                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   422                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   423                            1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1,
         level.c   424                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   425                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   426                    };
    00000ABE 9176                   MOV.W       L685,R1    ; H'01CC
    00000AC0 D23F                   MOV.L       L685+18,R2 ; L365
    00000AC2 9075                   MOV.W       L685+2,R0  ; H'0208
    00000AC4 D33F                   MOV.L       L685+22,R3 ; __slow_mvn
    00000AC6 430B                   JSR         @R3
    00000AC8 31FC                   ADD         R15,R1
         level.c   427                    level->width = 26;
         level.c   428                    level->height = 20;
    00000ACA E114                   MOV         #20,R1
    00000ACC 1E43                   MOV.L       R4,@(12,R14)
         level.c   429                    level->map = malloc(26*20);
    00000ACE 946F                   MOV.W       L685+2,R4  ; H'0208
    00000AD0 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD2 1E14                   MOV.L       R1,@(16,R14)
    00000AD4 1E02                   MOV.L       R0,@(8,R14)
         level.c   430                    memcpy(level->map, m, 26*20);
    00000AD6 966B                   MOV.W       L685+2,R6  ; H'0208
    00000AD8 9569                   MOV.W       L685,R5    ; H'01CC
    00000ADA 35FC                   ADD         R15,R5
    00000ADC 4B0B                   JSR         @R11
    00000ADE 6403                   MOV         R0,R4
         level.c   431                    level->nb_throwers = 1;
    00000AE0 E301                   MOV         #1,R3
    00000AE2 1E3C                   MOV.L       R3,@(48,R14)
         level.c   432                    level->thrower = malloc(sizeof(Thrower));
    00000AE4 4C0B                   JSR         @R12
    00000AE6 E420                   MOV         #32,R4
    00000AE8 1E0B                   MOV.L       R0,@(44,R14)
         level.c   433                    level->thrower[0] = load_thrower(17, 2, T_BULLET, T_DOWN, 8);
    00000AEA 6103                   MOV         R0,R1
    00000AEC 2FA6                   MOV.L       R10,@-R15
    00000AEE E703                   MOV         #3,R7
    00000AF0 E600                   MOV         #0,R6
    00000AF2 E502                   MOV         #2,R5
    00000AF4 E411                   MOV         #17,R4
    00000AF6 B550                   BSR         __$load_thrower
    00000AF8 2F16                   MOV.L       R1,@-R15
         level.c   434                    level->nb_messages = 6;
    00000AFA E306                   MOV         #6,R3
         level.c   435                    level->message = malloc(6*sizeof(Message));
    00000AFC 9459                   MOV.W       L685+4,R4  ; H'00D8
    00000AFE 4C0B                   JSR         @R12
    00000B00 1E3A                   MOV.L       R3,@(40,R14)
         level.c   436                    level->message[0] = load_message("Lets crab some popcorn...", TOP, BEGIN, 0, 0, 0, 0);
    00000B02 6103                   MOV         R0,R1
    00000B04 D430                   MOV.L       L685+26,R4 ; L366
    00000B06 E300                   MOV         #0,R3
    00000B08 1E09                   MOV.L       R0,@(36,R14)
    00000B0A 6733                   MOV         R3,R7
    00000B0C 2F36                   MOV.L       R3,@-R15
    00000B0E 6633                   MOV         R3,R6
    00000B10 2F36                   MOV.L       R3,@-R15
    00000B12 2F36                   MOV.L       R3,@-R15
    00000B14 2F16                   MOV.L       R1,@-R15
    00000B16 B501                   BSR         __$load_message
    00000B18 6533                   MOV         R3,R5
         level.c   437                    level->message[1] = load_message("Oops, I forgot to tell you\nabout the traps...", TOP, Y,
                         + AFTER, 49, 0, 0);
    00000B1A E300                   MOV         #0,R3
    00000B1C D42B                   MOV.L       L685+30,R4 ; L367
    00000B1E E231                   MOV         #49,R2
    00000B20 51E9                   MOV.L       @(36,R14),R1
    00000B22 E701                   MOV         #1,R7
    00000B24 2F36                   MOV.L       R3,@-R15
    00000B26 E603                   MOV         #3,R6
    00000B28 2F36                   MOV.L       R3,@-R15
    00000B2A 6533                   MOV         R3,R5
    00000B2C 2F26                   MOV.L       R2,@-R15
    00000B2E 7124                   ADD         #36,R1
    00000B30 B4F4                   BSR         __$load_message




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B32 2F16                   MOV.L       R1,@-R15
         level.c   438                    level->message[2] = load_message("Fate can be cruel sometimes.\nI don't think you have a c
                         +hoice...", TOP, XY, 79, 97, 136, 136);
    00000B34 51E9                   MOV.L       @(36,R14),R1
    00000B36 E261                   MOV         #97,R2
    00000B38 D425                   MOV.L       L685+34,R4 ; L368
    00000B3A E74F                   MOV         #79,R7
    00000B3C 933A                   MOV.W       L685+6,R3  ; H'0088
    00000B3E E604                   MOV         #4,R6
    00000B40 2F36                   MOV.L       R3,@-R15
    00000B42 E500                   MOV         #0,R5
    00000B44 2F36                   MOV.L       R3,@-R15
    00000B46 7148                   ADD         #72,R1
    00000B48 2F26                   MOV.L       R2,@-R15
    00000B4A B4E7                   BSR         __$load_message
    00000B4C 2F16                   MOV.L       R1,@-R15
         level.c   439                    level->message[3] = load_message("I think you're starting to\nlike this, aren't you ?", TO
                         +P, XY, 111, 121, 56, 64);
    00000B4E E340                   MOV         #64,R3
    00000B50 D420                   MOV.L       L685+38,R4 ; L369
    00000B52 E238                   MOV         #56,R2
    00000B54 51E9                   MOV.L       @(36,R14),R1
    00000B56 E76F                   MOV         #111,R7
    00000B58 2F36                   MOV.L       R3,@-R15
    00000B5A E604                   MOV         #4,R6
    00000B5C 2F26                   MOV.L       R2,@-R15
    00000B5E E500                   MOV         #0,R5
    00000B60 716C                   ADD         #108,R1
    00000B62 6013                   MOV         R1,R0
    00000B64 E179                   MOV         #121,R1
    00000B66 2F16                   MOV.L       R1,@-R15
    00000B68 B4D8                   BSR         __$load_message
    00000B6A 2F06                   MOV.L       R0,@-R15
         level.c   440                    level->message[4] = load_message("You found my secret room !", TOP, XY, 151, 161, 56, 64);
    00000B6C 51E9                   MOV.L       @(36,R14),R1
    00000B6E E340                   MOV         #64,R3
    00000B70 9722                   MOV.W       L685+10,R7 ; H'0097
    00000B72 E604                   MOV         #4,R6
    00000B74 D418                   MOV.L       L685+42,R4 ; L370
    00000B76 E238                   MOV         #56,R2
    00000B78 2F36                   MOV.L       R3,@-R15
    00000B7A E500                   MOV         #0,R5
    00000B7C 2F26                   MOV.L       R2,@-R15
    00000B7E 318C                   ADD         R8,R1
    00000B80 6013                   MOV         R1,R0
    00000B82 9118                   MOV.W       L685+8,R1  ; H'00A1
    00000B84 2F16                   MOV.L       R1,@-R15
    00000B86 B4C9                   BSR         __$load_message
    00000B88 2F06                   MOV.L       R0,@-R15
         level.c   441                    level->message[5] = load_message("Or not.", TOP, XY, 183, 185, 81, 89);
    00000B8A E259                   MOV         #89,R2
    00000B8C 9716                   MOV.W       L685+14,R7 ; H'00B7
    00000B8E E604                   MOV         #4,R6
    00000B90 D412                   MOV.L       L685+46,R4 ; L371
    00000B92 E500                   MOV         #0,R5
    00000B94 9311                   MOV.W       L685+12,R3 ; H'00B4
    00000B96 51E9                   MOV.L       @(36,R14),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B98 2F26                   MOV.L       R2,@-R15
    00000B9A 313C                   ADD         R3,R1
    00000B9C 6013                   MOV         R1,R0
    00000B9E E151                   MOV         #81,R1
    00000BA0 2F16                   MOV.L       R1,@-R15
    00000BA2 7305                   ADD         #5,R3
    00000BA4 2F36                   MOV.L       R3,@-R15
    00000BA6 B4B9                   BSR         __$load_message
    00000BA8 2F06                   MOV.L       R0,@-R15
    00000BAA A461                   BRA         L579
    00000BAC 7F68                   ADD         #104,R15
    00000BAE              L685:                             
    00000BAE 01CC                   .DATA.W     H'01CC
    00000BB0 0208                   .DATA.W     H'0208
    00000BB2 00D8                   .DATA.W     H'00D8
    00000BB4 0088                   .DATA.W     H'0088
    00000BB6 00A1                   .DATA.W     H'00A1
    00000BB8 0097                   .DATA.W     H'0097
    00000BBA 00B4                   .DATA.W     H'00B4
    00000BBC 00B7                   .DATA.W     H'00B7
    00000BBE 0000                   .DATA.W     0
    00000BC0 <00000000>             .DATA.L     L365
    00000BC4 <00000000>             .DATA.L     __slow_mvn
    00000BC8 <00000000>             .DATA.L     L366
    00000BCC <00000000>             .DATA.L     L367
    00000BD0 <00000000>             .DATA.L     L368
    00000BD4 <00000000>             .DATA.L     L369
    00000BD8 <00000000>             .DATA.L     L370
    00000BDC <00000000>             .DATA.L     L371
    00000BE0              L600:                             
         level.c   442            }
         level.c   443            else if(n == 12)
    00000BE0 880C                   CMP/EQ      #12,R0
    00000BE2 8B57                   BF          L602
         level.c   444            {
         level.c   445                    char m[] = {
         level.c   446                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1,
         level.c   447                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1,
         level.c   448                            1, 1, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +,10, 0, 1, 1,
         level.c   449                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 0, 0, 1, 1,
         level.c   450                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 0, 0, 1, 1,
         level.c   451                            1, 1, 0,11, 0, 0, 0, 0, 0, 0,15, 0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13, 0
                         +, 0,12, 1, 1,
         level.c   452                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1,
         level.c   453                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1,
         level.c   454                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1,
         level.c   455                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1
         level.c   456                    };




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BE4 9148                   MOV.W       L686,R1    ; H'0294
    00000BE6 D226                   MOV.L       L686+8,R2  ; L374
    00000BE8 9047                   MOV.W       L686+2,R0  ; H'0140
    00000BEA D326                   MOV.L       L686+12,R3 ; __slow_mvn
    00000BEC 430B                   JSR         @R3
    00000BEE 31FC                   ADD         R15,R1
         level.c   457                    level->width = 32;
         level.c   458                    level->height = 10;
         level.c   459                    level->map = malloc(32*10);
    00000BF0 9443                   MOV.W       L686+2,R4  ; H'0140
    00000BF2 E120                   MOV         #32,R1
    00000BF4 1E13                   MOV.L       R1,@(12,R14)
    00000BF6 4C0B                   JSR         @R12
    00000BF8 1E54                   MOV.L       R5,@(16,R14)
    00000BFA 1E02                   MOV.L       R0,@(8,R14)
         level.c   460                    memcpy(level->map, m, 32*10);
    00000BFC 963D                   MOV.W       L686+2,R6  ; H'0140
    00000BFE 953B                   MOV.W       L686,R5    ; H'0294
    00000C00 35FC                   ADD         R15,R5
    00000C02 4B0B                   JSR         @R11
    00000C04 6403                   MOV         R0,R4
         level.c   461                    level->nb_throwers = 1;
    00000C06 E301                   MOV         #1,R3
    00000C08 1E3C                   MOV.L       R3,@(48,R14)
         level.c   462                    level->thrower = malloc(sizeof(Thrower));
    00000C0A 4C0B                   JSR         @R12
    00000C0C E420                   MOV         #32,R4
         level.c   463                    level->thrower[0] = load_thrower(28, 2, T_BULLET, T_DOWN, 4);
    00000C0E 6103                   MOV         R0,R1
    00000C10 1E0B                   MOV.L       R0,@(44,R14)
    00000C12 E304                   MOV         #4,R3
    00000C14 2F36                   MOV.L       R3,@-R15
    00000C16 E703                   MOV         #3,R7
    00000C18 2F16                   MOV.L       R1,@-R15
    00000C1A E600                   MOV         #0,R6
    00000C1C E502                   MOV         #2,R5
    00000C1E B4BC                   BSR         __$load_thrower
    00000C20 E41C                   MOV         #28,R4
         level.c   464                    level->nb_messages = 3;
    00000C22 E303                   MOV         #3,R3
    00000C24 1E3A                   MOV.L       R3,@(40,R14)
         level.c   465                    level->message = malloc(3*sizeof(Message));
    00000C26 4C0B                   JSR         @R12
    00000C28 E46C                   MOV         #108,R4
         level.c   466                    level->message[0] = load_message("You should run. Fast.", BOTTOM, BEGIN, 0, 0, 0, 0);
    00000C2A 6103                   MOV         R0,R1
    00000C2C D416                   MOV.L       L686+16,R4 ; L375
    00000C2E E300                   MOV         #0,R3
    00000C30 1E09                   MOV.L       R0,@(36,R14)
    00000C32 6733                   MOV         R3,R7
    00000C34 2F36                   MOV.L       R3,@-R15
    00000C36 6633                   MOV         R3,R6
    00000C38 2F36                   MOV.L       R3,@-R15
    00000C3A 2F36                   MOV.L       R3,@-R15
    00000C3C 2F16                   MOV.L       R1,@-R15
    00000C3E B46D                   BSR         __$load_message
    00000C40 E501                   MOV         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   467                    level->message[1] = load_message("This was a fake princess !\nYou've been fooled, kiddo.",
                         + TOP, DEATH, 1, 0, 0, 0);
    00000C42 E300                   MOV         #0,R3
    00000C44 D411                   MOV.L       L686+20,R4 ; L376
    00000C46 E701                   MOV         #1,R7
    00000C48 51E9                   MOV.L       @(36,R14),R1
    00000C4A 6673                   MOV         R7,R6
    00000C4C 2F36                   MOV.L       R3,@-R15
    00000C4E 7124                   ADD         #36,R1
    00000C50 2F36                   MOV.L       R3,@-R15
    00000C52 2F36                   MOV.L       R3,@-R15
    00000C54 2F16                   MOV.L       R1,@-R15
    00000C56 B461                   BSR         __$load_message
    00000C58 6533                   MOV         R3,R5
         level.c   468                    level->message[2] = load_message("Here is your princess !", TOP, X, AFTER, 192, 0, 0);
    00000C5A E300                   MOV         #0,R3
    00000C5C 920E                   MOV.W       L686+4,R2  ; H'00C0
    00000C5E E701                   MOV         #1,R7
    00000C60 D40B                   MOV.L       L686+24,R4 ; L377
    00000C62 E602                   MOV         #2,R6
    00000C64 51E9                   MOV.L       @(36,R14),R1
    00000C66 6533                   MOV         R3,R5
    00000C68 2F36                   MOV.L       R3,@-R15
    00000C6A 7148                   ADD         #72,R1
    00000C6C 2F36                   MOV.L       R3,@-R15
    00000C6E 2F26                   MOV.L       R2,@-R15
    00000C70 B454                   BSR         __$load_message
    00000C72 2F16                   MOV.L       R1,@-R15
    00000C74 A3FC                   BRA         L579
    00000C76 7F38                   ADD         #56,R15
    00000C78              L686:                             
    00000C78 0294                   .DATA.W     H'0294
    00000C7A 0140                   .DATA.W     H'0140
    00000C7C 00C0                   .DATA.W     H'00C0
    00000C7E 0000                   .DATA.W     0
    00000C80 <00000000>             .DATA.L     L374
    00000C84 <00000000>             .DATA.L     __slow_mvn
    00000C88 <00000000>             .DATA.L     L375
    00000C8C <00000000>             .DATA.L     L376
    00000C90 <00000000>             .DATA.L     L377
    00000C94              L602:                             
         level.c   469            }
         level.c   470            else if(n == 13)
    00000C94 6093                   MOV         R9,R0
    00000C96 880D                   CMP/EQ      #13,R0
    00000C98 8901                   BT          L687
    00000C9A A08F                   BRA         L604
    00000C9C 0009                   NOP
    00000C9E              L687:                             
         level.c   471            {
         level.c   472                    char m[] = {
         level.c   473                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   474                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   475                            1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1,
         level.c   476                            1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
         level.c   477                            1, 1, 0, 0, 0, 0, 0, 0, 7, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c   478                            1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0,15, 1, 1,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   479                            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c   480                            1, 1, 0, 0, 0, 5, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,12, 1, 1,
         level.c   481                            1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c   482                            1, 1, 8, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,15, 1, 1,
         level.c   483                            1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
         level.c   484                            1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,15, 1, 1,
         level.c   485                            1, 1, 0,11, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 5, 0, 0, 0, 1, 1, 1, 1,
         level.c   486                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   487                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   488                    };
    00000C9E 9178                   MOV.W       L688,R1    ; H'024C
    00000CA0 D23E                   MOV.L       L688+10,R2 ; L380
    00000CA2 9077                   MOV.W       L688+2,R0  ; H'0186
    00000CA4 D33E                   MOV.L       L688+14,R3 ; __slow_mvn
    00000CA6 430B                   JSR         @R3
    00000CA8 31FC                   ADD         R15,R1
         level.c   489                    Moving_line line = {136, 48, 24, 0, 2, 136, 48, 136, 96};
    00000CAA 9174                   MOV.W       L688+4,R1  ; H'0228
    00000CAC D23D                   MOV.L       L688+18,R2 ; L382
    00000CAE 31FC                   ADD         R15,R1
    00000CB0 D33D                   MOV.L       L688+22,R3 ; __quick_odd_mvn
    00000CB2 430B                   JSR         @R3
    00000CB4 E024                   MOV         #36,R0
         level.c   490                    level->width = 26;
         level.c   491                    level->height = 15;
    00000CB6 E10F                   MOV         #15,R1
    00000CB8 1E43                   MOV.L       R4,@(12,R14)
         level.c   492                    level->map = malloc(26*15);
    00000CBA 946B                   MOV.W       L688+2,R4  ; H'0186
    00000CBC 4C0B                   JSR         @R12
    00000CBE 1E14                   MOV.L       R1,@(16,R14)
    00000CC0 1E02                   MOV.L       R0,@(8,R14)
         level.c   493                    memcpy(level->map, m, 26*15);
    00000CC2 9667                   MOV.W       L688+2,R6  ; H'0186
    00000CC4 9565                   MOV.W       L688,R5    ; H'024C
    00000CC6 35FC                   ADD         R15,R5
    00000CC8 4B0B                   JSR         @R11
    00000CCA 6403                   MOV         R0,R4
         level.c   494                    level->nb_lines = 1;
    00000CCC E301                   MOV         #1,R3
    00000CCE 1E36                   MOV.L       R3,@(24,R14)
         level.c   495                    level->line = malloc(sizeof(Moving_line));
    00000CD0 4C0B                   JSR         @R12
    00000CD2 E424                   MOV         #36,R4
    00000CD4 1E05                   MOV.L       R0,@(20,R14)
         level.c   496                    level->line[0] = line;
    00000CD6 6103                   MOV         R0,R1
    00000CD8 925D                   MOV.W       L688+4,R2  ; H'0228
    00000CDA 32FC                   ADD         R15,R2
    00000CDC D332                   MOV.L       L688+22,R3 ; __quick_odd_mvn
    00000CDE 430B                   JSR         @R3
    00000CE0 E024                   MOV         #36,R0
         level.c   497                    level->nb_throwers = 3;
    00000CE2 E203                   MOV         #3,R2
    00000CE4 1E2C                   MOV.L       R2,@(48,R14)
         level.c   498                    level->thrower = malloc(3*sizeof(Thrower));
    00000CE6 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CE8 E460                   MOV         #96,R4
         level.c   499                    level->thrower[0] = load_thrower(2, 2, T_BULLET, T_RIGHT, 16);
    00000CEA 6103                   MOV         R0,R1
    00000CEC 1E0B                   MOV.L       R0,@(44,R14)
    00000CEE E310                   MOV         #16,R3
    00000CF0 2F36                   MOV.L       R3,@-R15
    00000CF2 E701                   MOV         #1,R7
    00000CF4 2F16                   MOV.L       R1,@-R15
    00000CF6 E600                   MOV         #0,R6
    00000CF8 E502                   MOV         #2,R5
    00000CFA B44E                   BSR         __$load_thrower
    00000CFC 6453                   MOV         R5,R4
         level.c   500                    level->thrower[1] = load_thrower(8, 4, T_BULLET, T_LEFT, 8);
    00000CFE E700                   MOV         #0,R7
    00000D00 51EB                   MOV.L       @(44,R14),R1
    00000D02 E504                   MOV         #4,R5
    00000D04 2FA6                   MOV.L       R10,@-R15
    00000D06 6673                   MOV         R7,R6
    00000D08 7120                   ADD         #32,R1
    00000D0A E408                   MOV         #8,R4
    00000D0C B445                   BSR         __$load_thrower
    00000D0E 2F16                   MOV.L       R1,@-R15
         level.c   501                    level->thrower[2] = load_thrower(2, 9, T_BULLET, T_RIGHT, 9);
    00000D10 51EB                   MOV.L       @(44,R14),R1
    00000D12 E309                   MOV         #9,R3
    00000D14 2F36                   MOV.L       R3,@-R15
    00000D16 E701                   MOV         #1,R7
    00000D18 7140                   ADD         #64,R1
    00000D1A E600                   MOV         #0,R6
    00000D1C 2F16                   MOV.L       R1,@-R15
    00000D1E 6533                   MOV         R3,R5
    00000D20 B43B                   BSR         __$load_thrower
    00000D22 E402                   MOV         #2,R4
         level.c   502                    level->nb_messages = 4;
    00000D24 E304                   MOV         #4,R3
    00000D26 1E3A                   MOV.L       R3,@(40,R14)
         level.c   503                    level->message = malloc(4*sizeof(Message));
    00000D28 4C0B                   JSR         @R12
    00000D2A 6483                   MOV         R8,R4
    00000D2C 1E09                   MOV.L       R0,@(36,R14)
         level.c   504                    level->message[0] = load_message("This is like a supermarket !", TOP, BEGIN, 0, 0, 0, 0);
    00000D2E 6103                   MOV         R0,R1
    00000D30 D41E                   MOV.L       L688+26,R4 ; L383
    00000D32 E300                   MOV         #0,R3
    00000D34 2F36                   MOV.L       R3,@-R15
    00000D36 6733                   MOV         R3,R7
    00000D38 2F36                   MOV.L       R3,@-R15
    00000D3A 6633                   MOV         R3,R6
    00000D3C 2F36                   MOV.L       R3,@-R15
    00000D3E 2F16                   MOV.L       R1,@-R15
    00000D40 B3EC                   BSR         __$load_message
    00000D42 6533                   MOV         R3,R5
         level.c   505                    level->message[1] = load_message("You made it !\nNow make your choice.\nWhich one is the n
                         +icest ?", TOP, X, AFTER, 88, 0, 0);
    00000D44 51E9                   MOV.L       @(36,R14),R1
    00000D46 E300                   MOV         #0,R3
    00000D48 D419                   MOV.L       L688+30,R4 ; L384




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D4A E258                   MOV         #88,R2
    00000D4C 2F36                   MOV.L       R3,@-R15
    00000D4E E701                   MOV         #1,R7
    00000D50 2F36                   MOV.L       R3,@-R15
    00000D52 E602                   MOV         #2,R6
    00000D54 2F26                   MOV.L       R2,@-R15
    00000D56 6533                   MOV         R3,R5
    00000D58 7124                   ADD         #36,R1
    00000D5A B3DF                   BSR         __$load_message
    00000D5C 2F16                   MOV.L       R1,@-R15
         level.c   506                    level->message[2] = load_message("You really thought there was\na secret here, don't you ?
                         +", TOP, XY, 186, 192, 15, 16);
    00000D5E E310                   MOV         #16,R3
    00000D60 971B                   MOV.W       L688+8,R7  ; H'00BA
    00000D62 E604                   MOV         #4,R6
    00000D64 D413                   MOV.L       L688+34,R4 ; L385
    00000D66 E20F                   MOV         #15,R2
    00000D68 51E9                   MOV.L       @(36,R14),R1
    00000D6A E500                   MOV         #0,R5
    00000D6C 2F36                   MOV.L       R3,@-R15
    00000D6E 7148                   ADD         #72,R1
    00000D70 2F26                   MOV.L       R2,@-R15
    00000D72 6013                   MOV         R1,R0
    00000D74 9110                   MOV.W       L688+6,R1  ; H'00C0
    00000D76 2F16                   MOV.L       R1,@-R15
    00000D78 B3D0                   BSR         __$load_message
    00000D7A 2F06                   MOV.L       R0,@-R15
         level.c   507                    level->message[3] = load_message("Fourth times is the good one,\nlike my uncle Benny says"
                         +, TOP, DEATH, 3, 0, 0, 0);
    00000D7C 51E9                   MOV.L       @(36,R14),R1
    00000D7E E300                   MOV         #0,R3
    00000D80 D40D                   MOV.L       L688+38,R4 ; L386
    00000D82 E703                   MOV         #3,R7
    00000D84 2F36                   MOV.L       R3,@-R15
    00000D86 6533                   MOV         R3,R5
    00000D88 2F36                   MOV.L       R3,@-R15
    00000D8A 716C                   ADD         #108,R1
    00000D8C 2F36                   MOV.L       R3,@-R15
    00000D8E A07F                   BRA         L666
    00000D90 E601                   MOV         #1,R6
    00000D92              L688:                             
    00000D92 024C                   .DATA.W     H'024C
    00000D94 0186                   .DATA.W     H'0186
    00000D96 0228                   .DATA.W     H'0228
    00000D98 00C0                   .DATA.W     H'00C0
    00000D9A 00BA                   .DATA.W     H'00BA
    00000D9C <00000000>             .DATA.L     L380
    00000DA0 <00000000>             .DATA.L     __slow_mvn
    00000DA4 <00000000>             .DATA.L     L382
    00000DA8 <00000000>             .DATA.L     __quick_odd_mvn
    00000DAC <00000000>             .DATA.L     L383
    00000DB0 <00000000>             .DATA.L     L384
    00000DB4 <00000000>             .DATA.L     L385
    00000DB8 <00000000>             .DATA.L     L386
    00000DBC              L604:                             
         level.c   508            }
         level.c   509            else if(n == 14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DBC 6093                   MOV         R9,R0
    00000DBE 880E                   CMP/EQ      #14,R0
    00000DC0 8F7A                   BF/S        L606
    00000DC2 E71B                   MOV         #27,R7
         level.c   510            {
         level.c   511                    char m[] = {
         level.c   512                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   513                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   514                            1, 1, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 1, 1, 1, 1, 1,
         level.c   515                            1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   516                            1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,10,  0,0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   517                            1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   518                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   519                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 6, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   520                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   521                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 6, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   522                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   523                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   524                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   525                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,
         level.c   526                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   527                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   528                            1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   529                            1, 1, 1, 1, 1, 1, 1, 5, 5, 1, 1, 0, 0, 0, 0,11, 1, 1, 1, 5, 0, 0, 0, 0,12, 1, 1,
         level.c   530                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   531                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   532                    };
    00000DC4 9169                   MOV.W       L689,R1    ; H'01B8
    00000DC6 D236                   MOV.L       L689+6,R2  ; L389
    00000DC8 9068                   MOV.W       L689+2,R0  ; H'021C
    00000DCA D336                   MOV.L       L689+10,R3 ; __slow_mvn
    00000DCC 430B                   JSR         @R3
    00000DCE 31FC                   ADD         R15,R1
         level.c   533                    level->width = 27;
    00000DD0 1E73                   MOV.L       R7,@(12,R14)
         level.c   534                    level->height = 20;
    00000DD2 E114                   MOV         #20,R1
         level.c   535                    level->map = malloc(27*20);
    00000DD4 9462                   MOV.W       L689+2,R4  ; H'021C
    00000DD6 4C0B                   JSR         @R12
    00000DD8 1E14                   MOV.L       R1,@(16,R14)
    00000DDA 1E02                   MOV.L       R0,@(8,R14)
         level.c   536                    memcpy(level->map, m, 27*20);
    00000DDC 965E                   MOV.W       L689+2,R6  ; H'021C
    00000DDE 955C                   MOV.W       L689,R5    ; H'01B8
    00000DE0 35FC                   ADD         R15,R5
    00000DE2 4B0B                   JSR         @R11
    00000DE4 6403                   MOV         R0,R4
         level.c   537                    level->nb_throwers = 3;
    00000DE6 E303                   MOV         #3,R3
    00000DE8 1E3C                   MOV.L       R3,@(48,R14)
         level.c   538                    level->thrower = malloc(3*sizeof(Thrower));
    00000DEA 4C0B                   JSR         @R12
    00000DEC E460                   MOV         #96,R4
         level.c   539                    level->thrower[0] = load_thrower(3, 2, T_BULLET, T_DOWN, 8);
    00000DEE 6103                   MOV         R0,R1
    00000DF0 1E0B                   MOV.L       R0,@(44,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DF2 E703                   MOV         #3,R7
    00000DF4 2FA6                   MOV.L       R10,@-R15
    00000DF6 E600                   MOV         #0,R6
    00000DF8 E502                   MOV         #2,R5
    00000DFA 6473                   MOV         R7,R4
    00000DFC B3CD                   BSR         __$load_thrower
    00000DFE 2F16                   MOV.L       R1,@-R15
         level.c   540                    level->thrower[1] = load_thrower(21, 2, T_BULLET, T_DOWN, 8);
    00000E00 51EB                   MOV.L       @(44,R14),R1
    00000E02 E703                   MOV         #3,R7
    00000E04 2FA6                   MOV.L       R10,@-R15
    00000E06 E600                   MOV         #0,R6
    00000E08 7120                   ADD         #32,R1
    00000E0A E502                   MOV         #2,R5
    00000E0C E415                   MOV         #21,R4
    00000E0E B3C4                   BSR         __$load_thrower
    00000E10 2F16                   MOV.L       R1,@-R15
         level.c   541                    level->thrower[2] = load_thrower(13, 4, T_STONE, T_DOWN, 2);
    00000E12 E302                   MOV         #2,R3
    00000E14 51EB                   MOV.L       @(44,R14),R1
    00000E16 E703                   MOV         #3,R7
    00000E18 2F36                   MOV.L       R3,@-R15
    00000E1A E601                   MOV         #1,R6
    00000E1C 7140                   ADD         #64,R1
    00000E1E E504                   MOV         #4,R5
    00000E20 2F16                   MOV.L       R1,@-R15
    00000E22 B3BA                   BSR         __$load_thrower
    00000E24 E40D                   MOV         #13,R4
         level.c   542                    level->nb_messages = 4;
    00000E26 E304                   MOV         #4,R3
    00000E28 1E3A                   MOV.L       R3,@(40,R14)
         level.c   543                    level->message = malloc(4*sizeof(Message));
    00000E2A 4C0B                   JSR         @R12
    00000E2C 6483                   MOV         R8,R4
         level.c   544                    level->message[0] = load_message("Met your new friend :\nthe Garbage Thrower.", TOP, BEGIN
                         +, 0, 0, 0, 0);
    00000E2E 6103                   MOV         R0,R1
    00000E30 D41D                   MOV.L       L689+14,R4 ; L390
    00000E32 E300                   MOV         #0,R3
    00000E34 1E09                   MOV.L       R0,@(36,R14)
    00000E36 6733                   MOV         R3,R7
    00000E38 2F36                   MOV.L       R3,@-R15
    00000E3A 6633                   MOV         R3,R6
    00000E3C 2F36                   MOV.L       R3,@-R15
    00000E3E 2F36                   MOV.L       R3,@-R15
    00000E40 2F16                   MOV.L       R1,@-R15
    00000E42 B36B                   BSR         __$load_message
    00000E44 6533                   MOV         R3,R5
         level.c   545                    level->message[1] = load_message("Woops.", TOP, XY, 55, 65, 48, 56);
    00000E46 E338                   MOV         #56,R3
    00000E48 D418                   MOV.L       L689+18,R4 ; L391
    00000E4A E230                   MOV         #48,R2
    00000E4C 51E9                   MOV.L       @(36,R14),R1
    00000E4E E737                   MOV         #55,R7
    00000E50 2F36                   MOV.L       R3,@-R15
    00000E52 E604                   MOV         #4,R6
    00000E54 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E56 E500                   MOV         #0,R5
    00000E58 7124                   ADD         #36,R1
    00000E5A 6013                   MOV         R1,R0
    00000E5C E141                   MOV         #65,R1
    00000E5E 2F16                   MOV.L       R1,@-R15
    00000E60 B35C                   BSR         __$load_message
    00000E62 2F06                   MOV.L       R0,@-R15
         level.c   546                    level->message[2] = load_message("That was the stupidest\nway you could die.", TOP, DEATH,
                         + 2, 0, 0, 0);
    00000E64 51E9                   MOV.L       @(36,R14),R1
    00000E66 E300                   MOV         #0,R3
    00000E68 D411                   MOV.L       L689+22,R4 ; L392
    00000E6A E702                   MOV         #2,R7
    00000E6C 2F36                   MOV.L       R3,@-R15
    00000E6E E601                   MOV         #1,R6
    00000E70 2F36                   MOV.L       R3,@-R15
    00000E72 7148                   ADD         #72,R1
    00000E74 2F36                   MOV.L       R3,@-R15
    00000E76 2F16                   MOV.L       R1,@-R15
    00000E78 B350                   BSR         __$load_message
    00000E7A 6533                   MOV         R3,R5
         level.c   547                    level->message[3] = load_message("You're better than that !", TOP, DEATH, 4, 0, 0, 0);
    00000E7C 51E9                   MOV.L       @(36,R14),R1
    00000E7E E300                   MOV         #0,R3
    00000E80 D40C                   MOV.L       L689+26,R4 ; L393
    00000E82 E704                   MOV         #4,R7
    00000E84 2F36                   MOV.L       R3,@-R15
    00000E86 E601                   MOV         #1,R6
    00000E88 2F36                   MOV.L       R3,@-R15
    00000E8A 6533                   MOV         R3,R5
    00000E8C 2F36                   MOV.L       R3,@-R15
    00000E8E 716C                   ADD         #108,R1
    00000E90              L666:                             
    00000E90 2F16                   MOV.L       R1,@-R15
    00000E92 B343                   BSR         __$load_message
    00000E94 0009                   NOP
    00000E96 A2EB                   BRA         L579
    00000E98 7F58                   ADD         #88,R15
    00000E9A              L689:                             
    00000E9A 01B8                   .DATA.W     H'01B8
    00000E9C 021C                   .DATA.W     H'021C
    00000E9E 0000                   .DATA.W     0
    00000EA0 <00000000>             .DATA.L     L389
    00000EA4 <00000000>             .DATA.L     __slow_mvn
    00000EA8 <00000000>             .DATA.L     L390
    00000EAC <00000000>             .DATA.L     L391
    00000EB0 <00000000>             .DATA.L     L392
    00000EB4 <00000000>             .DATA.L     L393
    00000EB8              L606:                             
         level.c   548            }
         level.c   549            else if(n == 15)
    00000EB8 880F                   CMP/EQ      #15,R0
    00000EBA 8901                   BT          L690
    00000EBC A140                   BRA         L608
    00000EBE 0009                   NOP
    00000EC0              L690:                             
         level.c   550            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   551                    char m[] = {
         level.c   552                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   553                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 1, 1, 1,
         level.c   554                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 1, 1,
         level.c   555                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 6
                         +, 0,10,10, 0, 0, 0,10, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   556                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   557                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 5, 1, 1, 1, 1, 0, 7, 1, 1
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
         level.c   558                            1, 0, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10,10, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0
                         +, 0, 6, 6, 0, 0, 0, 0, 0, 0, 1, 8, 0, 0,12, 1, 1,
         level.c   559                            1, 1, 1, 1, 1, 5, 5, 1, 5, 5, 1, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 5, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   560                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   561                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   562                    };
    00000EC0 91B7                   MOV.W       L691,R1    ; H'021C
    00000EC2 D261                   MOV.L       L691+22,R2 ; L396
    00000EC4 90B6                   MOV.W       L691+2,R0  ; H'01B8
    00000EC6 D361                   MOV.L       L691+26,R3 ; __slow_mvn
    00000EC8 430B                   JSR         @R3
    00000ECA 31FC                   ADD         R15,R1
         level.c   563                    Moving_wall wall = {W_RIGHT, 8, 8, 8, 8, 7};
    00000ECC 91B3                   MOV.W       L691+4,R1  ; H'0204
    00000ECE 31FC                   ADD         R15,R1
    00000ED0 D25F                   MOV.L       L691+30,R2 ; L398
    00000ED2 D360                   MOV.L       L691+34,R3 ; __quick_evn_mvn
    00000ED4 430B                   JSR         @R3
    00000ED6 E018                   MOV         #24,R0
         level.c   564                    level->width = 44;
         level.c   565                    level->height = 10;
         level.c   566                    level->map = malloc(44*10);
    00000ED8 94AC                   MOV.W       L691+2,R4  ; H'01B8
    00000EDA E12C                   MOV         #44,R1
    00000EDC 1E13                   MOV.L       R1,@(12,R14)
    00000EDE 4C0B                   JSR         @R12
    00000EE0 1E54                   MOV.L       R5,@(16,R14)
    00000EE2 1E02                   MOV.L       R0,@(8,R14)
         level.c   567                    memcpy(level->map, m, 44*10);
    00000EE4 96A6                   MOV.W       L691+2,R6  ; H'01B8
    00000EE6 95A4                   MOV.W       L691,R5    ; H'021C
    00000EE8 35FC                   ADD         R15,R5
    00000EEA 4B0B                   JSR         @R11
    00000EEC 6403                   MOV         R0,R4
         level.c   568                    level->nb_walls = 1;
    00000EEE E301                   MOV         #1,R3
    00000EF0 1E38                   MOV.L       R3,@(32,R14)
         level.c   569                    level->wall = malloc(sizeof(Moving_wall));
    00000EF2 4C0B                   JSR         @R12
    00000EF4 E418                   MOV         #24,R4
         level.c   570                    level->wall[0] = wall;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EF6 6103                   MOV         R0,R1
    00000EF8 929D                   MOV.W       L691+4,R2  ; H'0204
    00000EFA 1E07                   MOV.L       R0,@(28,R14)
    00000EFC D355                   MOV.L       L691+34,R3 ; __quick_evn_mvn
    00000EFE 32FC                   ADD         R15,R2
    00000F00 430B                   JSR         @R3
    00000F02 E018                   MOV         #24,R0
         level.c   571                    level->nb_throwers = 9;
         level.c   572                    level->thrower = malloc(9*sizeof(Thrower));
    00000F04 9498                   MOV.W       L691+6,R4  ; H'0120
    00000F06 E209                   MOV         #9,R2
    00000F08 4C0B                   JSR         @R12
    00000F0A 1E2C                   MOV.L       R2,@(48,R14)
    00000F0C 1E0B                   MOV.L       R0,@(44,R14)
         level.c   573                    level->thrower[0] = load_thrower(15, 1, T_BULLET, T_DOWN, 4);
    00000F0E 6103                   MOV         R0,R1
    00000F10 E304                   MOV         #4,R3
    00000F12 E703                   MOV         #3,R7
    00000F14 2F36                   MOV.L       R3,@-R15
    00000F16 E600                   MOV         #0,R6
    00000F18 2F16                   MOV.L       R1,@-R15
    00000F1A E501                   MOV         #1,R5
    00000F1C B33D                   BSR         __$load_thrower
    00000F1E E40F                   MOV         #15,R4
         level.c   574                    level->thrower[1] = load_thrower(29, 3, T_BULLET, T_DOWN, 4);
    00000F20 51EB                   MOV.L       @(44,R14),R1
    00000F22 E304                   MOV         #4,R3
    00000F24 2F36                   MOV.L       R3,@-R15
    00000F26 E703                   MOV         #3,R7
    00000F28 7120                   ADD         #32,R1
    00000F2A E600                   MOV         #0,R6
    00000F2C 2F16                   MOV.L       R1,@-R15
    00000F2E 6573                   MOV         R7,R5
    00000F30 B333                   BSR         __$load_thrower
    00000F32 E41D                   MOV         #29,R4
         level.c   575                    level->thrower[2] = load_thrower(30, 3, T_BULLET, T_DOWN, 4);
    00000F34 51EB                   MOV.L       @(44,R14),R1
    00000F36 E304                   MOV         #4,R3
    00000F38 2F36                   MOV.L       R3,@-R15
    00000F3A E703                   MOV         #3,R7
    00000F3C 7140                   ADD         #64,R1
    00000F3E E600                   MOV         #0,R6
    00000F40 2F16                   MOV.L       R1,@-R15
    00000F42 6573                   MOV         R7,R5
    00000F44 B329                   BSR         __$load_thrower
    00000F46 E41E                   MOV         #30,R4
         level.c   576                    level->thrower[3] = load_thrower(34, 3, T_BULLET, T_DOWN, 4);
    00000F48 51EB                   MOV.L       @(44,R14),R1
    00000F4A E304                   MOV         #4,R3
    00000F4C 2F36                   MOV.L       R3,@-R15
    00000F4E E703                   MOV         #3,R7
    00000F50 7160                   ADD         #96,R1
    00000F52 E600                   MOV         #0,R6
    00000F54 2F16                   MOV.L       R1,@-R15
    00000F56 6573                   MOV         R7,R5
    00000F58 B31F                   BSR         __$load_thrower
    00000F5A E422                   MOV         #34,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   577                    level->thrower[4] = load_thrower(22, 4, T_BULLET, T_UP, 4);
    00000F5C 936D                   MOV.W       L691+8,R3  ; H'0080
    00000F5E E204                   MOV         #4,R2
    00000F60 51EB                   MOV.L       @(44,R14),R1
    00000F62 E702                   MOV         #2,R7
    00000F64 2F26                   MOV.L       R2,@-R15
    00000F66 E600                   MOV         #0,R6
    00000F68 313C                   ADD         R3,R1
    00000F6A 6523                   MOV         R2,R5
    00000F6C 2F16                   MOV.L       R1,@-R15
    00000F6E B314                   BSR         __$load_thrower
    00000F70 E416                   MOV         #22,R4
         level.c   578                    level->thrower[5] = load_thrower(25, 5, T_BULLET, T_LEFT, 4);
    00000F72 E204                   MOV         #4,R2
    00000F74 9362                   MOV.W       L691+10,R3 ; H'00A0
    00000F76 E700                   MOV         #0,R7
    00000F78 51EB                   MOV.L       @(44,R14),R1
    00000F7A E505                   MOV         #5,R5
    00000F7C 2F26                   MOV.L       R2,@-R15
    00000F7E 6673                   MOV         R7,R6
    00000F80 313C                   ADD         R3,R1
    00000F82 2F16                   MOV.L       R1,@-R15
    00000F84 B309                   BSR         __$load_thrower
    00000F86 E419                   MOV         #25,R4
         level.c   579                    level->thrower[6] = load_thrower(14, 6, T_BULLET, T_DOWN, 4);
    00000F88 9359                   MOV.W       L691+12,R3 ; H'00C0
    00000F8A E204                   MOV         #4,R2
    00000F8C 51EB                   MOV.L       @(44,R14),R1
    00000F8E E703                   MOV         #3,R7
    00000F90 2F26                   MOV.L       R2,@-R15
    00000F92 E600                   MOV         #0,R6
    00000F94 313C                   ADD         R3,R1
    00000F96 E506                   MOV         #6,R5
    00000F98 2F16                   MOV.L       R1,@-R15
    00000F9A B2FE                   BSR         __$load_thrower
    00000F9C E40E                   MOV         #14,R4
         level.c   580                    level->thrower[7] = load_thrower(15, 6, T_BULLET, T_DOWN, 4);
    00000F9E E204                   MOV         #4,R2
    00000FA0 934E                   MOV.W       L691+14,R3 ; H'00E0
    00000FA2 E703                   MOV         #3,R7
    00000FA4 51EB                   MOV.L       @(44,R14),R1
    00000FA6 E600                   MOV         #0,R6
    00000FA8 2F26                   MOV.L       R2,@-R15
    00000FAA E506                   MOV         #6,R5
    00000FAC 313C                   ADD         R3,R1
    00000FAE 2F16                   MOV.L       R1,@-R15
    00000FB0 B2F3                   BSR         __$load_thrower
    00000FB2 E40F                   MOV         #15,R4
         level.c   581                    level->thrower[8] = load_thrower(38, 6, T_BULLET, T_RIGHT, 4);
    00000FB4 9345                   MOV.W       L691+16,R3 ; H'0100
    00000FB6 E204                   MOV         #4,R2
    00000FB8 51EB                   MOV.L       @(44,R14),R1
    00000FBA E701                   MOV         #1,R7
    00000FBC 2F26                   MOV.L       R2,@-R15
    00000FBE E600                   MOV         #0,R6
    00000FC0 313C                   ADD         R3,R1
    00000FC2 E506                   MOV         #6,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FC4 2F16                   MOV.L       R1,@-R15
    00000FC6 B2E8                   BSR         __$load_thrower
    00000FC8 E426                   MOV         #38,R4
         level.c   582                    level->nb_messages = 9;
    00000FCA E309                   MOV         #9,R3
         level.c   583                    level->message = malloc(9*sizeof(Message));
    00000FCC 943A                   MOV.W       L691+18,R4 ; H'0144
    00000FCE 4C0B                   JSR         @R12
    00000FD0 1E3A                   MOV.L       R3,@(40,R14)
         level.c   584                    level->message[0] = load_message("You should hurry,\nmy friend Benny is here !", TOP, BEGI
                         +N, 0, 0, 0, 0);
    00000FD2 6103                   MOV         R0,R1
    00000FD4 D420                   MOV.L       L691+38,R4 ; L399
    00000FD6 E300                   MOV         #0,R3
    00000FD8 1E09                   MOV.L       R0,@(36,R14)
    00000FDA 6733                   MOV         R3,R7
    00000FDC 2F36                   MOV.L       R3,@-R15
    00000FDE 6633                   MOV         R3,R6
    00000FE0 2F36                   MOV.L       R3,@-R15
    00000FE2 2F36                   MOV.L       R3,@-R15
    00000FE4 2F16                   MOV.L       R1,@-R15
    00000FE6 B299                   BSR         __$load_message
    00000FE8 6533                   MOV         R3,R5
         level.c   585                    level->message[1] = load_message("What ? Already ?", TOP, XY, 39, 49, 49, 56);
    00000FEA E338                   MOV         #56,R3
    00000FEC D41B                   MOV.L       L691+42,R4 ; L400
    00000FEE E231                   MOV         #49,R2
    00000FF0 51E9                   MOV.L       @(36,R14),R1
    00000FF2 E727                   MOV         #39,R7
    00000FF4 2F36                   MOV.L       R3,@-R15
    00000FF6 E604                   MOV         #4,R6
    00000FF8 2F26                   MOV.L       R2,@-R15
    00000FFA 7124                   ADD         #36,R1
    00000FFC 2F26                   MOV.L       R2,@-R15
    00000FFE 2F16                   MOV.L       R1,@-R15
    00001000 B28C                   BSR         __$load_message
    00001002 E500                   MOV         #0,R5
         level.c   586                    level->message[2] = load_message("You should be\nashamed of yourself.", TOP, XY, 63, 73, 4
                         +9, 56);
    00001004 51E9                   MOV.L       @(36,R14),R1
    00001006 E338                   MOV         #56,R3
    00001008 D415                   MOV.L       L691+46,R4 ; L401
    0000100A E231                   MOV         #49,R2
    0000100C 2F36                   MOV.L       R3,@-R15
    0000100E E73F                   MOV         #63,R7
    00001010 2F26                   MOV.L       R2,@-R15
    00001012 E604                   MOV         #4,R6
    00001014 7148                   ADD         #72,R1
    00001016 6013                   MOV         R1,R0
    00001018 E149                   MOV         #73,R1
    0000101A E500                   MOV         #0,R5
    0000101C 2F16                   MOV.L       R1,@-R15
    0000101E B27D                   BSR         __$load_message
    00001020 2F06                   MOV.L       R0,@-R15
    00001022 7F78                   ADD         #120,R15
         level.c   587                    level->message[3] = load_message("Be careful. The easiest way\nisn't always the best one."
                         +, TOP, XY, 112, 120, 48, 56);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001024 51E9                   MOV.L       @(36,R14),R1
    00001026 E338                   MOV         #56,R3
    00001028 2F36                   MOV.L       R3,@-R15
    0000102A 716C                   ADD         #108,R1
    0000102C 6013                   MOV         R1,R0
    0000102E A019                   BRA         L670
    00001030 0009                   NOP
    00001032              L691:                             
    00001032 021C                   .DATA.W     H'021C
    00001034 01B8                   .DATA.W     H'01B8
    00001036 0204                   .DATA.W     H'0204
    00001038 0120                   .DATA.W     H'0120
    0000103A 0080                   .DATA.W     H'0080
    0000103C 00A0                   .DATA.W     H'00A0
    0000103E 00C0                   .DATA.W     H'00C0
    00001040 00E0                   .DATA.W     H'00E0
    00001042 0100                   .DATA.W     H'0100
    00001044 0144                   .DATA.W     H'0144
    00001046 0000                   .DATA.W     0
    00001048 <00000000>             .DATA.L     L396
    0000104C <00000000>             .DATA.L     __slow_mvn
    00001050 <00000000>             .DATA.L     L398
    00001054 <00000000>             .DATA.L     __quick_evn_mvn
    00001058 <00000000>             .DATA.L     L399
    0000105C <00000000>             .DATA.L     L400
    00001060 <00000000>             .DATA.L     L401
    00001064              L670:                             
    00001064 D430                   MOV.L       L692+24,R4 ; L402
    00001066 E230                   MOV         #48,R2
    00001068 2F26                   MOV.L       R2,@-R15
    0000106A E178                   MOV         #120,R1
    0000106C 2F16                   MOV.L       R1,@-R15
    0000106E E770                   MOV         #112,R7
    00001070 E604                   MOV         #4,R6
    00001072 E500                   MOV         #0,R5
    00001074 B252                   BSR         __$load_message
    00001076 2F06                   MOV.L       R0,@-R15
         level.c   588                    level->message[4] = load_message("Told you.", TOP, XY, 152, 160, 56, 56);
    00001078 51E9                   MOV.L       @(36,R14),R1
    0000107A E338                   MOV         #56,R3
    0000107C 9248                   MOV.W       L692,R2    ; H'00A0
    0000107E E604                   MOV         #4,R6
    00001080 D42A                   MOV.L       L692+28,R4 ; L403
    00001082 E500                   MOV         #0,R5
    00001084 9745                   MOV.W       L692+2,R7  ; H'0098
    00001086 318C                   ADD         R8,R1
    00001088 2F36                   MOV.L       R3,@-R15
    0000108A 2F36                   MOV.L       R3,@-R15
    0000108C 2F26                   MOV.L       R2,@-R15
    0000108E B245                   BSR         __$load_message
    00001090 2F16                   MOV.L       R1,@-R15
    00001092 7F20                   ADD         #32,R15
         level.c   589                    level->message[5] = load_message("Are you sure this\nis the right way ?", BOTTOM, XY, 184,
                         + 192, 8, 8);
    00001094 933E                   MOV.W       L692+4,R3  ; H'00B4
    00001096 E604                   MOV         #4,R6
    00001098 D425                   MOV.L       L692+32,R4 ; L404




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000109A 51E9                   MOV.L       @(36,R14),R1
    0000109C 2FA6                   MOV.L       R10,@-R15
    0000109E 313C                   ADD         R3,R1
    000010A0 9239                   MOV.W       L692+6,R2  ; H'00C0
    000010A2 2FA6                   MOV.L       R10,@-R15
    000010A4 2F26                   MOV.L       R2,@-R15
    000010A6 9737                   MOV.W       L692+8,R7  ; H'00B8
    000010A8 2F16                   MOV.L       R1,@-R15
    000010AA B237                   BSR         __$load_message
    000010AC E501                   MOV         #1,R5
         level.c   590                    level->message[6] = load_message("Yep, definitely not\nthe right way.", BOTTOM, XY, 296, 3
                         +04, 8, 16);
    000010AE E210                   MOV         #16,R2
    000010B0 9735                   MOV.W       L692+14,R7 ; H'0128
    000010B2 E604                   MOV         #4,R6
    000010B4 D41F                   MOV.L       L692+36,R4 ; L405
    000010B6 E501                   MOV         #1,R5
    000010B8 932F                   MOV.W       L692+10,R3 ; H'00D8
    000010BA 51E9                   MOV.L       @(36,R14),R1
    000010BC 2F26                   MOV.L       R2,@-R15
    000010BE 313C                   ADD         R3,R1
    000010C0 2FA6                   MOV.L       R10,@-R15
    000010C2 6013                   MOV         R1,R0
    000010C4 912A                   MOV.W       L692+12,R1 ; H'0130
    000010C6 2F16                   MOV.L       R1,@-R15
    000010C8 B228                   BSR         __$load_message
    000010CA 2F06                   MOV.L       R0,@-R15
         level.c   591                    level->message[7] = load_message("Wrong way. Or is it ?", TOP, XY, 248, 256, 48, 56);
    000010CC 9328                   MOV.W       L692+16,R3 ; H'00FC
    000010CE E238                   MOV         #56,R2
    000010D0 9727                   MOV.W       L692+18,R7 ; H'00F8
    000010D2 E604                   MOV         #4,R6
    000010D4 D418                   MOV.L       L692+40,R4 ; L406
    000010D6 E500                   MOV         #0,R5
    000010D8 51E9                   MOV.L       @(36,R14),R1
    000010DA 313C                   ADD         R3,R1
    000010DC 2F26                   MOV.L       R2,@-R15
    000010DE 7304                   ADD         #4,R3
    000010E0 6013                   MOV         R1,R0
    000010E2 E130                   MOV         #48,R1
    000010E4 2F16                   MOV.L       R1,@-R15
    000010E6 2F36                   MOV.L       R3,@-R15
    000010E8 B218                   BSR         __$load_message
    000010EA 2F06                   MOV.L       R0,@-R15
         level.c   592                    level->message[8] = load_message("Run rabbit, run !", TOP, XY, 264, 272, 23, 32);
    000010EC 931A                   MOV.W       L692+20,R3 ; H'0120
    000010EE E220                   MOV         #32,R2
    000010F0 9719                   MOV.W       L692+22,R7 ; H'0108
    000010F2 E604                   MOV         #4,R6
    000010F4 D411                   MOV.L       L692+44,R4 ; L407
    000010F6 E500                   MOV         #0,R5
    000010F8 51E9                   MOV.L       @(36,R14),R1
    000010FA 313C                   ADD         R3,R1
    000010FC 2F26                   MOV.L       R2,@-R15
    000010FE 73F0                   ADD         #-16,R3
    00001100 6013                   MOV         R1,R0
    00001102 E117                   MOV         #23,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001104 2F16                   MOV.L       R1,@-R15
    00001106 2F36                   MOV.L       R3,@-R15
    00001108 B208                   BSR         __$load_message
    0000110A 2F06                   MOV.L       R0,@-R15
    0000110C A1AC                   BRA         L669
    0000110E 0009                   NOP
    00001110              L692:                             
    00001110 00A0                   .DATA.W     H'00A0
    00001112 0098                   .DATA.W     H'0098
    00001114 00B4                   .DATA.W     H'00B4
    00001116 00C0                   .DATA.W     H'00C0
    00001118 00B8                   .DATA.W     H'00B8
    0000111A 00D8                   .DATA.W     H'00D8
    0000111C 0130                   .DATA.W     H'0130
    0000111E 0128                   .DATA.W     H'0128
    00001120 00FC                   .DATA.W     H'00FC
    00001122 00F8                   .DATA.W     H'00F8
    00001124 0120                   .DATA.W     H'0120
    00001126 0108                   .DATA.W     H'0108
    00001128 <00000000>             .DATA.L     L402
    0000112C <00000000>             .DATA.L     L403
    00001130 <00000000>             .DATA.L     L404
    00001134 <00000000>             .DATA.L     L405
    00001138 <00000000>             .DATA.L     L406
    0000113C <00000000>             .DATA.L     L407
    00001140              L608:                             
         level.c   593            }
         level.c   594            else if(n == 16)
    00001140 6093                   MOV         R9,R0
    00001142 8810                   CMP/EQ      #16,R0
    00001144 8B55                   BF          L610
         level.c   595            {
         level.c   596                    char m[] = {
         level.c   597                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   598                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   599                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   600                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   601                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   602                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   603                            1, 0, 0, 0, 0, 0,27, 0, 0,12, 0, 0, 0, 0, 0, 1,
         level.c   604                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   605                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   606                    };
    00001146 91A0                   MOV.W       L693,R1    ; H'0344
    00001148 D253                   MOV.L       L693+14,R2 ; L410
    0000114A 909F                   MOV.W       L693+2,R0  ; H'0090
    0000114C D353                   MOV.L       L693+18,R3 ; __slow_mvn
    0000114E 430B                   JSR         @R3
    00001150 31FC                   ADD         R15,R1
         level.c   607                    level->type = DIALOG;
    00001152 E101                   MOV         #1,R1
    00001154 1E11                   MOV.L       R1,@(4,R14)
         level.c   608                    level->width = 16;
    00001156 E310                   MOV         #16,R3
    00001158 1E33                   MOV.L       R3,@(12,R14)
         level.c   609                    level->height = 9;
    0000115A E109                   MOV         #9,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000115C 1E14                   MOV.L       R1,@(16,R14)
         level.c   610                    level->map = malloc(16*9);
    0000115E 4C0B                   JSR         @R12
    00001160 6483                   MOV         R8,R4
         level.c   611                    memcpy(level->map, m, 16*9);
    00001162 6683                   MOV         R8,R6
    00001164 9591                   MOV.W       L693,R5    ; H'0344
    00001166 1E02                   MOV.L       R0,@(8,R14)
    00001168 35FC                   ADD         R15,R5
    0000116A 4B0B                   JSR         @R11
    0000116C 6403                   MOV         R0,R4
         level.c   612                    level->nb_messages = 5;
    0000116E E305                   MOV         #5,R3
         level.c   613                    level->message = malloc(5*sizeof(Message));
    00001170 948D                   MOV.W       L693+4,R4  ; H'00B4
    00001172 4C0B                   JSR         @R12
    00001174 1E3A                   MOV.L       R3,@(40,R14)
         level.c   614                    level->message[0] = load_message("Hellooo !", TOP, 0, 0, 0, 0, 0);
    00001176 6103                   MOV         R0,R1
    00001178 D449                   MOV.L       L693+22,R4 ; L411
    0000117A E300                   MOV         #0,R3
    0000117C 1E09                   MOV.L       R0,@(36,R14)
    0000117E 6733                   MOV         R3,R7
    00001180 2FD6                   MOV.L       R13,@-R15
    00001182 6633                   MOV         R3,R6
    00001184 2FD6                   MOV.L       R13,@-R15
    00001186 2F36                   MOV.L       R3,@-R15
    00001188 2F16                   MOV.L       R1,@-R15
    0000118A B1C7                   BSR         __$load_message
    0000118C 6533                   MOV         R3,R5
         level.c   615                    level->message[1] = load_message("Why are you following\nme like this, sir ?", BOTTOM, 0, 
                         +0, 0, 0, 0);
    0000118E E300                   MOV         #0,R3
    00001190 D444                   MOV.L       L693+26,R4 ; L412
    00001192 6733                   MOV         R3,R7
    00001194 51E9                   MOV.L       @(36,R14),R1
    00001196 6633                   MOV         R3,R6
    00001198 2FD6                   MOV.L       R13,@-R15
    0000119A 7124                   ADD         #36,R1
    0000119C 2FD6                   MOV.L       R13,@-R15
    0000119E 2F36                   MOV.L       R3,@-R15
    000011A0 2F16                   MOV.L       R1,@-R15
    000011A2 B1BB                   BSR         __$load_message
    000011A4 E501                   MOV         #1,R5
         level.c   616                    level->message[2] = load_message("You're ugly, your head is\nshaped like a square.", BOTTO
                         +M, 0, 0, 0, 0, 0);
    000011A6 E300                   MOV         #0,R3
    000011A8 D43F                   MOV.L       L693+30,R4 ; L413
    000011AA 6733                   MOV         R3,R7
    000011AC 51E9                   MOV.L       @(36,R14),R1
    000011AE 6633                   MOV         R3,R6
    000011B0 2FD6                   MOV.L       R13,@-R15
    000011B2 7148                   ADD         #72,R1
    000011B4 2FD6                   MOV.L       R13,@-R15
    000011B6 2F36                   MOV.L       R3,@-R15
    000011B8 2F16                   MOV.L       R1,@-R15
    000011BA B1AF                   BSR         __$load_message




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011BC E501                   MOV         #1,R5
         level.c   617                    level->message[3] = load_message("Sorry, my heart goes\nto circle heads !", BOTTOM, 0, 0, 
                         +0, 0, 0);
    000011BE E300                   MOV         #0,R3
    000011C0 D43A                   MOV.L       L693+34,R4 ; L414
    000011C2 6733                   MOV         R3,R7
    000011C4 51E9                   MOV.L       @(36,R14),R1
    000011C6 6633                   MOV         R3,R6
    000011C8 2FD6                   MOV.L       R13,@-R15
    000011CA 716C                   ADD         #108,R1
    000011CC 2FD6                   MOV.L       R13,@-R15
    000011CE 2F36                   MOV.L       R3,@-R15
    000011D0 2F16                   MOV.L       R1,@-R15
    000011D2 B1A3                   BSR         __$load_message
    000011D4 E501                   MOV         #1,R5
         level.c   618                    level->message[4] = load_message("   ...   ", TOP, 0, 0, 0, 0, 0);
    000011D6 E300                   MOV         #0,R3
    000011D8 D435                   MOV.L       L693+38,R4 ; L415
    000011DA 6733                   MOV         R3,R7
    000011DC 51E9                   MOV.L       @(36,R14),R1
    000011DE 6633                   MOV         R3,R6
    000011E0 2FD6                   MOV.L       R13,@-R15
    000011E2 318C                   ADD         R8,R1
    000011E4 2FD6                   MOV.L       R13,@-R15
    000011E6 2F36                   MOV.L       R3,@-R15
    000011E8 2F16                   MOV.L       R1,@-R15
    000011EA B197                   BSR         __$load_message
    000011EC 6533                   MOV         R3,R5
    000011EE A13F                   BRA         L579
    000011F0 7F50                   ADD         #80,R15
    000011F2              L610:                             
         level.c   619            }
         level.c   620            else if(n == 17)
    000011F2 8811                   CMP/EQ      #17,R0
    000011F4 8B64                   BF          L612
         level.c   621            {
         level.c   622                    char m[] = {
         level.c   623                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   624                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   625                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   626                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   627                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   628                            1, 1, 0,11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   629                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   630                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   631                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   632                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   633                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   634                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   635                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   636                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   637                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   638                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   639                            1,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   640                            12,13,13,13,13,13,13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   641                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   642                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   643                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   644                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   645                            1, 1, 1, 1, 1, 1, 1, 8, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1,
         level.c   646                            1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1,
         level.c   647                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   648                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   649                    };
    000011F6 914B                   MOV.W       L693+6,R1  ; H'0200
    000011F8 D22E                   MOV.L       L693+42,R2 ; L418
    000011FA 904A                   MOV.W       L693+8,R0  ; H'01D4
    000011FC D327                   MOV.L       L693+18,R3 ; __slow_mvn
    000011FE 430B                   JSR         @R3
    00001200 31FC                   ADD         R15,R1
         level.c   650                    level->width = 18;
    00001202 1E63                   MOV.L       R6,@(12,R14)
         level.c   651                    level->height = 26;
    00001204 1E44                   MOV.L       R4,@(16,R14)
         level.c   652                    level->map = malloc(18*26);
    00001206 9444                   MOV.W       L693+8,R4  ; H'01D4
    00001208 4C0B                   JSR         @R12
    0000120A 0009                   NOP
    0000120C 1E02                   MOV.L       R0,@(8,R14)
         level.c   653                    memcpy(level->map, m, 18*26);
    0000120E 9640                   MOV.W       L693+8,R6  ; H'01D4
    00001210 953E                   MOV.W       L693+6,R5  ; H'0200
    00001212 35FC                   ADD         R15,R5
    00001214 4B0B                   JSR         @R11
    00001216 6403                   MOV         R0,R4
         level.c   654                    level->nb_throwers = 2;
    00001218 E202                   MOV         #2,R2
    0000121A 1E2C                   MOV.L       R2,@(48,R14)
         level.c   655                    level->thrower = malloc(2*sizeof(Thrower));
    0000121C 4C0B                   JSR         @R12
    0000121E E440                   MOV         #64,R4
    00001220 1E0B                   MOV.L       R0,@(44,R14)
         level.c   656                    level->thrower[0] = load_thrower(7, 22, T_BULLET, T_RIGHT, 4);
    00001222 6103                   MOV         R0,R1
    00001224 E304                   MOV         #4,R3
    00001226 E701                   MOV         #1,R7
    00001228 2F36                   MOV.L       R3,@-R15
    0000122A E600                   MOV         #0,R6
    0000122C 2F16                   MOV.L       R1,@-R15
    0000122E E516                   MOV         #22,R5
    00001230 B1B3                   BSR         __$load_thrower
    00001232 E407                   MOV         #7,R4
         level.c   657                    level->thrower[1] = load_thrower(15, 22, T_BULLET, T_LEFT, 4);
    00001234 51EB                   MOV.L       @(44,R14),R1
    00001236 E304                   MOV         #4,R3
    00001238 2F36                   MOV.L       R3,@-R15
    0000123A E700                   MOV         #0,R7
    0000123C 7120                   ADD         #32,R1
    0000123E 6673                   MOV         R7,R6
    00001240 2F16                   MOV.L       R1,@-R15
    00001242 E516                   MOV         #22,R5
    00001244 B1A9                   BSR         __$load_thrower
    00001246 E40F                   MOV         #15,R4
         level.c   658                    level->nb_messages = 2;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001248 E302                   MOV         #2,R3
    0000124A 1E3A                   MOV.L       R3,@(40,R14)
         level.c   659                    level->message = malloc(2*sizeof(Message));
    0000124C 4C0B                   JSR         @R12
    0000124E E448                   MOV         #72,R4
    00001250 1E09                   MOV.L       R0,@(36,R14)
         level.c   660                    level->message[0] = load_message("I think that the\nlast thing to do.", TOP, BEGIN, 0, 0, 
                         +0, 0);
    00001252 6103                   MOV         R0,R1
    00001254 D418                   MOV.L       L693+46,R4 ; L419
    00001256 E300                   MOV         #0,R3
    00001258 2F36                   MOV.L       R3,@-R15
    0000125A 6733                   MOV         R3,R7
    0000125C 2F36                   MOV.L       R3,@-R15
    0000125E 6633                   MOV         R3,R6
    00001260 2F36                   MOV.L       R3,@-R15
    00001262 2F16                   MOV.L       R1,@-R15
    00001264 B15A                   BSR         __$load_message
    00001266 6533                   MOV         R3,R5
         level.c   661                    level->message[1] = load_message("Oh god, you found a secret !", TOP, XY, 48, 54, 128, 136
                         +);
    00001268 51E9                   MOV.L       @(36,R14),R1
    0000126A E730                   MOV         #48,R7
    0000126C D413                   MOV.L       L693+50,R4 ; L420
    0000126E E604                   MOV         #4,R6
    00001270 9310                   MOV.W       L693+10,R3 ; H'0088
    00001272 E500                   MOV         #0,R5
    00001274 920F                   MOV.W       L693+12,R2 ; H'0080
    00001276 7124                   ADD         #36,R1
    00001278 2F36                   MOV.L       R3,@-R15
    0000127A 6013                   MOV         R1,R0
    0000127C 2F26                   MOV.L       R2,@-R15
    0000127E E136                   MOV         #54,R1
    00001280 2F16                   MOV.L       R1,@-R15
    00001282 B14B                   BSR         __$load_message
    00001284 2F06                   MOV.L       R0,@-R15
    00001286              L667:                             
    00001286 A0F3                   BRA         L579
    00001288 7F30                   ADD         #48,R15
    0000128A              L693:                             
    0000128A 0344                   .DATA.W     H'0344
    0000128C 0090                   .DATA.W     H'0090
    0000128E 00B4                   .DATA.W     H'00B4
    00001290 0200                   .DATA.W     H'0200
    00001292 01D4                   .DATA.W     H'01D4
    00001294 0088                   .DATA.W     H'0088
    00001296 0080                   .DATA.W     H'0080
    00001298 <00000000>             .DATA.L     L410
    0000129C <00000000>             .DATA.L     __slow_mvn
    000012A0 <00000000>             .DATA.L     L411
    000012A4 <00000000>             .DATA.L     L412
    000012A8 <00000000>             .DATA.L     L413
    000012AC <00000000>             .DATA.L     L414
    000012B0 <00000000>             .DATA.L     L415
    000012B4 <00000000>             .DATA.L     L418
    000012B8 <00000000>             .DATA.L     L419
    000012BC <00000000>             .DATA.L     L420




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012C0              L612:                             
         level.c   662            }
         level.c   663            else if(n == 18)
    000012C0 6093                   MOV         R9,R0
    000012C2 8812                   CMP/EQ      #18,R0
    000012C4 8901                   BT          L694
    000012C6 A085                   BRA         L614
    000012C8 0009                   NOP
    000012CA              L694:                             
         level.c   664            {
         level.c   665                    char m[] = {
         level.c   666                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   667                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   668                            1, 1, 1, 1, 1, 1, 1, 0, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1,
         level.c   669                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   670                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   671                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   672                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
         level.c   673                            1, 1, 0,10, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   674                            1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   675                            1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,
         level.c   676                            1, 1, 7, 1, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
         level.c   677                            1, 1, 0, 0, 0, 0, 6, 0, 0,10, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   678                            1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   679                            1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 1, 1,
         level.c   680                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   681                            1, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 4, 0, 0, 3, 1, 1,
         level.c   682                            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 5, 5, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   683                            1, 1, 1, 1, 1, 1, 1, 6, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 3, 1, 0, 0, 1, 1,
         level.c   684                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0,10, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   685                            1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 6, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 1, 1,
         level.c   686                            1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0,12, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   687                            1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 1, 4, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   688                            1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,
         level.c   689                            1, 1, 0,11, 0, 0, 0, 0, 0, 5, 5, 0, 1, 1, 1, 1, 5, 1, 5, 5, 5, 5, 5, 5, 5, 1, 1,
         level.c   690                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   691                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   692                    };
    000012CA 9172                   MOV.W       L695,R1    ; H'0114
    000012CC D23C                   MOV.L       L695+14,R2 ; L423
    000012CE 9071                   MOV.W       L695+2,R0  ; H'02BE
    000012D0 D33C                   MOV.L       L695+18,R3 ; __slow_mvn
    000012D2 430B                   JSR         @R3
    000012D4 31FC                   ADD         R15,R1
         level.c   693                    Moving_line line[] = {
         level.c   694                            {76, 27, 8, 0, 2, 76, 27, 76, 55},
         level.c   695                            {85, 19, 8, 0, 2, 85, 19, 85, 55},
         level.c   696                            {94, 24, 16, 0, 2, 94, 24, 94, 32}
         level.c   697                    };
    000012D6 916E                   MOV.W       L695+4,R1  ; H'00A8
    000012D8 D23B                   MOV.L       L695+22,R2 ; L425
    000012DA 31FC                   ADD         R15,R1
    000012DC D33B                   MOV.L       L695+26,R3 ; __quick_mvn
    000012DE 430B                   JSR         @R3
    000012E0 E06C                   MOV         #108,R0
         level.c   698                    level->width = 27;
    000012E2 1E73                   MOV.L       R7,@(12,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   699                    level->height = 26;
    000012E4 1E44                   MOV.L       R4,@(16,R14)
         level.c   700                    level->map = malloc(27*26);
    000012E6 9465                   MOV.W       L695+2,R4  ; H'02BE
    000012E8 4C0B                   JSR         @R12
    000012EA 0009                   NOP
    000012EC 1E02                   MOV.L       R0,@(8,R14)
         level.c   701                    memcpy(level->map, m, 27*26);
    000012EE 9661                   MOV.W       L695+2,R6  ; H'02BE
    000012F0 955F                   MOV.W       L695,R5    ; H'0114
    000012F2 35FC                   ADD         R15,R5
    000012F4 4B0B                   JSR         @R11
    000012F6 6403                   MOV         R0,R4
         level.c   702                    level->nb_lines = 3;
    000012F8 E203                   MOV         #3,R2
    000012FA 1E26                   MOV.L       R2,@(24,R14)
         level.c   703                    level->line = malloc(3*sizeof(Moving_line));
    000012FC 4C0B                   JSR         @R12
    000012FE E46C                   MOV         #108,R4
    00001300 1E05                   MOV.L       R0,@(20,R14)
         level.c   704                    memcpy(level->line, line, 3*sizeof(Moving_line));
    00001302 E66C                   MOV         #108,R6
    00001304 9557                   MOV.W       L695+4,R5  ; H'00A8
    00001306 35FC                   ADD         R15,R5
    00001308 4B0B                   JSR         @R11
    0000130A 6403                   MOV         R0,R4
         level.c   705                    level->nb_throwers = 6;
         level.c   706                    level->thrower = malloc(6*sizeof(Thrower));
    0000130C 9454                   MOV.W       L695+6,R4  ; H'00C0
    0000130E E306                   MOV         #6,R3
    00001310 4C0B                   JSR         @R12
    00001312 1E3C                   MOV.L       R3,@(48,R14)
    00001314 1E0B                   MOV.L       R0,@(44,R14)
         level.c   707                    level->thrower[0] = load_thrower(24, 2, T_BULLET, T_LEFT, 16);
    00001316 6103                   MOV         R0,R1
    00001318 E310                   MOV         #16,R3
    0000131A E700                   MOV         #0,R7
    0000131C 2F36                   MOV.L       R3,@-R15
    0000131E E502                   MOV         #2,R5
    00001320 2F16                   MOV.L       R1,@-R15
    00001322 6673                   MOV         R7,R6
    00001324 B139                   BSR         __$load_thrower
    00001326 E418                   MOV         #24,R4
         level.c   708                    level->thrower[1] = load_thrower(3, 7, T_BULLET, T_DOWN, 8);
    00001328 51EB                   MOV.L       @(44,R14),R1
    0000132A E703                   MOV         #3,R7
    0000132C 2FA6                   MOV.L       R10,@-R15
    0000132E E600                   MOV         #0,R6
    00001330 7120                   ADD         #32,R1
    00001332 E507                   MOV         #7,R5
    00001334 6473                   MOV         R7,R4
    00001336 B130                   BSR         __$load_thrower
    00001338 2F16                   MOV.L       R1,@-R15
         level.c   709                    level->thrower[2] = load_thrower(2, 10, T_BULLET, T_LEFT, 4);
    0000133A E304                   MOV         #4,R3
    0000133C 51EB                   MOV.L       @(44,R14),R1
    0000133E E700                   MOV         #0,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001340 2F36                   MOV.L       R3,@-R15
    00001342 E50A                   MOV         #10,R5
    00001344 7140                   ADD         #64,R1
    00001346 6673                   MOV         R7,R6
    00001348 2F16                   MOV.L       R1,@-R15
    0000134A B126                   BSR         __$load_thrower
    0000134C E402                   MOV         #2,R4
         level.c   710                    level->thrower[3] = load_thrower(4, 10, T_BULLET, T_LEFT, 4);
    0000134E E304                   MOV         #4,R3
    00001350 51EB                   MOV.L       @(44,R14),R1
    00001352 E700                   MOV         #0,R7
    00001354 2F36                   MOV.L       R3,@-R15
    00001356 E50A                   MOV         #10,R5
    00001358 7160                   ADD         #96,R1
    0000135A 6673                   MOV         R7,R6
    0000135C 2F16                   MOV.L       R1,@-R15
    0000135E B11C                   BSR         __$load_thrower
    00001360 6433                   MOV         R3,R4
         level.c   711                    level->thrower[4] = load_thrower(9, 11, T_STONE, T_DOWN, 2);
    00001362 E202                   MOV         #2,R2
    00001364 9329                   MOV.W       L695+8,R3  ; H'0080
    00001366 E703                   MOV         #3,R7
    00001368 51EB                   MOV.L       @(44,R14),R1
    0000136A E601                   MOV         #1,R6
    0000136C 2F26                   MOV.L       R2,@-R15
    0000136E E50B                   MOV         #11,R5
    00001370 313C                   ADD         R3,R1
    00001372 2F16                   MOV.L       R1,@-R15
    00001374 B111                   BSR         __$load_thrower
    00001376 E409                   MOV         #9,R4
         level.c   712                    level->thrower[5] = load_thrower(17, 18, T_BULLET, T_DOWN, 4);
    00001378 9320                   MOV.W       L695+10,R3 ; H'00A0
    0000137A E204                   MOV         #4,R2
    0000137C 51EB                   MOV.L       @(44,R14),R1
    0000137E E703                   MOV         #3,R7
    00001380 2F26                   MOV.L       R2,@-R15
    00001382 E600                   MOV         #0,R6
    00001384 313C                   ADD         R3,R1
    00001386 E512                   MOV         #18,R5
    00001388 2F16                   MOV.L       R1,@-R15
    0000138A B106                   BSR         __$load_thrower
    0000138C E411                   MOV         #17,R4
         level.c   713                    level->nb_messages = 1;
    0000138E E301                   MOV         #1,R3
    00001390 1E3A                   MOV.L       R3,@(40,R14)
         level.c   714                    level->message = malloc(sizeof(Message));
    00001392 4C0B                   JSR         @R12
    00001394 E424                   MOV         #36,R4
         level.c   715                    level->message[0] = load_message("Final step. Be careful.", TOP, BEGIN, 0, 0, 0, 0);
    00001396 6103                   MOV         R0,R1
    00001398 D40D                   MOV.L       L695+30,R4 ; L426
    0000139A E300                   MOV         #0,R3
    0000139C 1E09                   MOV.L       R0,@(36,R14)
    0000139E 6733                   MOV         R3,R7
    000013A0 2F36                   MOV.L       R3,@-R15
    000013A2 6633                   MOV         R3,R6
    000013A4 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013A6 2F36                   MOV.L       R3,@-R15
    000013A8 2F16                   MOV.L       R1,@-R15
    000013AA B0B7                   BSR         __$load_message
    000013AC 6533                   MOV         R3,R5
    000013AE A05B                   BRA         L669
    000013B0 0009                   NOP
    000013B2              L695:                             
    000013B2 0114                   .DATA.W     H'0114
    000013B4 02BE                   .DATA.W     H'02BE
    000013B6 00A8                   .DATA.W     H'00A8
    000013B8 00C0                   .DATA.W     H'00C0
    000013BA 0080                   .DATA.W     H'0080
    000013BC 00A0                   .DATA.W     H'00A0
    000013BE 0000                   .DATA.W     0
    000013C0 <00000000>             .DATA.L     L423
    000013C4 <00000000>             .DATA.L     __slow_mvn
    000013C8 <00000000>             .DATA.L     L425
    000013CC <00000000>             .DATA.L     __quick_mvn
    000013D0 <00000000>             .DATA.L     L426
    000013D4              L614:                             
         level.c   716            }
         level.c   717            else if(n == 19)
    000013D4 8813                   CMP/EQ      #19,R0
    000013D6 8B49                   BF          L616
         level.c   718            {
         level.c   719                    char m[] = {
         level.c   720                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   721                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   722                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   723                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   724                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   725                            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
         level.c   726                            1, 0, 0, 0, 0, 0,27, 0, 0,12, 0, 0, 0, 0, 0, 1,
         level.c   727                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
         level.c   728                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
         level.c   729                    };
    000013D8 918E                   MOV.W       L696,R1    ; H'0344
    000013DA D249                   MOV.L       L696+8,R2  ; L429
    000013DC 908D                   MOV.W       L696+2,R0  ; H'0090
    000013DE D349                   MOV.L       L696+12,R3 ; __slow_mvn
    000013E0 430B                   JSR         @R3
    000013E2 31FC                   ADD         R15,R1
         level.c   730                    level->type = DIALOG;
    000013E4 E101                   MOV         #1,R1
         level.c   731                    level->width = 16;
    000013E6 E310                   MOV         #16,R3
    000013E8 1E11                   MOV.L       R1,@(4,R14)
         level.c   732                    level->height = 9;
    000013EA E109                   MOV         #9,R1
    000013EC 1E33                   MOV.L       R3,@(12,R14)
    000013EE 1E14                   MOV.L       R1,@(16,R14)
         level.c   733                    level->map = malloc(16*9);
    000013F0 4C0B                   JSR         @R12
    000013F2 6483                   MOV         R8,R4
    000013F4 1E02                   MOV.L       R0,@(8,R14)
         level.c   734                    memcpy(level->map, m, 16*9);
    000013F6 6683                   MOV         R8,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013F8 957E                   MOV.W       L696,R5    ; H'0344
    000013FA 35FC                   ADD         R15,R5
    000013FC 4B0B                   JSR         @R11
    000013FE 6403                   MOV         R0,R4
         level.c   735                    level->nb_messages = 4;
    00001400 E304                   MOV         #4,R3
    00001402 1E3A                   MOV.L       R3,@(40,R14)
         level.c   736                    level->message = malloc(4*sizeof(Message));
    00001404 4C0B                   JSR         @R12
    00001406 6483                   MOV         R8,R4
    00001408 1E09                   MOV.L       R0,@(36,R14)
         level.c   737                    level->message[0] = load_message("Hellooo !", TOP, 0, 0, 0, 0, 0);
    0000140A 6103                   MOV         R0,R1
    0000140C D43E                   MOV.L       L696+16,R4 ; L411
    0000140E E300                   MOV         #0,R3
    00001410 2FD6                   MOV.L       R13,@-R15
    00001412 6733                   MOV         R3,R7
    00001414 2FD6                   MOV.L       R13,@-R15
    00001416 6633                   MOV         R3,R6
    00001418 2F36                   MOV.L       R3,@-R15
    0000141A 2F16                   MOV.L       R1,@-R15
    0000141C B07E                   BSR         __$load_message
    0000141E 6533                   MOV         R3,R5
         level.c   738                    level->message[1] = load_message("Be my wife !", TOP, 0, 0, 0, 0, 0);
    00001420 51E9                   MOV.L       @(36,R14),R1
    00001422 E300                   MOV         #0,R3
    00001424 D439                   MOV.L       L696+20,R4 ; L430
    00001426 7124                   ADD         #36,R1
    00001428 2FD6                   MOV.L       R13,@-R15
    0000142A 6733                   MOV         R3,R7
    0000142C 2FD6                   MOV.L       R13,@-R15
    0000142E 6633                   MOV         R3,R6
    00001430 2F36                   MOV.L       R3,@-R15
    00001432 2F16                   MOV.L       R1,@-R15
    00001434 B072                   BSR         __$load_message
    00001436 6533                   MOV         R3,R5
         level.c   739                    level->message[2] = load_message("   ...   ", BOTTOM, 0, 0, 0, 0, 0);
    00001438 51E9                   MOV.L       @(36,R14),R1
    0000143A E300                   MOV         #0,R3
    0000143C D434                   MOV.L       L696+24,R4 ; L415
    0000143E 7148                   ADD         #72,R1
    00001440 2FD6                   MOV.L       R13,@-R15
    00001442 6733                   MOV         R3,R7
    00001444 2FD6                   MOV.L       R13,@-R15
    00001446 6633                   MOV         R3,R6
    00001448 2F36                   MOV.L       R3,@-R15
    0000144A 2F16                   MOV.L       R1,@-R15
    0000144C B066                   BSR         __$load_message
    0000144E E501                   MOV         #1,R5
         level.c   740                    level->message[3] = load_message("Yeah, ok. Wathever.", BOTTOM, 0, 0, 0, 0, 0);
    00001450 51E9                   MOV.L       @(36,R14),R1
    00001452 E300                   MOV         #0,R3
    00001454 D42F                   MOV.L       L696+28,R4 ; L431
    00001456 716C                   ADD         #108,R1
    00001458 2FD6                   MOV.L       R13,@-R15
    0000145A 6733                   MOV         R3,R7
    0000145C 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000145E 6633                   MOV         R3,R6
    00001460 2F36                   MOV.L       R3,@-R15
    00001462 2F16                   MOV.L       R1,@-R15
    00001464 B05A                   BSR         __$load_message
    00001466 E501                   MOV         #1,R5
    00001468              L669:                             
    00001468 A002                   BRA         L579
    0000146A 7F40                   ADD         #64,R15
    0000146C              L616:                             
         level.c   741            }
         level.c   742            else return 0;
    0000146C A001                   BRA         L618
    0000146E E000                   MOV         #0,R0
    00001470              L579:                             
         level.c   743            return level;
    00001470 60E3                   MOV         R14,R0
         level.c   744    }
    00001472              L618:                             
    00001472 9143                   MOV.W       L696+4,R1  ; H'03D4
    00001474 3F1C                   ADD         R1,R15
    00001476 4F26                   LDS.L       @R15+,PR
    00001478 68F6                   MOV.L       @R15+,R8
    0000147A 69F6                   MOV.L       @R15+,R9
    0000147C 6AF6                   MOV.L       @R15+,R10
    0000147E 6BF6                   MOV.L       @R15+,R11
    00001480 6CF6                   MOV.L       @R15+,R12
    00001482 6DF6                   MOV.L       @R15+,R13
    00001484 000B                   RTS
    00001486 6EF6                   MOV.L       @R15+,R14
         level.c   745    
         level.c   746    void free_level(Level* level)
    00001488              _free_level:                     ; function: free_level
                                                           ; frame size=16
    00001488 2FE6                   MOV.L       R14,@-R15
    0000148A 6E43                   MOV         R4,R14
    0000148C 2FD6                   MOV.L       R13,@-R15
         level.c   747    {
         level.c   748            int i;
         level.c   749            if(!level) return;
    0000148E 2EE8                   TST         R14,R14
    00001490 2FC6                   MOV.L       R12,@-R15
    00001492 4F22                   STS.L       PR,@-R15
    00001494 892B                   BT          L620
         level.c   750            if(level->map) free(level->map);
    00001496 DD20                   MOV.L       L696+32,R13; _free
    00001498 52E2                   MOV.L       @(8,R14),R2
    0000149A 2228                   TST         R2,R2
    0000149C 8901                   BT          L621
    0000149E 4D0B                   JSR         @R13
    000014A0 54E2                   MOV.L       @(8,R14),R4
    000014A2              L621:                             
         level.c   751            if(level->line) free(level->line);
    000014A2 53E5                   MOV.L       @(20,R14),R3
    000014A4 2338                   TST         R3,R3
    000014A6 8901                   BT          L622
    000014A8 4D0B                   JSR         @R13
    000014AA 54E5                   MOV.L       @(20,R14),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014AC              L622:                             
         level.c   752            if(level->wall) free(level->wall);
    000014AC 53E7                   MOV.L       @(28,R14),R3
    000014AE 2338                   TST         R3,R3
    000014B0 8901                   BT          L623
    000014B2 4D0B                   JSR         @R13
    000014B4 54E7                   MOV.L       @(28,R14),R4
    000014B6              L623:                             
         level.c   753            if(level->message)
    000014B6 53E9                   MOV.L       @(36,R14),R3
    000014B8 2338                   TST         R3,R3
    000014BA 8911                   BT          L624
         level.c   754            {
         level.c   755                    for(i=0 ; i<level->nb_messages ; i++)
    000014BC A00B                   BRA         L625
    000014BE EC00                   MOV         #0,R12
    000014C0              L626:                             
         level.c   756                            free(level->message[i].str);
    000014C0 52E9                   MOV.L       @(36,R14),R2
    000014C2 64C3                   MOV         R12,R4
    000014C4 63C3                   MOV         R12,R3
    000014C6 4408                   SHLL2       R4
    000014C8 4400                   SHLL        R4
    000014CA 343C                   ADD         R3,R4
    000014CC 4408                   SHLL2       R4
    000014CE 342C                   ADD         R2,R4
    000014D0 4D0B                   JSR         @R13
    000014D2 6442                   MOV.L       @R4,R4
    000014D4 7C01                   ADD         #1,R12
    000014D6              L625:                             
    000014D6 53EA                   MOV.L       @(40,R14),R3
    000014D8 3C33                   CMP/GE      R3,R12
    000014DA 8BF1                   BF          L626
         level.c   757                    free(level->message);
    000014DC 4D0B                   JSR         @R13
    000014DE 54E9                   MOV.L       @(36,R14),R4
    000014E0              L624:                             
         level.c   758            }
         level.c   759            if(level->thrower) free(level->thrower);
    000014E0 53EB                   MOV.L       @(44,R14),R3
    000014E2 2338                   TST         R3,R3
    000014E4 8901                   BT          L627
    000014E6 4D0B                   JSR         @R13
    000014E8 54EB                   MOV.L       @(44,R14),R4
    000014EA              L627:                             
         level.c   760            free(level);
    000014EA 4D0B                   JSR         @R13
    000014EC 64E3                   MOV         R14,R4
         level.c   761    }
    000014EE              L620:                             
    000014EE 4F26                   LDS.L       @R15+,PR
    000014F0 6CF6                   MOV.L       @R15+,R12
    000014F2 6DF6                   MOV.L       @R15+,R13
    000014F4 000B                   RTS
    000014F6 6EF6                   MOV.L       @R15+,R14
    000014F8              L696:                             
    000014F8 0344                   .DATA.W     H'0344




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014FA 0090                   .DATA.W     H'0090
    000014FC 03D4                   .DATA.W     H'03D4
    000014FE 0000                   .DATA.W     0
    00001500 <00000000>             .DATA.L     L429
    00001504 <00000000>             .DATA.L     __slow_mvn
    00001508 <00000000>             .DATA.L     L411
    0000150C <00000000>             .DATA.L     L430
    00001510 <00000000>             .DATA.L     L415
    00001514 <00000000>             .DATA.L     L431
    00001518 <00000000>             .DATA.L     _free
         level.c   762    
         level.c   763    static Message load_message(char* str, Message_place place, Message_trigger_type trigger, int param1, int 
                         +param2, int param3, int param4)
    0000151C              __$load_message:                 ; function: load_message
                                                           ; frame size=60
                                                           ; used runtime library name:
                                                           ; __slow_strcpy, __quick_odd_mvn
    0000151C 2FE6                   MOV.L       R14,@-R15
         level.c   764    {
         level.c   765            char* c;
         level.c   766            int i, *p;
         level.c   767            Message message;
         level.c   768            message.nb_lines = 1;
    0000151E E301                   MOV         #1,R3
    00001520 4F22                   STS.L       PR,@-R15
    00001522 7FCC                   ADD         #-52,R15
    00001524 2F42                   MOV.L       R4,@R15
    00001526 6EF3                   MOV         R15,R14
    00001528 1F51                   MOV.L       R5,@(4,R15)
    0000152A 7E10                   ADD         #16,R14
    0000152C 1F62                   MOV.L       R6,@(8,R15)
    0000152E 1F73                   MOV.L       R7,@(12,R15)
    00001530 1E31                   MOV.L       R3,@(4,R14)
         level.c   769            message.str = malloc(strlen(str)+1);
    00001532 D37B                   MOV.L       L697+2,R3  ; _strlen
    00001534 430B                   JSR         @R3
    00001536 64F2                   MOV.L       @R15,R4
    00001538 D27A                   MOV.L       L697+6,R2  ; _malloc
    0000153A 6403                   MOV         R0,R4
    0000153C 420B                   JSR         @R2
    0000153E 7401                   ADD         #1,R4
    00001540 2E02                   MOV.L       R0,@R14
         level.c   770            strcpy(message.str, str);
    00001542 61F2                   MOV.L       @R15,R1
    00001544 D378                   MOV.L       L697+10,R3 ; __slow_strcpy
    00001546 430B                   JSR         @R3
    00001548 60E2                   MOV.L       @R14,R0
         level.c   771            for(c = message.str ; *c ; c++)
    0000154A E500                   MOV         #0,R5
    0000154C A008                   BRA         L628
    0000154E 64E2                   MOV.L       @R14,R4
    00001550              L629:                             
         level.c   772            {
         level.c   773                    if(*c == '\n')
    00001550 6040                   MOV.B       @R4,R0
    00001552 880A                   CMP/EQ      #10,R0
    00001554 8B03                   BF          L630




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   774                    {
         level.c   775                            *c = 0;
    00001556 2450                   MOV.B       R5,@R4
         level.c   776                            message.nb_lines++;
    00001558 52E1                   MOV.L       @(4,R14),R2
    0000155A 7201                   ADD         #1,R2
    0000155C 1E21                   MOV.L       R2,@(4,R14)
    0000155E              L630:                             
    0000155E 7401                   ADD         #1,R4
    00001560              L628:                             
    00001560 6340                   MOV.B       @R4,R3
    00001562 2338                   TST         R3,R3
    00001564 8BF4                   BF          L629
         level.c   777                    }
         level.c   778            }
         level.c   779            message.place = place;
         level.c   780            message.trigger = trigger;
         level.c   781            message.trigger_param[0] = param1;
         level.c   782            message.trigger_param[1] = param2;
    00001566 E040                   MOV         #64,R0
    00001568 53F1                   MOV.L       @(4,R15),R3
    0000156A 1E32                   MOV.L       R3,@(8,R14)
    0000156C 52F2                   MOV.L       @(8,R15),R2
    0000156E 1E23                   MOV.L       R2,@(12,R14)
    00001570 53F3                   MOV.L       @(12,R15),R3
    00001572 1E34                   MOV.L       R3,@(16,R14)
    00001574 02FE                   MOV.L       @(R0,R15),R2
         level.c   783            message.trigger_param[2] = param3;
    00001576 E044                   MOV         #68,R0
    00001578 1E25                   MOV.L       R2,@(20,R14)
    0000157A 03FE                   MOV.L       @(R0,R15),R3
    0000157C 1E36                   MOV.L       R3,@(24,R14)
         level.c   784            message.trigger_param[3] = param4;
    0000157E E048                   MOV         #72,R0
    00001580 D36A                   MOV.L       L697+14,R3 ; __quick_odd_mvn
    00001582 02FE                   MOV.L       @(R0,R15),R2
    00001584 1E27                   MOV.L       R2,@(28,R14)
         level.c   785            message.seen = 0;
    00001586 E020                   MOV         #32,R0
    00001588 0E54                   MOV.B       R5,@(R0,R14)
    0000158A 62E3                   MOV         R14,R2
    0000158C 51FF                   MOV.L       @(60,R15),R1
    0000158E 430B                   JSR         @R3
    00001590 E024                   MOV         #36,R0
         level.c   786            return message;
         level.c   787    }
    00001592 7F34                   ADD         #52,R15
    00001594 4F26                   LDS.L       @R15+,PR
    00001596 000B                   RTS
    00001598 6EF6                   MOV.L       @R15+,R14
         level.c   788    
         level.c   789    static Thrower load_thrower(int x, int y, Thrower_type type, Thrower_direction direction, int freq_model)
    0000159A              __$load_thrower:                 ; function: load_thrower
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __modls, __quick_evn_mvn
         level.c   790    {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   791            int i;
         level.c   792            Thrower thrower;
         level.c   793            thrower.x = x;
         level.c   794            thrower.y = y;
         level.c   795            thrower.type = type;
         level.c   796            if(type == T_BULLET) thrower.direction = direction;
    0000159A 2668                   TST         R6,R6
    0000159C 2FE6                   MOV.L       R14,@-R15
    0000159E 2FD6                   MOV.L       R13,@-R15
    000015A0 4F22                   STS.L       PR,@-R15
    000015A2 7FE0                   ADD         #-32,R15
    000015A4 6EF3                   MOV         R15,R14
    000015A6 2E42                   MOV.L       R4,@R14
    000015A8 1E51                   MOV.L       R5,@(4,R14)
    000015AA 1E62                   MOV.L       R6,@(8,R14)
    000015AC 8F02                   BF/S        L632
    000015AE ED03                   MOV         #3,R13
    000015B0 A001                   BRA         L633
    000015B2 1E73                   MOV.L       R7,@(12,R14)
    000015B4              L632:                             
         level.c   797            else thrower.direction = T_DOWN;
    000015B4 1ED3                   MOV.L       R13,@(12,R14)
    000015B6              L633:                             
         level.c   798            switch(freq_model)
    000015B6 E607                   MOV         #7,R6
    000015B8 50FC                   MOV.L       @(48,R15),R0
    000015BA E500                   MOV         #0,R5
    000015BC 8800                   CMP/EQ      #0,R0
    000015BE 8D18                   BT/S        L567
    000015C0 E410                   MOV         #16,R4
    000015C2 8801                   CMP/EQ      #1,R0
    000015C4 891F                   BT          L568
    000015C6 8802                   CMP/EQ      #2,R0
    000015C8 8928                   BT          L569
    000015CA 8803                   CMP/EQ      #3,R0
    000015CC 8932                   BT          L570
    000015CE 8804                   CMP/EQ      #4,R0
    000015D0 8940                   BT          L571
    000015D2 8805                   CMP/EQ      #5,R0
    000015D4 894B                   BT          L572
    000015D6 8806                   CMP/EQ      #6,R0
    000015D8 8957                   BT          L573
    000015DA 8807                   CMP/EQ      #7,R0
    000015DC 8961                   BT          L574
    000015DE 8808                   CMP/EQ      #8,R0
    000015E0 896C                   BT          L575
    000015E2 8809                   CMP/EQ      #9,R0
    000015E4 8977                   BT          L576
    000015E6 8810                   CMP/EQ      #16,R0
    000015E8 8B01                   BF          L698
    000015EA A082                   BRA         L577
    000015EC 0009                   NOP
    000015EE              L698:                             
    000015EE A08C                   BRA         L634
    000015F0 0009                   NOP
    000015F2              L567:                            ; case label 
         level.c   799            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         level.c   800                    case 0: //never shoots
         level.c   801                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    000015F2 6653                   MOV         R5,R6
    000015F4              L635:                             
         level.c   802                                    thrower.freq[i] = 0;
    000015F4 63E3                   MOV         R14,R3
    000015F6 7310                   ADD         #16,R3
    000015F8 336C                   ADD         R6,R3
    000015FA 7601                   ADD         #1,R6
    000015FC 3643                   CMP/GE      R4,R6
    000015FE 8FF9                   BF/S        L635
    00001600 2350                   MOV.B       R5,@R3
         level.c   803                            break;
    00001602 A082                   BRA         L634
    00001604 0009                   NOP
    00001606              L568:                            ; case label 
         level.c   804                    case 1: //always shoots
         level.c   805                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    00001606 E701                   MOV         #1,R7
    00001608 6653                   MOV         R5,R6
    0000160A              L636:                             
         level.c   806                                    thrower.freq[i] = 1;
    0000160A 62E3                   MOV         R14,R2
    0000160C 7210                   ADD         #16,R2
    0000160E 326C                   ADD         R6,R2
    00001610 7601                   ADD         #1,R6
    00001612 3643                   CMP/GE      R4,R6
    00001614 8FF9                   BF/S        L636
    00001616 2270                   MOV.B       R7,@R2
         level.c   807                            break;
    00001618 A077                   BRA         L634
    0000161A 0009                   NOP
    0000161C              L569:                            ; case label 
         level.c   808                    case 2: //shoots one out of two
         level.c   809                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    0000161C 6653                   MOV         R5,R6
    0000161E              L637:                             
         level.c   810                                    thrower.freq[i] = i&1;
    0000161E 63E3                   MOV         R14,R3
    00001620 7310                   ADD         #16,R3
    00001622 336C                   ADD         R6,R3
    00001624 E201                   MOV         #1,R2
    00001626 2269                   AND         R6,R2
    00001628 2320                   MOV.B       R2,@R3
    0000162A 7601                   ADD         #1,R6
    0000162C 3643                   CMP/GE      R4,R6
    0000162E 8BF6                   BF          L637
         level.c   811                            break;
    00001630 A06B                   BRA         L634
    00001632 0009                   NOP
    00001634              L570:                            ; case label 
         level.c   812                    case 3: //shoots one out of three
         level.c   813                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    00001634 6653                   MOV         R5,R6
    00001636              L638:                             
         level.c   814                                    thrower.freq[i] = (i%3?0:1);
    00001636 63E3                   MOV         R14,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001638 D23D                   MOV.L       L697+18,R2 ; __modls
    0000163A 6163                   MOV         R6,R1
    0000163C 7310                   ADD         #16,R3
    0000163E 336C                   ADD         R6,R3
    00001640 420B                   JSR         @R2
    00001642 60D3                   MOV         R13,R0
    00001644 2008                   TST         R0,R0
    00001646 0229                   MOVT        R2
    00001648 2320                   MOV.B       R2,@R3
    0000164A 7601                   ADD         #1,R6
    0000164C 3643                   CMP/GE      R4,R6
    0000164E 8BF2                   BF          L638
         level.c   815                            break;
    00001650 A05B                   BRA         L634
    00001652 0009                   NOP
    00001654              L571:                            ; case label 
         level.c   816                    case 4: //shoots one out of four
         level.c   817                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    00001654 6653                   MOV         R5,R6
    00001656              L641:                             
         level.c   818                                    thrower.freq[i] = (i&3?0:1);
    00001656 63E3                   MOV         R14,R3
    00001658 7310                   ADD         #16,R3
    0000165A 336C                   ADD         R6,R3
    0000165C 6163                   MOV         R6,R1
    0000165E 21D8                   TST         R13,R1
    00001660 0229                   MOVT        R2
    00001662 7601                   ADD         #1,R6
    00001664 2320                   MOV.B       R2,@R3
    00001666 3643                   CMP/GE      R4,R6
    00001668 8BF5                   BF          L641
         level.c   819                            break;
    0000166A A04E                   BRA         L634
    0000166C 0009                   NOP
    0000166E              L572:                            ; case label 
         level.c   820                    case 5: //shoots one out of four (other one)
         level.c   821                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    0000166E 6653                   MOV         R5,R6
    00001670              L644:                             
         level.c   822                                    thrower.freq[i] = (i+2&3?0:1);
    00001670 63E3                   MOV         R14,R3
    00001672 7310                   ADD         #16,R3
    00001674 336C                   ADD         R6,R3
    00001676 6163                   MOV         R6,R1
    00001678 7102                   ADD         #2,R1
    0000167A 21D8                   TST         R13,R1
    0000167C 0229                   MOVT        R2
    0000167E 7601                   ADD         #1,R6
    00001680 2320                   MOV.B       R2,@R3
    00001682 3643                   CMP/GE      R4,R6
    00001684 8BF4                   BF          L644
         level.c   823                            break;
    00001686 A040                   BRA         L634
    00001688 0009                   NOP
    0000168A              L573:                            ; case label 
         level.c   824                    case 6: //0,0,1,1,0,0,1,1...
         level.c   825                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000168A 6653                   MOV         R5,R6
    0000168C              L647:                             
         level.c   826                                    thrower.freq[i] = i&2;
    0000168C 63E3                   MOV         R14,R3
    0000168E 7310                   ADD         #16,R3
    00001690 336C                   ADD         R6,R3
    00001692 E202                   MOV         #2,R2
    00001694 2269                   AND         R6,R2
    00001696 7601                   ADD         #1,R6
    00001698 2320                   MOV.B       R2,@R3
    0000169A 3643                   CMP/GE      R4,R6
    0000169C 8BF6                   BF          L647
         level.c   827                            break;
    0000169E A034                   BRA         L634
    000016A0 0009                   NOP
    000016A2              L574:                            ; case label 
         level.c   828                    case 7: //1,1,0,0,1,1,0,0...
         level.c   829                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    000016A2 6653                   MOV         R5,R6
    000016A4              L648:                             
         level.c   830                                    thrower.freq[i] = i+2&2;
    000016A4 63E3                   MOV         R14,R3
    000016A6 7310                   ADD         #16,R3
    000016A8 336C                   ADD         R6,R3
    000016AA 6063                   MOV         R6,R0
    000016AC 7002                   ADD         #2,R0
    000016AE C902                   AND         #2,R0
    000016B0 2300                   MOV.B       R0,@R3
    000016B2 7601                   ADD         #1,R6
    000016B4 3643                   CMP/GE      R4,R6
    000016B6 8BF5                   BF          L648
         level.c   831                            break;
    000016B8 A027                   BRA         L634
    000016BA 0009                   NOP
    000016BC              L575:                            ; case label 
         level.c   832                    case 8: //shoots one out of eight
         level.c   833                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    000016BC 6753                   MOV         R5,R7
    000016BE              L649:                             
         level.c   834                                    thrower.freq[i] = (i&7?0:1);
    000016BE 63E3                   MOV         R14,R3
    000016C0 7310                   ADD         #16,R3
    000016C2 337C                   ADD         R7,R3
    000016C4 6173                   MOV         R7,R1
    000016C6 2168                   TST         R6,R1
    000016C8 0229                   MOVT        R2
    000016CA 7701                   ADD         #1,R7
    000016CC 2320                   MOV.B       R2,@R3
    000016CE 3743                   CMP/GE      R4,R7
    000016D0 8BF5                   BF          L649
         level.c   835                            break;
    000016D2 A01A                   BRA         L634
    000016D4 0009                   NOP
    000016D6              L576:                            ; case label 
         level.c   836                    case 9: //shoots one out of eight (other one)
         level.c   837                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    000016D6 6753                   MOV         R5,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016D8              L652:                             
         level.c   838                                    thrower.freq[i] = (i+4&7?0:1);
    000016D8 63E3                   MOV         R14,R3
    000016DA 7310                   ADD         #16,R3
    000016DC 337C                   ADD         R7,R3
    000016DE 6173                   MOV         R7,R1
    000016E0 7104                   ADD         #4,R1
    000016E2 2168                   TST         R6,R1
    000016E4 0229                   MOVT        R2
    000016E6 7701                   ADD         #1,R7
    000016E8 2320                   MOV.B       R2,@R3
    000016EA 3743                   CMP/GE      R4,R7
    000016EC 8BF4                   BF          L652
         level.c   839                            break;
    000016EE A00C                   BRA         L634
    000016F0 0009                   NOP
    000016F2              L577:                            ; case label 
         level.c   840                    case 16: //shoots one out of eight
         level.c   841                            for(i=0 ; i<SIZE_FREQ_ARRAY ; i++)
    000016F2 E70F                   MOV         #15,R7
    000016F4 6653                   MOV         R5,R6
    000016F6              L655:                             
         level.c   842                                    thrower.freq[i] = (i&15?0:1);
    000016F6 63E3                   MOV         R14,R3
    000016F8 7310                   ADD         #16,R3
    000016FA 336C                   ADD         R6,R3
    000016FC 6163                   MOV         R6,R1
    000016FE 2178                   TST         R7,R1
    00001700 0229                   MOVT        R2
    00001702 7601                   ADD         #1,R6
    00001704 2320                   MOV.B       R2,@R3
    00001706 3643                   CMP/GE      R4,R6
    00001708 8BF5                   BF          L655
    0000170A              L634:                             
    0000170A 62E3                   MOV         R14,R2
    0000170C D309                   MOV.L       L697+22,R3 ; __quick_evn_mvn
    0000170E 51FB                   MOV.L       @(44,R15),R1
    00001710 430B                   JSR         @R3
    00001712 E020                   MOV         #32,R0
         level.c   843                            break;
         level.c   844            }
         level.c   845            return thrower;
         level.c   846    }
    00001714 7F20                   ADD         #32,R15
    00001716 4F26                   LDS.L       @R15+,PR
    00001718 6DF6                   MOV.L       @R15+,R13
    0000171A 000B                   RTS
    0000171C 6EF6                   MOV.L       @R15+,R14
    0000171E              L697:                             
    0000171E 0000                   .DATA.W     0
    00001720 <00000000>             .DATA.L     _strlen
    00001724 <00000000>             .DATA.L     _malloc
    00001728 <00000000>             .DATA.L     __slow_strcpy
    0000172C <00000000>             .DATA.L     __quick_odd_mvn
    00001730 <00000000>             .DATA.L     __modls
    00001734 <00000000>             .DATA.L     __quick_evn_mvn
C   00000000              L281:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000000 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0C,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01
             0000000000   
             0000000000   
             0101010100   
             0000000000   
             0000000000   
             0000000101   
             0101000000   
             0000000000   
             0000000000   
             0101010101   
             0000000000   
             0000000000   
             0000000101   
             010101000B   
             0000000000   
             0000000000   
             0C01010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
    000000B4              L282:
    000000B4 5573652074             .SDATA      "Use the arrow keys to move."
             6865206172   
             726F77206B   
             6579732074   
             6F206D6F76   
             652E         
    000000CF 00                     .DATA.B     H'00
    000000D0              L283:
    000000D0 5961792021             .SDATA      "Yay ! Now, go kiss"
             204E6F772C   
             20676F206B   
             697373       
    000000E2 0A                     .DATA.B     H'0A
    000000E3 7468617420             .SDATA      "that princess !"
             7072696E63   
             6573732021   
    000000F2 00                     .DATA.B     H'00
    000000F3              L286:
    000000F3 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'0C,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'01,H'00,H'0B,H'00
             0000000000   
             0000000001   
             0000000000   
             0000000101   
             0101010000   
             0000000000   
             0000010000   
             0000000000   
             0001010101   
             0101000000   
             0000000001   
             0101010000   
             00000C0001   
             0101010101   
             0000000000   
             0000010101   
             0101010101   
             0101010101   
             0101010000   
             0000000001   
             0101010101   
             0101010101   
             0101010101   
             0100000000   
             0000010101   
             0101010101   
             0101010101   
             0101010100   
             0B00         
    000001C7 0001010101             .DATA.B     H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    00000207 00000001               .RES.B      1
    00000208              L287:
    00000208 5072657373             .SDATA      "Press SHIFT to jump"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2053484946   
             5420746F20   
             6A756D70     
    0000021B 0A                     .DATA.B     H'0A
    0000021C 6C696B6520             .SDATA      "like a plumber."
             6120706C75   
             6D6265722E   
    0000022B 00                     .DATA.B     H'00
    0000022C              L288:
    0000022C 46616E7461             .SDATA      "Fantastic ! Mario would"
             7374696320   
             21204D6172   
             696F20776F   
             756C64       
    00000243 0A                     .DATA.B     H'0A
    00000244 6265207072             .SDATA      "be proud of you !"
             6F7564206F   
             6620796F75   
             2021         
    00000255 00                     .DATA.B     H'00
    00000256              L291:
    00000256 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'05,H'05,H'05,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,H'05,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0001010100 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01
             0000000000   
             0101010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0100000000   
             0000000000   
             0505050000   
             0000000000   
             0000010101   
             0101000B00   
             0000000501   
             0101010101   
             0100000000   
             0000000101   
             0101010101   
             0101010101   
             0101010101   
             0101000000   
             0000000001   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0101010101   
             0101010101   
             0101010000   
             0000000000   
             0101010101   
             0101         
    0000032A 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'00,H'00,
             0101010101 +                       H'00,H'0C,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101050500 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             00000C0501 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    00000374              L292:
    00000374 496E207468             .SDATA      "In this game you can"
             6973206761   
             6D6520796F   
             752063616E   
    00000388 0A                     .DATA.B     H'0A
    00000389 77616C6B20             .SDATA      "walk through spikes"
             7468726F75   
             6768207370   
             696B6573     
    0000039C 0A                     .DATA.B     H'0A
    0000039D 776974686F             .SDATA      "without getting killed !"
             7574206765   
             7474696E67   
             206B696C6C   
             65642021     
    000003B5 00                     .DATA.B     H'00
    000003B6 00000002               .RES.W      1
    000003B8              L293:
    000003B8 49206C6965             .SDATA      "I lied."
             642E         
    000003BF 00                     .DATA.B     H'00
    000003C0              L294:
    000003C0 486D6D2E2E             .SDATA      "Hmm... It's going"
             2E20497427   
             7320676F69   
             6E67         
    000003D1 0A                     .DATA.B     H'0A
    000003D2 746F206265             .SDATA      "to be hard for you."
             2068617264   
             20666F7220   
             796F752E     
    000003E5 00                     .DATA.B     H'00
    000003E6              L297:
    000003E6 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'00,H'00,H'0C,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'05,
             0000000000 +                       H'00,H'00,H'05,H'00
             0000000000   
             0000000000   
             0000010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010100   
             0000000000   
             0000000000   
             0000000000   
             0000000005   
             00000C0101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0101010101   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0101010101   
             010101000B   
             0000000000   
             0005050000   
             0500         
    000004BA 0005000100             .DATA.B     H'00,H'05,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'00,H'01,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010100 +                       H'00,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'01,H'01,
             0001010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'05,H'05,H'05,
             0001010101 +                       H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0001000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101000001   
             0101010001   
             0101010001   
             0001010101   
             0101010101   
             0101010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0505050505   
             0505050505   
             0505050501   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    00000536 00000002               .RES.W      1
    00000538              L298:
    00000538 4E6F77206C             .SDATA      "Now let's try something"
             6574277320   
             7472792073   
             6F6D657468   
             696E67       
    0000054F 0A                     .DATA.B     H'0A
    00000550 6120626974             .SDATA      "a bit more difficult..."
             206D6F7265   
             2064696666   
             6963756C74   
             2E2E2E       
    00000567 00                     .DATA.B     H'00
    00000568              L299:
    00000568 416E642E2E             .SDATA      "And... you failed."
             2E20796F75   
             206661696C   
             65642E       
    0000057A 00                     .DATA.B     H'00
    0000057B 00000001               .RES.B      1
    0000057C              L300:
    0000057C 436F6D6520             .SDATA      "Come on..."
             6F6E2E2E2E   
    00000586 0A                     .DATA.B     H'0A
    00000587 5468697320             .SDATA      "This is not that difficult."
             6973206E6F   
             7420746861   
             7420646966   
             666963756C   
             742E         
    000005A2 00                     .DATA.B     H'00
    000005A3              L303:
    000005A3 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0C,H'05,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             01010C0500   
             0000000000   
             0101010101   
             0101010101   
             0100000000   
             0000010101   
             0101010101   
             0100000000   
             0000000001   
             0101010101   
             0101010000   
             0001000000   
             0001010101   
             0101010101   
             0000000000   
             0000050101   
             0101010101   
             0101000000   
             0000000101   
             0101010101   
             0101010105   
             0500000000   
             0000010101   
             0101010101   
             0101010100   
             0000000001   
             0101010101   
             0101010000   
             0000         
    00000677 0000050501             .DATA.B     H'00,H'00,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010000 +                       H'0B,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000101 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'05,H'05,H'01,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             00000B0000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101000001   
             0000000000   
             0101010101   
             0101010100   
             0001000000   
             0000010101   
             0101010101   
             0105050105   
             0505050501   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    000006F7 00000001               .RES.B      1
    000006F8              L304:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006F8 486F776479             .SDATA      "Howdy !"
             2021         
    000006FF 0A                     .DATA.B     H'0A
    00000700 5468697320             .SDATA      "This should be interesting"
             73686F756C   
             6420626520   
             696E746572   
             657374696E   
             67           
    0000071A 00                     .DATA.B     H'00
    0000071B 00000001               .RES.B      1
    0000071C              L305:
    0000071C 49206C696B             .SDATA      "I like it when you fall down."
             6520697420   
             7768656E20   
             796F752066   
             616C6C2064   
             6F776E2E     
    00000739 00                     .DATA.B     H'00
    0000073A 00000002               .RES.W      1
    0000073C              L306:
    0000073C 57726F6E67             .SDATA      "Wrong side, mate."
             2073696465   
             2C206D6174   
             652E         
    0000074D 00                     .DATA.B     H'00
    0000074E 00000002               .RES.W      1
    00000750              L307:
    00000750 416C6D6F73             .SDATA      "Almost there !"
             7420746865   
             72652021     
    0000075E 00                     .DATA.B     H'00
    0000075F 00000001               .RES.B      1
    00000760              L308:
    00000760 486176696E             .SDATA      "Having troubles ?"
             672074726F   
             75626C6573   
             203F         
    00000771 00                     .DATA.B     H'00
    00000772 00000002               .RES.W      1
    00000774              L309:
    00000774 5468697320             .SDATA      "This is fun, isn't it?"
             6973206675   
             6E2C206973   
             6E27742069   
             743F         
    0000078A 00                     .DATA.B     H'00
    0000078B              L312:
    0000078B 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0C,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0001010100 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'05,H'05,H'05,
             0000000000 +                       H'05,H'05,H'05,H'05,H'01,H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01
             0000000000   
             0001010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             01000B0000   
             0000000000   
             0000000000   
             0000000000   
             00000C0101   
             0101010101   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000010101   
             0101010101   
             0101050505   
             0505050505   
             0501050505   
             0505050101   
             0101010101   
             0101         
    0000085F 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    0000088F 00000001               .RES.B      1
    00000890              L314:
    00000890 0000003C00             .DATA.L     H'0000003C,H'00000018,H'00000020,H'00000000,H'00000002,H'0000003C,H'00000018,
             0000180000 +                       H'0000003C,H'00000037,H'00000068,H'00000028,H'00000010,H'00000002,H'00000000,
             0020000000 +                       H'00000068,H'00000028,H'00000097,H'00000028
             0000000002   
             0000003C00   
             0000180000   
             003C000000   
             3700000068   
             0000002800   
             0000100000   
             0002000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000068   
             0000002800   
             0000970000   
             0028         
    000008D8              L315:
    000008D8 4D6F76696E             .SDATA      "Moving platforms ?"
             6720706C61   
             74666F726D   
             73203F       
    000008EA 0A                     .DATA.B     H'0A
    000008EB 5468617427             .SDATA      "That's new..."
             73206E6577   
             2E2E2E       
    000008F8 00                     .DATA.B     H'00
    000008F9 00000001               .RES.B      1
    000008FA 00000002               .RES.W      1
    000008FC              L316:
    000008FC 4920746869             .SDATA      "I think you're in trouble."
             6E6B20796F   
             7527726520   
             696E207472   
             6F75626C65   
             2E           
    00000916 00                     .DATA.B     H'00
    00000917 00000001               .RES.B      1
    00000918              L317:
    00000918 5468726565             .SDATA      "Three tries ? Really ?"
             2074726965   
             73203F2052   
             65616C6C79   
             203F         
    0000092E 00                     .DATA.B     H'00
    0000092F              L320:
    0000092F 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'05,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'05,H'05,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'03,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'06,
             0005000000 +                       H'06,H'00,H'00,H'00,H'00,H'00,H'06,H'06,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0001010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'05,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000050500 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000003 +                       H'04,H'00,H'00,H'00,H'03,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01
             0101010101   
             0104000000   
             0001010101   
             0101010101   
             0400000000   
             0606000000   
             0000060600   
             0000000000   
             0101010101   
             0101010104   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000500   
             0000000000   
             0000000001   
             0101010101   
             0101010100   
             0000000101   
             0101010101   
             0101010000   
             0000000101   
             0101010101   
             0101000000   
             0001010101   
             0101010101   
             0101040000   
             0003010101   
             0101010101   
             0100000000   
             0101         
    00000A03 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'03,H'01,H'01,
             0101010104 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000301 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010100 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'0B,
             0101010000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'0C,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01
             0000010101   
             0101010101   
             0100000000   
             0101010101   
             0101010101   
             0100000000   
             0001010101   
             0101010101   
             000B000001   
             0101010101   
             0101010101   
             0000000000   
             0000000101   
             0101010101   
             0101010101   
             0101010101   
             0101010100   
             0000000000   
             000C010101   
             0101010101   
             0101010101   
             0101010101   
             0101010505   
             0505050101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101         
    00000AD7 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
    00000AFF 00000001               .RES.B      1
    00000B00              L322:
    00000B00 0000009C00             .DATA.L     H'0000009C,H'00000028,H'00000010,H'00000000,H'00000002,H'0000009C,H'00000028,
             0000280000 +                       H'0000009C,H'00000058
             0010000000   
             0000000002   
             0000009C00   
             0000280000   
             009C000000   
             58           
    00000B24              L323:
    00000B24 446F20796F             .SDATA      "Do you know my uncle Benny ?"
             75206B6E6F   
             77206D7920   
             756E636C65   
             2042656E6E   
             79203F       
    00000B40 00                     .DATA.B     H'00
    00000B41 00000001               .RES.B      1
    00000B42 00000002               .RES.W      1
    00000B44              L324:
    00000B44 5468617420             .SDATA      "That was fun."
             7761732066   
             756E2E       
    00000B51 0A                     .DATA.B     H'0A
    00000B52 446F206974             .SDATA      "Do it again, please !"
             2061676169   
             6E2C20706C   
             6561736520   
             21           
    00000B67 00                     .DATA.B     H'00
    00000B68              L327:
    00000B68 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'04,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'05,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'01,
             0101010101 +                       H'00,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'01,H'01,H'01,H'01,H'03,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,
             0000000001 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'04,H'01,H'00,H'01,
             0101040000 +                       H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'03,H'01,H'00,H'01,H'00,H'01,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'03,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'03,H'01,H'01,H'01,
             0000010101 +                       H'01,H'04,H'01,H'00
             0400000000   
             0000000000   
             0005000000   
             0000000000   
             0101010100   
             0100010001   
             0001010101   
             0100000000   
             0000000101   
             0101030100   
             0100010001   
             0101010100   
             0000000000   
             0001010101   
             0401000100   
             0100010101   
             0101000000   
             0000000001   
             0101010001   
             0001000100   
             0101010101   
             0000000000   
             0000010101   
             0103010001   
             0001030101   
             0101010400   
             0000000003   
             0101010104   
             0100         
    00000C3C 0105010001             .DATA.B     H'01,H'05,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'03,
             0101010104 +                       H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'04,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'03,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'01,H'01,
             0301010101 +                       H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'00,H'00,H'00,H'05,H'05,H'01,H'01,
             0001000101 +                       H'01,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0104010101 +                       H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010400 +                       H'01,H'01,H'01,H'01,H'01,H'06,H'06,H'06,H'00,H'06,H'06,H'06,H'01,H'01,H'01,H'01,
             0000030101 +                       H'00,H'05,H'00,H'0C,H'00,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101010001 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0001010100 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0505000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'06,H'06,H'06,H'06,
             0505010101 +                       H'06,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100010001 +                       H'01,H'01,H'01,H'00
             0001000101   
             0101010101   
             0100010101   
             0101010100   
             0000000000   
             0001010101   
             0106060600   
             0606060101   
             0101000500   
             0C00050501   
             0101010100   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001010101   
             0101010101   
             0101010101   
             0101000000   
             0000000001   
             0101010101   
             0101010101   
             0101010101   
             0000000000   
             0000010101   
             0101010101   
             0101010606   
             0606060000   
             0000000000   
             0101010101   
             0101010101   
             0100         
    00000D10 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'00,H'00,H'05,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'0B,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0005000005   
             0101010101   
             0000000000   
             0000000000   
             0000000001   
             0101010101   
             0101010000   
             0000000000   
             0000000000   
             0000010101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0101010101   
             0101010100   
             0000000000   
             0000000000   
             0000000101   
             0101010101   
             0101000000   
             0000000000   
             0000000000   
             0001010101   
             0101010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0B00000000   
             0000         
    00000DE4 0000010101             .DATA.B     H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    00000E1A 00000002               .RES.W      1
    00000E1C              L329:
    00000E1C 0000002000             .DATA.L     H'00000020,H'000000B0,H'00000008,H'00000000,H'00000002,H'00000020,H'000000B0,
             0000B00000 +                       H'00000020,H'000000D7,H'0000002F,H'000000B8,H'00000008,H'00000000,H'00000001,
             0008000000 +                       H'0000002F,H'000000B0,H'0000002F,H'000000D0,H'0000003F,H'000000C0,H'00000008,
             0000000002 +                       H'00000000,H'00000002,H'0000003F,H'000000B0,H'0000003F,H'000000C8,H'00000049,
             0000002000 +                       H'0000008B,H'0000000F,H'00000000,H'00000004,H'00000049,H'0000008B,H'00000049,
             0000B00000 +                       H'000000B8,H'0000005C,H'0000008B,H'00000008,H'00000000,H'00000002,H'0000005C,
             0020000000 +                       H'0000008B,H'0000005C,H'000000C8,H'00000068,H'000000B0,H'00000008,H'00000000,
             D70000002F +                       H'FFFFFFFE,H'00000068,H'00000090,H'00000068,H'000000B0,H'00000078,H'0000006B,
             000000B800 +                       H'00000028,H'00000000,H'00000002,H'00000078,H'0000006B,H'00000078,H'000000A0,
             0000080000 +                       H'00000080,H'00000020,H'00000018,H'00000000,H'00000002,H'00000080,H'00000020,
             0000000000 +                       H'00000080,H'00000040
             010000002F   
             000000B000   
             00002F0000   
             00D0000000   
             3F000000C0   
             0000000800   
             0000000000   
             0002000000   
             3F000000B0   
             0000003F00   
             0000C80000   
             0049000000   
             8B0000000F   
             0000000000   
             0000040000   
             0049000000   
             8B00000049   
             000000B800   
             00005C0000   
             008B000000   
             0800000000   
             0000000200   
             00005C0000   
             008B000000   
             5C000000C8   
             0000006800   
             0000B00000   
             0008000000   
             00FFFFFFFE   
             0000006800   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000900000   
             0068000000   
             B000000078   
             0000006B00   
             0000280000   
             0000000000   
             0200000078   
             0000006B00   
             0000780000   
             00A0000000   
             8000000020   
             0000001800   
             0000000000   
             0002000000   
             8000000020   
             0000008000   
             000040       
    00000F3C              L330:
    00000F3C 5768617420             .SDATA      "What a mess..."
             61206D6573   
             732E2E2E     
    00000F4A 00                     .DATA.B     H'00
    00000F4B 00000001               .RES.B      1
    00000F4C              L331:
    00000F4C 5768617420             .SDATA      "What are you doing here ?"
             6172652079   
             6F7520646F   
             696E672068   
             657265203F   
    00000F65 00                     .DATA.B     H'00
    00000F66 00000002               .RES.W      1
    00000F68              L332:
    00000F68 5769636820             .SDATA      "Wich path will you take ?"
             7061746820   
             77696C6C20   
             796F752074   
             616B65203F   
    00000F81 00                     .DATA.B     H'00
    00000F82 00000002               .RES.W      1
    00000F84              L333:
    00000F84 5472792061             .SDATA      "Try again."
             6761696E2E   
    00000F8E 00                     .DATA.B     H'00
    00000F8F 00000001               .RES.B      1
    00000F90              L334:
    00000F90 4E6F742074             .SDATA      "Not this one."
             686973206F   
             6E652E       
    00000F9D 00                     .DATA.B     H'00
    00000F9E 00000002               .RES.W      1
    00000FA0              L335:
    00000FA0 5665727920             .SDATA      "Very risky path..."
             7269736B79   
             2070617468   
             2E2E2E       
    00000FB2 00                     .DATA.B     H'00
    00000FB3 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FB4              L336:
    00000FB4 596F752073             .SDATA      "You shouldn't drink while"
             686F756C64   
             6E27742064   
             72696E6B20   
             7768696C65   
    00000FCD 0A                     .DATA.B     H'0A
    00000FCE 706C617969             .SDATA      "playing this game, you know..."
             6E67207468   
             6973206761   
             6D652C2079   
             6F75206B6E   
             6F772E2E2E   
    00000FEC 00                     .DATA.B     H'00
    00000FED 00000001               .RES.B      1
    00000FEE 00000002               .RES.W      1
    00000FF0              L337:
    00000FF0 446F6E2774             .SDATA      "Don't you have a life ?"
             20796F7520   
             6861766520   
             61206C6966   
             65203F       
    00001007 00                     .DATA.B     H'00
    00001008              L338:
    00001008 4D7920676F             .SDATA      "My god, you are patient."
             642C20796F   
             7520617265   
             2070617469   
             656E742E     
    00001020 00                     .DATA.B     H'00
    00001021              L341:
    00001021 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,
             0101010101 +                       H'00,H'0A,H'00,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010000 +                       H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'07,H'01,H'01,H'01,H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0C,
             0101010101 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0A00000000 +                       H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,
             0A00000000 +                       H'01,H'01,H'00,H'00
             0A00000000   
             0001010101   
             0800000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0100000000   
             0000000000   
             0701010108   
             0000000000   
             00000C0101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0101010000   
             0000000101   
             0100000000   
             0000000101   
             0100000000   
             0101010100   
             0000000001   
             0101050505   
             0505050501   
             0101000000   
             0001010101   
             0000         
    000010F5 0701010101             .DATA.B     H'07,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'05,H'05,H'01,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010100 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0B00000001 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101050505   
             0501010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01           
    00001173 00000001               .RES.B      1
    00001174              L342:
    00001174 4E65772074             .SDATA      "New toys for you !"
             6F79732066   
             6F7220796F   
             752021       
    00001186 0A                     .DATA.B     H'0A
    00001187 49276D2073             .SDATA      "I'm sure you'll like it."
             7572652079   
             6F75276C6C   
             206C696B65   
             2069742E     
    0000119F 00                     .DATA.B     H'00
    000011A0              L343:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011A0 4E61682C20             .SDATA      "Nah, I won't say a thing."
             4920776F6E   
             2774207361   
             7920612074   
             68696E672E   
    000011B9 0A                     .DATA.B     H'0A
    000011BA 49276C6C20             .SDATA      "I'll juste watch."
             6A75737465   
             2077617463   
             682E         
    000011CB 00                     .DATA.B     H'00
    000011CC              L344:
    000011CC 4973207468             .SDATA      "Is this princess"
             6973207072   
             696E636573   
             73           
    000011DC 0A                     .DATA.B     H'0A
    000011DD 7265616C6C             .SDATA      "really worth it ?"
             7920776F72   
             7468206974   
             203F         
    000011EE 00                     .DATA.B     H'00
    000011EF 00000001               .RES.B      1
    000011F0              L345:
    000011F0 4D79206C69             .SDATA      "My little sister plays"
             74746C6520   
             7369737465   
             7220706C61   
             7973         
    00001206 0A                     .DATA.B     H'0A
    00001207 6265747465             .SDATA      "better than you."
             7220746861   
             6E20796F75   
             2E           
    00001217 00                     .DATA.B     H'00
    00001218              L346:
    00001218 536F2C2068             .SDATA      "So, have you met"
             6176652079   
             6F75206D65   
             74           
    00001228 0A                     .DATA.B     H'0A
    00001229 6D7920756E             .SDATA      "my uncle Benny ?"
             636C652042   
             656E6E7920   
             3F           
    00001239 00                     .DATA.B     H'00
    0000123A              L349:
    0000123A 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'0C,H'00,H'00,H'00,H'00,H'07,H'01,H'01,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,H'00,
             00000A0000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,
             0000000001 +                       H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'0B,H'00,
             0001010100 +                       H'00,H'00,H'00,H'00
             0C00000000   
             0701010000   
             0000000101   
             0101010101   
             0800000000   
             0001010101   
             0101010101   
             0101080000   
             0000010101   
             0101010101   
             0101010108   
             0000000000   
             0101010101   
             0101010101   
             0108000000   
             0100010101   
             0101010101   
             0101010800   
             0000000001   
             0101010101   
             0101010101   
             0000000000   
             0101010101   
             0101010000   
             0000000000   
             0000000000   
             0000010101   
             000B000000   
             0000         
    0000130E 0100000000             .DATA.B     H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    00001339 00000001               .RES.B      1
    0000133A 00000002               .RES.W      1
    0000133C              L350:
    0000133C 53616D6520             .SDATA      "Same old story..."
             6F6C642073   
             746F72792E   
             2E2E         
    0000134D 00                     .DATA.B     H'00
    0000134E 00000002               .RES.W      1
    00001350              L351:
    00001350 5468652070             .SDATA      "The princess is await you,"
             72696E6365   
             7373206973   
             2061776169   
             7420796F75   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2C           
    0000136A 0A                     .DATA.B     H'0A
    0000136B 6875727279             .SDATA      "hurry !"
             2021         
    00001372 00                     .DATA.B     H'00
    00001373 00000001               .RES.B      1
    00001374              L352:
    00001374 596F752061             .SDATA      "You are going crazy,"
             726520676F   
             696E672063   
             72617A792C   
    00001388 0A                     .DATA.B     H'0A
    00001389 6172656E27             .SDATA      "aren't you ?"
             7420796F75   
             203F         
    00001395 00                     .DATA.B     H'00
    00001396 00000002               .RES.W      1
    00001398              L353:
    00001398 596F752073             .SDATA      "You sould take a break."
             6F756C6420   
             74616B6520   
             6120627265   
             616B2E       
    000013AF 0A                     .DATA.B     H'0A
    000013B0 5265616C6C             .SDATA      "Really."
             792E         
    000013B7 00                     .DATA.B     H'00
    000013B8              L354:
    000013B8 596F752061             .SDATA      "You are my hero."
             7265206D79   
             206865726F   
             2E           
    000013C8 00                     .DATA.B     H'00
    000013C9              L357:
    000013C9 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0D,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'08,H'00,H'00
             000D0D0101   
             0101010101   
             000B000000   
             0000000000   
             0000000000   
             00010D0101   
             0101010101   
             0101010108   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000010101   
             01010D0101   
             0101010101   
             0101010100   
             0000000000   
             0007010101   
             01010D0101   
             0101010101   
             0101010108   
             0000000000   
             0000010101   
             01010D0101   
             0101010101   
             0101010100   
             0000000000   
             0007010101   
             01010D0101   
             0101010101   
             0101010108   
             0000         
    0000149D 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'01,H'01,
             0D01010101 +                       H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,
             0101000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000007 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'0C,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'05,H'00,H'00,H'05,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0D01010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01
             0101010101   
             0D01010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             000C000000   
             0000000005   
             0000050000   
             0000000000   
             0000010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    00001540              L359:
    00001540 0000004900             .DATA.L     H'00000049,H'0000001E,H'00000010,H'00000002,H'00000000,H'00000049,H'0000001E,
             00001E0000 +                       H'00000077,H'0000001E
             0010000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0200000000   
             0000004900   
             00001E0000   
             0077000000   
             1E           
    00001564              L360:
    00001564 4C6F6F6B20             .SDATA      "Look for secrets."
             666F722073   
             6563726574   
             732E         
    00001575 00                     .DATA.B     H'00
    00001576 00000002               .RES.W      1
    00001578              L361:
    00001578 4974277320             .SDATA      "It's easier this way,"
             6561736965   
             7220746869   
             7320776179   
             2C           
    0000158D 0A                     .DATA.B     H'0A
    0000158E 69736E2774             .SDATA      "isn't it ?"
             206974203F   
    00001598 00                     .DATA.B     H'00
    00001599 00000001               .RES.B      1
    0000159A 00000002               .RES.W      1
    0000159C              L362:
    0000159C 536F6D6520             .SDATA      "Some walls aren't what"
             77616C6C73   
             206172656E   
             2774207768   
             6174         
    000015B2 0A                     .DATA.B     H'0A
    000015B3 7468657920             .SDATA      "they appear to be..."
             6170706561   
             7220746F20   
             62652E2E2E   
    000015C7 00                     .DATA.B     H'00
    000015C8              L365:
    000015C8 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'03,H'01,H'04,H'00,H'00,H'00,
             0101010101 +                       H'01,H'01,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'01,H'01,H'04,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'0B,
             0101010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000301 +                       H'00,H'00,H'00,H'0C,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0E,H'0E,H'01,H'01,
             0400000001 +                       H'0E,H'0E,H'01,H'01,H'0E,H'0E,H'01,H'01,H'01,H'0E,H'0E,H'01,H'01,H'01,H'01,H'01,
             010000000A +                       H'01,H'01,H'01,H'01
             0000000000   
             0001010101   
             0000000000   
             0000000003   
             0101040000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             010101000B   
             0000000000   
             0000000000   
             0000000000   
             000000000C   
             0101010101   
             0101010E0E   
             01010E0E01   
             010E0E0101   
             010E0E0101   
             0101010101   
             0101         
    0000169C 01010D0D01             .DATA.B     H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'01,H'0D,
             010D0D0101 +                       H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0D,H'0D,H'01,H'01,
             0D0D010101 +                       H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'01,H'0D,H'0D,H'01,H'01,H'01,H'01,H'01,
             0D0D010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,
             0101010101 +                       H'01,H'01,H'01,H'0D,H'0D,H'0D,H'0D,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010D0D +                       H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,
             01010D0D01 +                       H'01,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,
             010D0D0101 +                       H'01,H'01,H'0D,H'0D,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,
             010D0D0101 +                       H'01,H'01,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,H'0D,H'0D,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'0D,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             010101010D +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0D01010D0D +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             01010D0D01 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,
             01010D0D0D +                       H'00,H'00,H'00,H'00
             0D0D010101   
             0101010101   
             0D0D01010D   
             0D01010D0D   
             0101010101   
             01010D0101   
             0101010101   
             010D0D0101   
             0D0D01010D   
             0D01010101   
             0101010D01   
             0101010101   
             01010D0D01   
             010D0D0101   
             0D0D010101   
             010101010D   
             0101010100   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0001010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0100000000   
             0000         
    00001770 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'01,H'01,H'01,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'00,H'00,H'00,H'05,
             0000000000 +                       H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,
             0001010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0505050505 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0505050000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0005050505   
             0505050505   
             0505010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01           
    000017D0              L366:
    000017D0 4C65747320             .SDATA      "Lets crab some popcorn..."
             6372616220   
             736F6D6520   
             706F70636F   
             726E2E2E2E   
    000017E9 00                     .DATA.B     H'00
    000017EA 00000002               .RES.W      1
    000017EC              L367:
    000017EC 4F6F70732C             .SDATA      "Oops, I forgot to tell you"
             204920666F   
             72676F7420   
             746F207465   
             6C6C20796F   
             75           
    00001806 0A                     .DATA.B     H'0A
    00001807 61626F7574             .SDATA      "about the traps..."
             2074686520   
             7472617073   
             2E2E2E       
    00001819 00                     .DATA.B     H'00
    0000181A 00000002               .RES.W      1
    0000181C              L368:
    0000181C 4661746520             .SDATA      "Fate can be cruel sometimes."
             63616E2062   
             6520637275   
             656C20736F   
             6D6574696D   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             65732E       
    00001838 0A                     .DATA.B     H'0A
    00001839 4920646F6E             .SDATA      "I don't think you have a choice..."
             2774207468   
             696E6B2079   
             6F75206861   
             7665206120   
             63686F6963   
             652E2E2E     
    0000185B 00                     .DATA.B     H'00
    0000185C              L369:
    0000185C 4920746869             .SDATA      "I think you're starting to"
             6E6B20796F   
             7527726520   
             7374617274   
             696E672074   
             6F           
    00001876 0A                     .DATA.B     H'0A
    00001877 6C696B6520             .SDATA      "like this, aren't you ?"
             746869732C   
             206172656E   
             277420796F   
             75203F       
    0000188E 00                     .DATA.B     H'00
    0000188F 00000001               .RES.B      1
    00001890              L370:
    00001890 596F752066             .SDATA      "You found my secret room !"
             6F756E6420   
             6D79207365   
             6372657420   
             726F6F6D20   
             21           
    000018AA 00                     .DATA.B     H'00
    000018AB 00000001               .RES.B      1
    000018AC              L371:
    000018AC 4F72206E6F             .SDATA      "Or not."
             742E         
    000018B3 00                     .DATA.B     H'00
    000018B4              L374:
    000018B4 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'00,H'00,H'00,H'06,H'06,H'06,H'06,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0A,H'00,H'01,H'01,
             0101010101 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,
             0101010101 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,
             0101010101 +                       H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'00,H'0D,H'0D,H'0D,H'0D,
             0101010101 +                       H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'0D,H'00,H'00,H'0C,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000006 +                       H'01,H'01,H'01,H'01
             0606060000   
             0001010101   
             0101010101   
             0101010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             01010A0001   
             0101010000   
             0000000000   
             0000000101   
             0101010101   
             0101010101   
             0101010100   
             0001010101   
             0000000000   
             0000000001   
             0101010101   
             0101010101   
             0101010101   
             0100000101   
             0101000B00   
             0000000000   
             0F000D0D0D   
             0D0D0D0D0D   
             0D0D0D0D0D   
             0D0D00000C   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101         
    00001988 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    000019F4              L375:
    000019F4 596F752073             .SDATA      "You should run. Fast."
             686F756C64   
             2072756E2E   
             2046617374   
             2E           
    00001A09 00                     .DATA.B     H'00
    00001A0A 00000002               .RES.W      1
    00001A0C              L376:
    00001A0C 5468697320             .SDATA      "This was a fake princess !"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7761732061   
             2066616B65   
             207072696E   
             6365737320   
             21           
    00001A26 0A                     .DATA.B     H'0A
    00001A27 596F752776             .SDATA      "You've been fooled, kiddo."
             6520626565   
             6E20666F6F   
             6C65642C20   
             6B6964646F   
             2E           
    00001A41 00                     .DATA.B     H'00
    00001A42 00000002               .RES.W      1
    00001A44              L377:
    00001A44 4865726520             .SDATA      "Here is your princess !"
             697320796F   
             7572207072   
             696E636573   
             732021       
    00001A5B 00                     .DATA.B     H'00
    00001A5C              L380:
    00001A5C 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'01,H'01,H'01,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'07,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'05,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010108 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'05,H'00,H'00,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0C,H'01,H'01,
             0000000000 +                       H'01,H'01,H'00,H'01
             0000000000   
             0005010101   
             0001010101   
             0101010100   
             0000000000   
             0000000000   
             0001010101   
             0100000000   
             0000070101   
             0100000000   
             0000000000   
             0001010101   
             0101010101   
             0101010001   
             0101010500   
             0000000000   
             0000000F01   
             0101010000   
             0000000000   
             0101010101   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000101   
             0101010100   
             0000050000   
             0101010101   
             0101000000   
             0000000000   
             0C01010101   
             0001         
    00001B30 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'01,H'01,
             0000000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010108 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'0F,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'05,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0F01010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100010101 +                       H'01,H'01
             0101010000   
             0000000000   
             0101010101   
             0100000000   
             0000000101   
             0101010100   
             0000000000   
             00000F0101   
             0101000B00   
             0000000101   
             0101010101   
             0000000500   
             0000010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             010101       
    00001BE2 00000002               .RES.W      1
    00001BE4              L382:
    00001BE4 0000008800             .DATA.L     H'00000088,H'00000030,H'00000018,H'00000000,H'00000002,H'00000088,H'00000030,
             0000300000 +                       H'00000088,H'00000060
             0018000000   
             0000000002   
             0000008800   
             0000300000   
             0088000000   
             60           
    00001C08              L383:
    00001C08 5468697320             .SDATA      "This is like a supermarket !"
             6973206C69   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6B65206120   
             7375706572   
             6D61726B65   
             742021       
    00001C24 00                     .DATA.B     H'00
    00001C25 00000001               .RES.B      1
    00001C26 00000002               .RES.W      1
    00001C28              L384:
    00001C28 596F75206D             .SDATA      "You made it !"
             6164652069   
             742021       
    00001C35 0A                     .DATA.B     H'0A
    00001C36 4E6F77206D             .SDATA      "Now make your choice."
             616B652079   
             6F75722063   
             686F696365   
             2E           
    00001C4B 0A                     .DATA.B     H'0A
    00001C4C 5768696368             .SDATA      "Which one is the nicest ?"
             206F6E6520   
             6973207468   
             65206E6963   
             657374203F   
    00001C65 00                     .DATA.B     H'00
    00001C66 00000002               .RES.W      1
    00001C68              L385:
    00001C68 596F752072             .SDATA      "You really thought there was"
             65616C6C79   
             2074686F75   
             6768742074   
             6865726520   
             776173       
    00001C84 0A                     .DATA.B     H'0A
    00001C85 6120736563             .SDATA      "a secret here, don't you ?"
             7265742068   
             6572652C20   
             646F6E2774   
             20796F7520   
             3F           
    00001C9F 00                     .DATA.B     H'00
    00001CA0              L386:
    00001CA0 466F757274             .SDATA      "Fourth times is the good one,"
             682074696D   
             6573206973   
             2074686520   
             676F6F6420   
             6F6E652C     
    00001CBD 0A                     .DATA.B     H'0A
    00001CBE 6C696B6520             .SDATA      "like my uncle Benny says"
             6D7920756E   
             636C652042   
             656E6E7920   
             73617973     
    00001CD6 00                     .DATA.B     H'00
    00001CD7              L389:
    00001CD7 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'0A,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010101 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,H'01,H'01,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             01000A0000 +                       H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'06,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'01
             0000000000   
             0A01010101   
             0101010000   
             0001010101   
             0101010101   
             0101010101   
             0000000101   
             0101010101   
             0000010100   
             0000000000   
             000A000000   
             0101000000   
             0101010101   
             0101050000   
             0000000000   
             0000000000   
             0001010100   
             0000010101   
             0101010101   
             0101010100   
             0001010000   
             0000010101   
             0100000001   
             0101010101   
             0101010101   
             0100000101   
             0000000006   
             0101010000   
             0001         
    00001DAB 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'06,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010000 +                       H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0001010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,
             0101010000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101060000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000010101 +                       H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,
             0000000101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,
             0000010100 +                       H'00,H'01,H'01,H'01
             0000000101   
             0101000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0101010101   
             0101000001   
             0100000000   
             0001010100   
             0000010101   
             0101010101   
             0101010100   
             0001010100   
             0000000101   
             0100000001   
             0101010101   
             0101010101   
             0100000101   
             0000000000   
             0101010000   
             0001010101   
             0101010101   
             0101010000   
             0101000000   
             0001010101   
             0000000000   
             0001010101   
             0101010101   
             0000010100   
             0000000001   
             0101         
    00001E7F 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0001010101 +                       H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'01,H'01,H'00,H'00,
             0000010101 +                       H'00,H'00,H'0B,H'01,H'01,H'01,H'05,H'00,H'00,H'00,H'00,H'0C,H'01,H'01,H'01,H'01,
             0000000001 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01
             0101050501   
             0100000000   
             0B01010105   
             000000000C   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01           
    00001EF3 00000001               .RES.B      1
    00001EF4              L390:
    00001EF4 4D65742079             .SDATA      "Met your new friend :"
             6F7572206E   
             6577206672   
             69656E6420   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             3A           
    00001F09 0A                     .DATA.B     H'0A
    00001F0A 7468652047             .SDATA      "the Garbage Thrower."
             6172626167   
             6520546872   
             6F7765722E   
    00001F1E 00                     .DATA.B     H'00
    00001F1F 00000001               .RES.B      1
    00001F20              L391:
    00001F20 576F6F7073             .SDATA      "Woops."
             2E           
    00001F26 00                     .DATA.B     H'00
    00001F27 00000001               .RES.B      1
    00001F28              L392:
    00001F28 5468617420             .SDATA      "That was the stupidest"
             7761732074   
             6865207374   
             7570696465   
             7374         
    00001F3E 0A                     .DATA.B     H'0A
    00001F3F 7761792079             .SDATA      "way you could die."
             6F7520636F   
             756C642064   
             69652E       
    00001F51 00                     .DATA.B     H'00
    00001F52 00000002               .RES.W      1
    00001F54              L393:
    00001F54 596F752772             .SDATA      "You're better than that !"
             6520626574   
             7465722074   
             68616E2074   
             6861742021   
    00001F6D 00                     .DATA.B     H'00
    00001F6E              L396:
    00001F6E 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'0A,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'06,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101010101 +                       H'03,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'03,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'06,
             0101010101 +                       H'00,H'0A,H'0A,H'00,H'00,H'00,H'0A,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             010000000A +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'09,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'05,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000060000   
             0101010100   
             0000000000   
             0000000000   
             0000000005   
             0000000101   
             0101010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0101010100   
             0000000301   
             0101010000   
             0000000000   
             0000000000   
             0301010101   
             0101010000   
             0000000006   
             000A0A0000   
             000A010101   
             0101010101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000900   
             0000000000   
             0000000500   
             0000         
    00002042 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010100 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'05,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'07,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'0A,H'0A,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000050101 +                       H'00,H'06,H'06,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'08,H'00,H'00,H'0C,H'01,H'01,
             0101000701 +                       H'01,H'01,H'01,H'01,H'01,H'05,H'05,H'01,H'05,H'05,H'01,H'01,H'01,H'05,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'01,H'05,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'05,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0B00000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             000A0A0101 +                       H'01,H'01,H'01,H'01
             0101010000   
             0100000000   
             0006060000   
             0000000001   
             0800000C01   
             0101010101   
             0105050105   
             0501010105   
             0000000000   
             0000000501   
             0500000000   
             0000000005   
             0000000101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101         
    00002116 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             01           
    00002126 00000002               .RES.W      1
    00002128              L398:
    00002128 0000000100             .DATA.L     H'00000001,H'00000008,H'00000008,H'00000008,H'00000008,H'00000007
             0000080000   
             0008000000   
             0800000008   
             00000007     
    00002140              L399:
    00002140 596F752073             .SDATA      "You should hurry,"
             686F756C64   
             2068757272   
             792C         
    00002151 0A                     .DATA.B     H'0A
    00002152 6D79206672             .SDATA      "my friend Benny is here !"
             69656E6420   
             42656E6E79   
             2069732068   
             6572652021   
    0000216B 00                     .DATA.B     H'00
    0000216C              L400:
    0000216C 5768617420             .SDATA      "What ? Already ?"
             3F20416C72   
             6561647920   
             3F           
    0000217C 00                     .DATA.B     H'00
    0000217D 00000001               .RES.B      1
    0000217E 00000002               .RES.W      1
    00002180              L401:
    00002180 596F752073             .SDATA      "You should be"
             686F756C64   
             206265       
    0000218D 0A                     .DATA.B     H'0A
    0000218E 617368616D             .SDATA      "ashamed of yourself."
             6564206F66   
             20796F7572   
             73656C662E   
    000021A2 00                     .DATA.B     H'00
    000021A3 00000001               .RES.B      1
    000021A4              L402:
    000021A4 4265206361             .SDATA      "Be careful. The easiest way"
             726566756C   
             2E20546865   
             2065617369   
             6573742077   
             6179         
    000021BF 0A                     .DATA.B     H'0A
    000021C0 69736E2774             .SDATA      "isn't always the best one."




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             20616C7761   
             7973207468   
             6520626573   
             74206F6E65   
             2E           
    000021DA 00                     .DATA.B     H'00
    000021DB 00000001               .RES.B      1
    000021DC              L403:
    000021DC 546F6C6420             .SDATA      "Told you."
             796F752E     
    000021E5 00                     .DATA.B     H'00
    000021E6 00000002               .RES.W      1
    000021E8              L404:
    000021E8 4172652079             .SDATA      "Are you sure this"
             6F75207375   
             7265207468   
             6973         
    000021F9 0A                     .DATA.B     H'0A
    000021FA 6973207468             .SDATA      "is the right way ?"
             6520726967   
             6874207761   
             79203F       
    0000220C 00                     .DATA.B     H'00
    0000220D 00000001               .RES.B      1
    0000220E 00000002               .RES.W      1
    00002210              L405:
    00002210 5965702C20             .SDATA      "Yep, definitely not"
             646566696E   
             6974656C79   
             206E6F74     
    00002223 0A                     .DATA.B     H'0A
    00002224 7468652072             .SDATA      "the right way."
             6967687420   
             7761792E     
    00002232 00                     .DATA.B     H'00
    00002233 00000001               .RES.B      1
    00002234              L406:
    00002234 57726F6E67             .SDATA      "Wrong way. Or is it ?"
             207761792E   
             204F722069   
             7320697420   
             3F           
    00002249 00                     .DATA.B     H'00
    0000224A 00000002               .RES.W      1
    0000224C              L407:
    0000224C 52756E2072             .SDATA      "Run rabbit, run !"
             6162626974   
             2C2072756E   
             2021         
    0000225D 00                     .DATA.B     H'00
    0000225E              L410:
    0000225E 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'1B,H'00,H'00,H'0C,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0000010100   
             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0101000000   
             00001B0000   
             0C00000000   
             0001010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    000022EE 00000002               .RES.W      1
    000022F0              L411:
    000022F0 48656C6C6F             .SDATA      "Hellooo !"
             6F6F2021     
    000022F9 00                     .DATA.B     H'00
    000022FA 00000002               .RES.W      1
    000022FC              L412:
    000022FC 5768792061             .SDATA      "Why are you following"
             726520796F   
             7520666F6C   
             6C6F77696E   
             67           
    00002311 0A                     .DATA.B     H'0A
    00002312 6D65206C69             .SDATA      "me like this, sir ?"
             6B65207468   
             69732C2073   
             6972203F     
    00002325 00                     .DATA.B     H'00
    00002326 00000002               .RES.W      1
    00002328              L413:
    00002328 596F752772             .SDATA      "You're ugly, your head is"
             652075676C   
             792C20796F   
             7572206865   
             6164206973   
    00002341 0A                     .DATA.B     H'0A
    00002342 7368617065             .SDATA      "shaped like a square."
             64206C696B   
             6520612073   
             7175617265   
             2E           
    00002357 00                     .DATA.B     H'00
    00002358              L414:
    00002358 536F727279             .SDATA      "Sorry, my heart goes"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2C206D7920   
             6865617274   
             20676F6573   
    0000236C 0A                     .DATA.B     H'0A
    0000236D 746F206369             .SDATA      "to circle heads !"
             72636C6520   
             6865616473   
             2021         
    0000237E 00                     .DATA.B     H'00
    0000237F 00000001               .RES.B      1
    00002380              L415:
    00002380 2020202E2E             .SDATA      "   ...   "
             2E202020     
    00002389 00                     .DATA.B     H'00
    0000238A              L418:
    0000238A 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0101010100   
             0000000000   
             0000000000   
             0000000101   
             0101000B00   
             0000000000   
             0000000000   
             0001010101   
             0101010101   
             0000000000   
             0000000001   
             0101010101   
             0101010000   
             0000000000   
             0000010101   
             0101010101   
             0100000000   
             0000000000   
             0101010101   
             0101010100   
             0000000000   
             0000000101   
             0101010101   
             0101000000   
             0000000000   
             0001010101   
             0101010101   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000         
    0000245E 0000010101             .DATA.B     H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'0D,H'0D,H'0D,
             0101010100 +                       H'0D,H'0D,H'0D,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'0C,H'0D,
             0000000000 +                       H'0D,H'0D,H'0D,H'0D,H'0D,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'08,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'05,H'05,H'05
             0000000001   
             01010D0D0D   
             0D0D0D0000   
             0000000000   
             000001010C   
             0D0D0D0D0D   
             0D00000000   
             0000000000   
             0101010101   
             0101010100   
             0000000000   
             0000000101   
             0101010101   
             0101000000   
             0000000000   
             0001010101   
             0101010101   
             0000000000   
             0000000001   
             0101010101   
             0101010000   
             0000000000   
             0000010101   
             0101010101   
             0108000000   
             0000000007   
             0101010101   
             0101010105   
             0505         
    00002532 0505050505             .DATA.B     H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0501010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    0000255E 00000002               .RES.W      1
    00002560              L419:
    00002560 4920746869             .SDATA      "I think that the"
             6E6B207468   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             6174207468   
             65           
    00002570 0A                     .DATA.B     H'0A
    00002571 6C61737420             .SDATA      "last thing to do."
             7468696E67   
             20746F2064   
             6F2E         
    00002582 00                     .DATA.B     H'00
    00002583 00000001               .RES.B      1
    00002584              L420:
    00002584 4F6820676F             .SDATA      "Oh god, you found a secret !"
             642C20796F   
             7520666F75   
             6E64206120   
             7365637265   
             742021       
    000025A0 00                     .DATA.B     H'00
    000025A1              L423:
    000025A1 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'06,H'06,
             0101010101 +                       H'06,H'06,H'06,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0100060606 +                       H'0A,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'00,
             0606000000 +                       H'00,H'00,H'01,H'01
             0000000000   
             0000000701   
             0101010101   
             0101010000   
             0000000000   
             0101000101   
             0001010101   
             0101010101   
             0101010101   
             0000000000   
             0000010101   
             0101000101   
             0101010101   
             0101010101   
             0101000000   
             0000000001   
             0101010100   
             0101010101   
             0101010101   
             0101010100   
             0000000000   
             0001010101   
             0100010101   
             0101010101   
             01000A0000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0505050101   
             0101000000   
             0101         
    00002675 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0100000001 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0101010101 +                       H'01,H'01,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'07,H'01,H'07,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'05,H'05,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'06,H'00,H'00,H'0A,H'00,
             0101010000 +                       H'00,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0001010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'01,H'01,H'01,H'01,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101000101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'03,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'06,
             0000010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0701070101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'04,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'00,H'00
             0101010100   
             0101050501   
             0101010101   
             0101000000   
             000600000A   
             0000010101   
             0100010101   
             0101010101   
             0101010101   
             0000000000   
             0000000301   
             0101010001   
             0101010101   
             0101010101   
             0101010101   
             0000000000   
             0301010101   
             0000000006   
             0000000001   
             0101010101   
             0101010000   
             0000010101   
             0101000000   
             0000000000   
             0001010101   
             0101010101   
             0400000000   
             0101010101   
             0000         
    00002749 0101040000             .DATA.B     H'01,H'01,H'04,H'00,H'00,H'03,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0301010101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'05,H'05,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'06,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'03,H'01,H'00,H'00,H'01,H'01,H'01,H'01,
             0101010105 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'0A,
             0500000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000101 +                       H'00,H'00,H'00,H'00,H'06,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'03,H'01,H'00,
             0101010101 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101060000 +                       H'01,H'01,H'01,H'01,H'00,H'0C,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000010101 +                       H'01,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'03,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0003010000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'0B,H'00,H'00,H'00,H'00,H'00,H'05,H'05,
             0101010100 +                       H'00,H'01,H'01,H'01
             0000000101   
             010101000A   
             0000000000   
             0000010101   
             0101010101   
             0100000000   
             0601010101   
             0000000003   
             0100000001   
             0101010101   
             0101010100   
             0000000101   
             0101000C00   
             0000000000   
             0001010101   
             0000000101   
             0000000000   
             0101010103   
             0104000000   
             0000000101   
             0101000000   
             0000000000   
             0001010101   
             0100010000   
             0000000000   
             0101010100   
             0B00000000   
             0005050001   
             0101         
    0000281D 0105010505             .DATA.B     H'01,H'05,H'01,H'05,H'05,H'05,H'05,H'05,H'05,H'05,H'01,H'01,H'01,H'01,H'01,H'01,
             0505050505 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01           
    0000285F 00000001               .RES.B      1
    00002860              L425:
    00002860 0000004C00             .DATA.L     H'0000004C,H'0000001B,H'00000008,H'00000000,H'00000002,H'0000004C,H'0000001B,
             00001B0000 +                       H'0000004C,H'00000037,H'00000055,H'00000013,H'00000008,H'00000000,H'00000002,
             0008000000 +                       H'00000055,H'00000013,H'00000055,H'00000037,H'0000005E,H'00000018,H'00000010,
             0000000002 +                       H'00000000,H'00000002,H'0000005E,H'00000018,H'0000005E,H'00000020
             0000004C00   
             00001B0000   
             004C000000   
             3700000055   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000001300   
             0000080000   
             0000000000   
             0200000055   
             0000001300   
             0000550000   
             0037000000   
             5E00000018   
             0000001000   
             0000000000   
             0002000000   
             5E00000018   
             0000005E00   
             000020       
    000028CC              L426:
    000028CC 46696E616C             .SDATA      "Final step. Be careful."
             2073746570   
             2E20426520   
             6361726566   
             756C2E       
    000028E3 00                     .DATA.B     H'00
    000028E4              L429:
    000028E4 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0101010000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'1B,H'00,H'00,H'0C,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01
             0000010100   
             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0101000000   
             00001B0000   
             0C00000000   
             0001010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             0101010101   
             01010101     
    00002974              L430:
    00002974 4265206D79             .SDATA      "Be my wife !"
             2077696665   
             2021         
    00002980 00                     .DATA.B     H'00
    00002981 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002982 00000002               .RES.W      1
    00002984              L431:
    00002984 596561682C             .SDATA      "Yeah, ok. Wathever."
             206F6B2E20   
             5761746865   
             7665722E     
    00002997 00                     .DATA.B     H'00






















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 14-Jun-2013 09:15:33  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      846



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001738 Byte(s)
CONSTANT SECTION (C):                               00002998 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000040D0 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           10
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           2
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           212






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk8C79.tmp 

